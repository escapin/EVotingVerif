\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Apr 25 08:57:12 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:off , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Apr 25 08:57:12 CEST 2014
name=de.uni.trier.infsec.eVotingVerif.core.Setup[de.uni.trier.infsec.eVotingVerif.core.Setup\\:\\:createServer(int,int)].JML operation contract.0
contract=de.uni.trier.infsec.eVotingVerif.core.Setup[de.uni.trier.infsec.eVotingVerif.core.Setup\\:\\:createServer(int,int)].JML operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "1f808ab73a683dacc73a23aec78f73741925bebf"))
(keyLog "1" (keyUser "daniel" ) (keyVersion "1f808ab73a683dacc73a23aec78f73741925bebf"))

(autoModeTime "44776")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "11") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "11") (term "0,1,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "11") (term "0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "11") (term "0,1,0,0,0,1"))
(rule "eqSymm" (formula "11") (term "0,1,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "11") (term "0,1,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "11") (term "0,1,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "11") (term "0,1,1,1,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,1,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "disjointDefinition" (formula "9"))
(rule "assignment" (formula "11") (term "1"))
(builtin "One Step Simplification" (formula "11"))
(rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
(rule "elementOfUnion" (formula "11") (term "0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "11") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "11") (term "1,1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "11") (term "0,1,0,0,0,0,1,0,1"))
(rule "commuteIntersection" (formula "9") (term "0"))
(rule "intersectWithSingleton" (formula "9") (term "0"))
(builtin "One Step Simplification" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_createServer,savedHeapBefore_createServer"))
(builtin "One Step Simplification" (formula "11"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "serverSender"))
(builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_registerSender,result_0,exc_0,heapAfter_registerSender,anon_heap_registerSender") (contract "de.uni.trier.infsec.functionalities.amt.AMT[de.uni.trier.infsec.functionalities.amt.AMT::registerSender(int)].JML operation contract.0"))
(branch "Post (registerSender)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "11"))
   (rule "typeEqDerived" (formula "14") (term "0,1,1") (ifseqformula "11"))
   (rule "typeEqDerived" (formula "14") (term "0,1,0,1") (ifseqformula "11"))
   (rule "typeEqDerived" (formula "14") (term "0,1,0,0,1") (ifseqformula "11"))
   (rule "typeEqDerived" (formula "14") (term "0,0,0,0,0,1") (ifseqformula "11"))
   (rule "typeEqDerived" (formula "14") (term "0,1,0,0,0,1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")))
   (rule "true_left" (formula "14"))
   (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "16"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "18"))
   (rule "notLeft" (formula "19"))
   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "19"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "assignment" (formula "22") (term "1"))
   (builtin "One Step Simplification" (formula "22"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "serverReceiver"))
   (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_0"))
   (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "elementOfUnion" (formula "13") (term "0,0"))
   (rule "elementOfSingleton" (formula "13") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_0"))
   (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "eqSymm" (formula "16"))
   (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "hideAuxiliaryEq" (formula "16"))
   (rule "elementOfUnion" (formula "15") (term "0,0"))
   (rule "elementOfSingleton" (formula "15") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_0"))
   (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "eqSymm" (formula "17"))
   (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "hideAuxiliaryEq" (formula "17"))
   (rule "elementOfUnion" (formula "16") (term "0,0"))
   (rule "elementOfSingleton" (formula "16") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_0"))
   (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "eqSymm" (formula "18"))
   (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "18"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "hideAuxiliaryEq" (formula "18"))
   (rule "elementOfUnion" (formula "17") (term "0,0"))
   (rule "elementOfSingleton" (formula "17") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_0"))
   (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "eqSymm" (formula "19"))
   (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "hideAuxiliaryEq" (formula "19"))
   (rule "elementOfUnion" (formula "18") (term "0,0"))
   (rule "elementOfSingleton" (formula "18") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_0"))
   (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "eqSymm" (formula "20"))
   (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "20"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "hideAuxiliaryEq" (formula "20"))
   (rule "elementOfUnion" (formula "19") (term "0,0"))
   (rule "elementOfSingleton" (formula "19") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "commuteUnion" (formula "10") (term "1,0"))
   (rule "commuteUnion" (formula "14") (term "1"))
   (builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_registerReceiver,result_1,exc_1,heapAfter_registerReceiver,anon_heap_registerReceiver") (contract "de.uni.trier.infsec.functionalities.smt.SMT[de.uni.trier.infsec.functionalities.smt.SMT::registerReceiver(int)].JML operation contract.0"))
   (branch "Post (registerReceiver)"
      (builtin "One Step Simplification" (formula "25"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "replaceKnownSelect_taclet0_0" (formula "21") (term "0,1,0,0"))
      (rule "replaceKnownSelect_taclet9_0" (formula "21") (term "1,0,1,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet0_0" (formula "21") (term "0,1,0,1,1,0,1,1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1,0,1,0,1,1") (ifseqformula "10"))
      (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "21") (term "1,0,1,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet1_0" (formula "21") (term "1,0,1,1,1,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet7_0" (formula "21") (term "0,1,0,1,1,1,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet2_0" (formula "21") (term "1,0,1,1,1,1,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "21") (term "0,1,0,1,1,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet3_0" (formula "21") (term "1,0,1,1,1,1,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet5_0" (formula "21") (term "1,0,1,1,1,1,1,1,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "21") (term "1,0,1,1,1,1,1,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "21") (term "1,0,1,1,1,1,1,1,1,0,1,1"))
      (rule "andLeft" (formula "21"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,1,0") (ifseqformula "21"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1,1,0") (ifseqformula "10"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "typeEqDerived" (formula "24") (term "0,1,1,1") (ifseqformula "22"))
      (rule "typeEqDerived" (formula "24") (term "0,1,0,1,1") (ifseqformula "22"))
      (rule "typeEqDerived" (formula "24") (term "0,1,0,0,1,1") (ifseqformula "22"))
      (rule "typeEqDerived" (formula "24") (term "0,1,0,0,0,1,1") (ifseqformula "22"))
      (rule "typeEqDerived" (formula "24") (term "0,0,0,0,0,1,1") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "27"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "29"))
      (rule "notLeft" (formula "25"))
      (rule "notLeft" (formula "25"))
      (rule "andLeft" (formula "28"))
      (rule "orRight" (formula "31"))
      (rule "andLeft" (formula "29"))
      (rule "andLeft" (formula "30"))
      (rule "notLeft" (formula "31"))
      (rule "replace_known_right" (formula "23") (term "0,0,1") (ifseqformula "32"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")) (ifInst ""  (formula "33")))
      (rule "assignment" (formula "37") (term "1"))
      (builtin "One Step Simplification" (formula "37"))
      (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_1"))
      (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "replaceKnownSelect_taclet0_0" (formula "25") (term "2,0"))
      (rule "elementOfUnion" (formula "25") (term "0,0"))
      (rule "elementOfUnion" (formula "25") (term "1,0,0"))
      (rule "elementOfSingleton" (formula "25") (term "1,1,0,0"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfSingleton" (formula "25") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_1"))
      (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "replaceKnownSelect_taclet9_0" (formula "27") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "27") (term "2,0"))
      (rule "eqSymm" (formula "28"))
      (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "hideAuxiliaryEq" (formula "28"))
      (rule "elementOfUnion" (formula "27") (term "0,0"))
      (rule "elementOfUnion" (formula "27") (term "1,0,0"))
      (rule "elementOfSingleton" (formula "27") (term "1,1,0,0"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfSingleton" (formula "27") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_1"))
      (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "replaceKnownSelect_taclet7_0" (formula "28") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "28") (term "2,0"))
      (rule "eqSymm" (formula "29"))
      (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "29"))
      (rule "hideAuxiliaryEq" (formula "29"))
      (rule "elementOfUnion" (formula "28") (term "0,0"))
      (rule "elementOfUnion" (formula "28") (term "1,0,0"))
      (rule "elementOfSingleton" (formula "28") (term "0,1,0,0"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_1"))
      (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "replaceKnownSelect_taclet1_0" (formula "29") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet2_0" (formula "29") (term "2,0"))
      (rule "eqSymm" (formula "30"))
      (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "hideAuxiliaryEq" (formula "30"))
      (rule "elementOfUnion" (formula "29") (term "0,0"))
      (rule "elementOfUnion" (formula "29") (term "1,0,0"))
      (rule "elementOfSingleton" (formula "29") (term "0,1,0,0"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "elementOfSingleton" (formula "29") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_1"))
      (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "replaceKnownSelect_taclet3_0" (formula "30") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "30") (term "2,0"))
      (rule "eqSymm" (formula "31"))
      (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "31"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "hideAuxiliaryEq" (formula "31"))
      (rule "elementOfUnion" (formula "30") (term "0,0"))
      (rule "elementOfUnion" (formula "30") (term "1,0,0"))
      (rule "elementOfSingleton" (formula "30") (term "1,1,0,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfSingleton" (formula "30") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_1"))
      (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "replaceKnownSelect_taclet5_0" (formula "31") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "31") (term "2,0"))
      (rule "eqSymm" (formula "32"))
      (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "32"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "hideAuxiliaryEq" (formula "32"))
      (rule "elementOfUnion" (formula "31") (term "0,0"))
      (rule "elementOfUnion" (formula "31") (term "1,0,0"))
      (rule "elementOfSingleton" (formula "31") (term "0,1,0,0"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "elementOfSingleton" (formula "31") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "commuteUnion" (formula "21") (term "1,1,0"))
      (rule "returnUnfold" (formula "38") (term "1") (inst "#v0=s"))
      (rule "variableDeclarationAssign" (formula "38") (term "1"))
      (rule "variableDeclaration" (formula "38") (term "1") (newnames "s"))
      (rule "commuteUnion" (formula "21") (term "1,0"))
      (rule "lenNonNegative" (formula "8") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "lenNonNegative" (formula "9") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "9"))
      (rule "lenNonNegative" (formula "7") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "7"))
      (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
      (builtin "Use Operation Contract" (formula "39") (newnames "heapBefore_Server,self_0,exc_2,heapAfter_Server,anon_heap_Server") (contract "de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server::Server(int,int,de.uni.trier.infsec.functionalities.smt.Receiver,de.uni.trier.infsec.functionalities.amt.Sender)].JML operation contract.0"))
      (branch "Post (Server)"
         (builtin "One Step Simplification" (formula "41"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,1,0,1,0,1") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,1,0,1,0,1") (ifseqformula "11"))
         (rule "andLeft" (formula "34"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0,1,0") (ifseqformula "34"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,1,0,1,0") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,1,0,1,0") (ifseqformula "11"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "35"))
         (rule "typeEqDerived" (formula "37") (term "0,1,1,1") (ifseqformula "35"))
         (rule "typeEqDerived" (formula "37") (term "0,1,0,1,1") (ifseqformula "35"))
         (rule "typeEqDerived" (formula "37") (term "0,1,0,0,1,1") (ifseqformula "35"))
         (rule "typeEqDerived" (formula "37") (term "0,0,0,0,1,1") (ifseqformula "35"))
         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "35")) (ifInst ""  (formula "35")))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "40"))
         (rule "andLeft" (formula "37"))
         (rule "notLeft" (formula "36"))
         (rule "andLeft" (formula "41"))
         (rule "notLeft" (formula "36"))
         (rule "andLeft" (formula "41"))
         (rule "orRight" (formula "43"))
         (rule "andLeft" (formula "42"))
         (rule "orRight" (formula "44"))
         (rule "eqSymm" (formula "38"))
         (rule "eqSymm" (formula "39"))
         (rule "eqSymm" (formula "40"))
         (rule "replace_known_right" (formula "36") (term "0,0,0") (ifseqformula "44"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "45")) (ifInst ""  (formula "46")))
         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
         (rule "assignment" (formula "54") (term "1"))
         (builtin "One Step Simplification" (formula "54"))
         (rule "pullOutSelect" (formula "42") (term "1,0,0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_ballotCast_0"))
         (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "34"))
         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "48")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,1,0,0") (ifseqformula "11"))
         (rule "replace_known_right" (formula "42") (term "1,0,0,1,0,0") (ifseqformula "46"))
         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "45")) (ifInst ""  (formula "47")))
         (rule "applyEqReverse" (formula "43") (term "1,0,0,1,0") (ifseqformula "42"))
         (rule "hideAuxiliaryEq" (formula "42"))
         (rule "pullOutSelect" (formula "43") (term "1,0,1,0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_votesForCandidates_0"))
         (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "34"))
         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "48")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,1,0,0") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,1,0,0") (ifseqformula "11"))
         (rule "replace_known_right" (formula "43") (term "1,0,0,1,0,0") (ifseqformula "46"))
         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "45")) (ifInst ""  (formula "47")))
         (rule "applyEqReverse" (formula "44") (term "1,0,1,0") (ifseqformula "43"))
         (rule "hideAuxiliaryEq" (formula "43"))
         (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_numberOfVoters_0"))
         (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "34"))
         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "48")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0,0") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,1,0,0") (ifseqformula "11"))
         (rule "eqSymm" (formula "39"))
         (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "39"))
         (rule "hideAuxiliaryEq" (formula "39"))
         (rule "replace_known_right" (formula "38") (term "1,0,1,0,0") (ifseqformula "46"))
         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "44")) (ifInst ""  (formula "45")))
         (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_numberOfCandidates_0"))
         (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "34"))
         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "48")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,0") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,1,0,0") (ifseqformula "11"))
         (rule "eqSymm" (formula "40"))
         (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "40"))
         (rule "hideAuxiliaryEq" (formula "40"))
         (rule "replace_known_right" (formula "39") (term "1,0,1,0,0") (ifseqformula "46"))
         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "44")) (ifInst ""  (formula "45")))
         (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_receiver_0"))
         (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "34"))
         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "48")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0,0") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,1,0,0") (ifseqformula "11"))
         (rule "eqSymm" (formula "41"))
         (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "41"))
         (rule "hideAuxiliaryEq" (formula "41"))
         (rule "replace_known_right" (formula "40") (term "1,0,1,0,0") (ifseqformula "46"))
         (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "44")) (ifInst ""  (formula "45")))
         (rule "commute_and" (formula "42") (term "0,0"))
         (rule "commute_and" (formula "43") (term "0,0"))
         (rule "methodCallReturn" (formula "54") (term "1"))
         (rule "assignment" (formula "54") (term "1"))
         (builtin "One Step Simplification" (formula "54"))
         (rule "methodCallEmpty" (formula "54") (term "1"))
         (rule "tryEmpty" (formula "54") (term "1"))
         (rule "emptyModality" (formula "54") (term "1"))
         (rule "andRight" (formula "54"))
         (branch "Case 1"
            (rule "andRight" (formula "54"))
            (branch "Case 1"
               (rule "impRight" (formula "54"))
               (rule "andRight" (formula "55"))
               (branch "Case 1"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "55"))
                  (rule "true_left" (formula "1"))
                  (rule "replaceKnownSelect_taclet26_0" (formula "54") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "54") (term "0"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "closeTrue" (formula "54"))
               )
               (branch "Case 2"
                  (rule "andRight" (formula "55"))
                  (branch "Case 1"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "true_left" (formula "1"))
                     (rule "replaceKnownSelect_taclet28_0" (formula "54") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "54") (term "0"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "closeTrue" (formula "54"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "55"))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "42")))
                        (rule "closeTrue" (formula "55"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "55"))
                        (branch "Case 1"
                           (rule "allRight" (formula "55") (inst "sk=i_4") (userinteraction))
                           (rule "instAll" (formula "55") (term "0,0,0,1") (ifseqformula "43") (userinteraction))
                           (builtin "One Step Simplification" (formula "2"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "true_left" (formula "2"))
                           (rule "replaceKnownSelect_taclet22_0" (formula "55") (term "1,0,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "55") (term "1,0,0,1"))
                           (rule "impRight" (formula "55"))
                           (rule "notRight" (formula "56"))
                           (rule "andLeft" (formula "2"))
                           (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")) (ifInst ""  (formula "2")))
                           (rule "closeFalse" (formula "4"))
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "55"))
                           (branch "Case 1"
                              (rule "allRight" (formula "55") (inst "sk=i_3") (userinteraction))
                              (rule "instAll" (formula "55") (term "0,0,0,1") (ifseqformula "44") (userinteraction))
                              (builtin "One Step Simplification" (formula "2"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "2"))
                              (rule "replaceKnownSelect_taclet24_0" (formula "55") (term "1,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "55") (term "1,0,1"))
                              (rule "impRight" (formula "55"))
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")) (ifInst ""  (formula "57")))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "55"))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "true_left" (formula "1"))
                                 (rule "eqSymm" (formula "54"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "54") (inst "iv=iv"))
                                 (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1"))
                                 (rule "lenOfSeqConcat" (formula "54") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "polySimp_addComm0" (formula "54") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1"))
                                 (rule "getOfSeqConcat" (formula "54") (term "1,1,0,1"))
                                 (rule "eqSymm" (formula "54") (term "1,0,1"))
                                 (rule "polySimp_elimSub" (formula "54") (term "1,2,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "54") (term "0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,0,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "54") (term "1,2,0,1,0,1"))
                                 (rule "getOfSeqSingleton" (formula "54") (term "2,0,1,0,1"))
                                 (rule "castDel" (formula "54") (term "2,2,0,1,0,1"))
                                 (rule "castDel" (formula "54") (term "1,2,0,1,0,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "54") (term "0,2,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "1,0,2,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "54") (term "1,0,2,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "54") (term "0,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "54") (term "1,1,0,0,1,0,1"))
                                 (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_4"))
                                 (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "55") (term "0,1,1,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replaceKnownSelect_taclet14_0" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "1") (term "2,0"))
                                 (rule "polySimp_homoEq" (formula "55") (term "0"))
                                 (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "55") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                                 (rule "mul_literals" (formula "55") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "55") (term "1,1,0"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0"))
                                 (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "55") (term "0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "55") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "55") (term "0,1,1,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "polySimp_homoEq" (formula "54") (term "0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                 (rule "lenOfSeqConcat" (formula "54") (term "1,1,1,0,0,1"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "polySimp_addComm0" (formula "54") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "1,1,0,0,1"))
                                 (rule "add_literals" (formula "54") (term "0,1,1,0,0,1"))
                                 (rule "add_zero_left" (formula "54") (term "1,1,0,0,1"))
                                 (rule "lenOfSeqConcat" (formula "54") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "polySimp_addComm0" (formula "54") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                 (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "54") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "54") (term "0,0"))
                                 (rule "add_literals" (formula "54") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "54") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "allRight" (formula "54") (inst "sk=iv_2"))
                                 (rule "impRight" (formula "54"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "56") (term "0,2,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "56") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                                 (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0"))
                                 (rule "getOfSeqConcat" (formula "56") (term "1"))
                                 (rule "eqSymm" (formula "56"))
                                 (rule "polySimp_elimSub" (formula "56") (term "1,2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                                 (rule "getOfSeqSingleton" (formula "56") (term "2,0"))
                                 (rule "castDel" (formula "56") (term "2,2,0"))
                                 (rule "castDel" (formula "56") (term "1,2,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "56") (term "0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "0,0,2,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "0,0,2,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "56") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "56") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "56") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "closeTrue" (formula "56"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "55"))
                                 (branch "Case 1"
                                    (builtin "One Step Simplification" (formula "1"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "true_left" (formula "1"))
                                    (rule "eqSymm" (formula "54"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "54") (inst "iv=iv"))
                                    (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1"))
                                    (rule "pullOutSelect" (formula "54") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_sender_ids_2"))
                                    (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replaceKnownSelect_taclet12_0" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet13_0" (formula "1") (term "2,0"))
                                    (rule "eqSymm" (formula "55") (term "1,0,1"))
                                    (rule "eqSymm" (formula "55") (term "0"))
                                    (rule "elementOfUnion" (formula "1") (term "0,0"))
                                    (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "55") (term "0,1,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "allRight" (formula "55") (inst "sk=iv_1"))
                                    (rule "impRight" (formula "55"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "57") (term "0,1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "closeTrue" (formula "57"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "55"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "true_left" (formula "1"))
                                       (rule "eqSymm" (formula "54"))
                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "54") (inst "iv=iv"))
                                       (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1"))
                                       (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "9"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1"))
                                       (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_receiver_ids_2"))
                                       (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "55") (term "0,0,1,0,1") (ifseqformula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "replaceKnownSelect_taclet16_0" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet17_0" (formula "1") (term "2,0"))
                                       (rule "eqSymm" (formula "55") (term "0"))
                                       (rule "eqSymm" (formula "55") (term "1,0,1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "55") (term "0,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "55") (term "0,1,1,0,1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "54"))
                                       (rule "close" (formula "54") (ifseqformula "9"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "55"))
                                       (branch "Case 1"
                                          (builtin "One Step Simplification" (formula "1"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "true_left" (formula "1"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "54") (inst "iv=iv"))
                                          (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "7"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1"))
                                          (rule "pullOutSelect" (formula "54") (term "0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_sender_ids_2"))
                                          (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "55") (term "0,0,1,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "replaceKnownSelect_taclet18_0" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet19_0" (formula "1") (term "2,0"))
                                          (rule "eqSymm" (formula "55") (term "0"))
                                          (rule "eqSymm" (formula "55") (term "1,0,1"))
                                          (rule "elementOfUnion" (formula "1") (term "0,0"))
                                          (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "55") (term "0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "55") (term "0,1,1,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "55"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "close" (formula "54") (ifseqformula "7"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "55"))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "1"))
                                             (rule "eqSymm" (formula "54"))
                                             (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "54") (inst "iv=iv"))
                                             (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,1"))
                                             (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,1"))
                                             (rule "pullOutSelect" (formula "54") (term "0,0,1,0,1") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_messages_2"))
                                             (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "55") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replaceKnownSelect_taclet20_0" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet21_0" (formula "1") (term "2,0"))
                                             (rule "eqSymm" (formula "55") (term "1,0,1"))
                                             (rule "eqSymm" (formula "55") (term "0"))
                                             (rule "elementOfUnion" (formula "1") (term "0,0"))
                                             (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "55") (term "0,1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "allRight" (formula "55") (inst "sk=iv_0"))
                                             (rule "impRight" (formula "55"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "57") (term "0,1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "57"))
                                             (rule "closeTrue" (formula "57"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "55"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "1"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                                (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_2"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "replaceKnownSelect_taclet11_0" (formula "1") (term "2,0"))
                                                (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfSingleton" (formula "1") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "nnf_imp2or" (formula "43") (term "0"))
                                                (rule "nnf_imp2or" (formula "42") (term "0"))
                                                (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "43") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                                (rule "mul_literals" (formula "43") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "43") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "42") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                                (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                                (rule "commute_or" (formula "43") (term "0,0"))
                                                (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "25") (inst "i=i") (inst "r=r"))
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "replaceKnownSelect_taclet11_0" (formula "25") (term "0,1"))
                                                (rule "replaceKnownSelect_taclet14_0" (formula "25") (term "0,0,0,1,0,0,0"))
                                                (rule "replaceKnownSelect_taclet14_0" (formula "25") (term "0,1,1,0,0,0,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0,0,0,1,0") (ifseqformula "22"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "25") (term "0,0,0,1,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "25") (term "0,1,1,0,0,0,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "exLeft" (formula "25") (inst "sk=i_0"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "inEqSimp_ltToLeq" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "25"))
                                                (rule "disjointDefinition" (formula "29"))
                                                (rule "castedGetAny" (formula "27") (term "0"))
                                                (rule "lenOfSeqConcat" (formula "26") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "26") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                (rule "getOfSeqConcat" (formula "27") (term "0"))
                                                (rule "polySimp_elimSub" (formula "27") (term "1,2,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                                (rule "getOfSeqSingleton" (formula "27") (term "2,0"))
                                                (rule "castDel" (formula "27") (term "1,2,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "27") (term "0,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "0,0,2,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "0,0,2,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                                                (rule "pullOutSelect" (formula "28") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_0"))
                                                (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
                                                (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "22"))
                                                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "53")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0,0") (ifseqformula "11"))
                                                (rule "replace_known_right" (formula "28") (term "0,0,1,0,0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "55")))
                                                (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "28"))
                                                (rule "applyEqReverse" (formula "29") (term "1,0,0,0,0") (ifseqformula "28"))
                                                (rule "hideAuxiliaryEq" (formula "28"))
                                                (rule "nnf_imp2or" (formula "28") (term "0"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                                                (rule "nnf_notOr" (formula "28") (term "1,0,0,0"))
                                                (rule "nnf_notOr" (formula "28") (term "1,1,0,0,0"))
                                                (rule "nnf_notOr" (formula "28") (term "0,1,1,0,0,0"))
                                                (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "45"))
                                                (rule "replaceKnownSelect_taclet30_0" (formula "45") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "45") (term "1,1"))
                                                (rule "replaceKnownSelect_taclet30_0" (formula "45") (term "1,0,1,0"))
                                                (rule "replaceKnownSelect_taclet28_0" (formula "45") (term "1,1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "45") (term "1,0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "45") (term "1,1,0,0"))
                                                (rule "replaceKnownSelect_taclet26_0" (formula "45") (term "1,1,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "45") (term "1,1,0,0,0"))
                                                (rule "replaceKnownSelect_taclet28_0" (formula "45") (term "0,1,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "45") (term "0,1,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet24_0" (formula "45") (term "0,1,1,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet26_0" (formula "45") (term "0,1,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet22_0" (formula "45") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "45") (term "0,1,1,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "45") (term "0,1,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "45") (term "0,1,1,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet24_0" (formula "45") (term "0,1,1,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet22_0" (formula "45") (term "0,0,1,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet24_0" (formula "45") (term "0,1,1,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet30_0" (formula "45") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "45") (term "0,1,1,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "45") (term "0,0,1,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet22_0" (formula "45") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet24_0" (formula "45") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet22_0" (formula "45") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet32_0" (formula "45") (term "0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "45") (term "0,1,1,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet32_0" (formula "45") (term "0,1,0,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet24_0" (formula "45") (term "0,1,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "45") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet32_0" (formula "45") (term "0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet22_0" (formula "45") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "45") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "45") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "45") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "45") (term "0,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "45") (term "0,1,0,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "45") (term "0,1,1,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "45") (term "0,0,0,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "45") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "47"))
                                                (rule "notLeft" (formula "46"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "47"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "notLeft" (formula "47"))
                                                (rule "andLeft" (formula "47"))
                                                (rule "notLeft" (formula "46"))
                                                (rule "notLeft" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "andLeft" (formula "45"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "eqSymm" (formula "51"))
                                                (rule "inEqSimp_commuteLeq" (formula "54"))
                                                (rule "inEqSimp_commuteLeq" (formula "53"))
                                                (rule "disjointDefinition" (formula "50"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "notLeft" (formula "50"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "disjointDefinition" (formula "49"))
                                                (builtin "One Step Simplification" (formula "49"))
                                                (rule "notLeft" (formula "49"))
                                                (rule "eqSymm" (formula "55"))
                                                (rule "disjointDefinition" (formula "48"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "notLeft" (formula "48"))
                                                (rule "eqSymm" (formula "54"))
                                                (rule "disjointDefinition" (formula "47"))
                                                (rule "disjointDefinition" (formula "46"))
                                                (rule "disjointDefinition" (formula "45"))
                                                (rule "sortsDisjointModuloNull" (formula "56"))
                                                (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "58")))
                                                (rule "false_right" (formula "56"))
                                                (rule "sortsDisjointModuloNull" (formula "55"))
                                                (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "62")))
                                                (rule "false_right" (formula "55"))
                                                (rule "sortsDisjointModuloNull" (formula "54"))
                                                (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "61")))
                                                (rule "false_right" (formula "54"))
                                                (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_server_0"))
                                                (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,1,0,0") (ifseqformula "22"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,1,0,0") (ifseqformula "11"))
                                                (rule "eqSymm" (formula "51"))
                                                (rule "applyEqReverse" (formula "50") (term "1") (ifseqformula "51"))
                                                (rule "hideAuxiliaryEq" (formula "51"))
                                                (rule "replace_known_right" (formula "50") (term "1,0,0,1,0,0") (ifseqformula "63"))
                                                (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")) (ifInst ""  (formula "24")))
                                                (rule "elementOfUnion" (formula "50") (term "0,0"))
                                                (rule "elementOfSingleton" (formula "50") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")))
                                                (rule "elementOfSingleton" (formula "50") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_0"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "12"))
                                                (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                                (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "commute_or" (formula "52") (term "0,0"))
                                                (rule "commuteUnion" (formula "67") (term "1"))
                                                (rule "commute_or_2" (formula "28") (term "0,0"))
                                                (rule "commuteIntersection" (formula "29") (term "0"))
                                                (rule "ifthenelse_split" (formula "14") (term "0"))
                                                (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                                   (rule "applyEqReverse" (formula "31") (term "2,0,0") (ifseqformula "15"))
                                                   (rule "applyEqReverse" (formula "23") (term "1,1,0") (ifseqformula "15"))
                                                   (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "15"))
                                                   (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "15"))
                                                   (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "15"))
                                                   (rule "applyEqReverse" (formula "36") (term "2,0,0") (ifseqformula "15"))
                                                   (rule "applyEqReverse" (formula "33") (term "2,0,0") (ifseqformula "15"))
                                                   (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "15"))
                                                   (rule "applyEqReverse" (formula "31") (term "2,0") (ifseqformula "15"))
                                                   (rule "hideAuxiliaryEq" (formula "15"))
                                                   (rule "cut_direct" (formula "13") (term "0"))
                                                   (branch "CUT: result_0.<created> = TRUE TRUE"
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "commute_or_2" (formula "28") (term "0"))
                                                      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "51") (inst "i=i") (inst "r=r"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replaceKnownSelect_taclet32_0" (formula "51") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "51") (term "0,1"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,1,1,0,0,0,1,0") (ifseqformula "22"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                      (rule "andLeft" (formula "51"))
                                                      (rule "andLeft" (formula "51"))
                                                      (rule "exLeft" (formula "51") (inst "sk=i_2"))
                                                      (rule "andLeft" (formula "51"))
                                                      (rule "andLeft" (formula "51"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "51"))
                                                      (rule "disjointDefinition" (formula "55"))
                                                      (rule "castedGetAny" (formula "53") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                                      (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                      (rule "pullOutSelect" (formula "54") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_2"))
                                                      (rule "applyEq" (formula "53") (term "1") (ifseqformula "54"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "38"))
                                                      (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "66")))
                                                      (rule "replaceKnownSelect_taclet34_0" (formula "54") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "54") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,0,0") (ifseqformula "22"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (rule "replace_known_left" (formula "54") (term "1,0,1,0,0") (ifseqformula "24"))
                                                      (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                                                      (rule "elementOfUnion" (formula "54") (term "0,0"))
                                                      (rule "elementOfSingleton" (formula "54") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "66")))
                                                      (rule "elementOfSingleton" (formula "54") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "54"))
                                                      (rule "applyEqReverse" (formula "55") (term "1,0,0,0,0") (ifseqformula "54"))
                                                      (rule "hideAuxiliaryEq" (formula "54"))
                                                      (rule "pullOutSelect" (formula "53") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_3"))
                                                      (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "53"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "38"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replaceKnownSelect_taclet14_0" (formula "53") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "53") (term "2,0"))
                                                      (rule "elementOfUnion" (formula "53") (term "0,0"))
                                                      (rule "elementOfSingleton" (formula "53") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "elementOfSingleton" (formula "53") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "53"))
                                                      (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "53"))
                                                      (rule "hideAuxiliaryEq" (formula "53"))
                                                      (rule "lenOfSeqConcat" (formula "52") (term "0"))
                                                      (builtin "One Step Simplification" (formula "52"))
                                                      (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "52"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                      (rule "mul_literals" (formula "52") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                                      (rule "add_literals" (formula "52") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "52") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                                      (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                      (rule "getOfSeqConcat" (formula "53") (term "0"))
                                                      (rule "polySimp_elimSub" (formula "53") (term "1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                                      (rule "getOfSeqSingleton" (formula "53") (term "2,0"))
                                                      (rule "castDel" (formula "53") (term "1,2,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "53") (term "0,2,0"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0,0,2,0"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "0,0,2,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "0,0,0"))
                                                      (rule "nnf_imp2or" (formula "54") (term "0"))
                                                      (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "nnf_notAnd" (formula "54") (term "0,0,0"))
                                                      (rule "nnf_notOr" (formula "54") (term "1,0,0,0"))
                                                      (rule "nnf_notOr" (formula "54") (term "1,1,0,0,0"))
                                                      (rule "nnf_notOr" (formula "54") (term "0,1,1,0,0,0"))
                                                      (rule "nnf_notOr" (formula "54") (term "0,0,1,1,0,0,0"))
                                                      (rule "commuteIntersection" (formula "47") (term "0"))
                                                      (rule "commuteIntersection" (formula "46") (term "0"))
                                                      (rule "commuteIntersection" (formula "45") (term "0"))
                                                      (rule "commute_or" (formula "28") (term "0,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1"))
                                                      (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                                                      (rule "lenOfSeqConcat" (formula "34") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "34") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "commuteUnion" (formula "31") (term "1"))
                                                      (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                                      (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_0 TRUE"
                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26"))
                                                         (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "1,0"))
                                                         (rule "times_zero_1" (formula "26") (term "0"))
                                                         (rule "leq_literals" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "26"))
                                                         (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                                         (rule "applyEq" (formula "53") (term "0,0,2,0") (ifseqformula "26"))
                                                         (rule "eqSymm" (formula "53") (term "0,2,0"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "26"))
                                                         (rule "inEqSimp_commuteGeq" (formula "52"))
                                                         (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "27") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "eqSymm" (formula "27"))
                                                         (rule "applyEq" (formula "54") (term "1,0,0,0,0,0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "53") (term "1") (ifseqformula "27"))
                                                         (rule "ifEqualsInteger" (formula "53"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "28") (term "1,0,1,0,0,0") (ifseqformula "27"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "52"))
                                                         (rule "times_zero_1" (formula "51") (term "0,0"))
                                                         (rule "add_zero_left" (formula "51") (term "0"))
                                                         (rule "inEqSimp_notLeq" (formula "53") (term "0,1"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "53") (term "0,0,0,0,1"))
                                                         (rule "add_zero_left" (formula "53") (term "0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,0,1"))
                                                         (rule "commute_and_2" (formula "28") (term "1,1,0"))
                                                         (rule "commuteIntersection" (formula "55") (term "0"))
                                                         (rule "subsetToElementOfRight" (formula "70") (inst "fv=fv") (inst "ov=ov"))
                                                         (rule "allRight" (formula "70") (inst "sk=ov_3"))
                                                         (rule "allRight" (formula "70") (inst "sk=fv_3"))
                                                         (rule "impRight" (formula "70"))
                                                         (rule "elementOfUnion" (formula "71"))
                                                         (builtin "One Step Simplification" (formula "71"))
                                                         (rule "orRight" (formula "71"))
                                                         (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                         (rule "elementOfUnion" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                         (rule "elementOfSubsetOfUnion2" (formula "1") (term "1") (ifseqformula "17") (ifseqformula "77"))
                                                         (rule "elementOfIntersect" (formula "1") (term "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "orRight" (formula "59"))
                                                         (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "59")))
                                                         (rule "closeTrue" (formula "79"))
                                                      )
                                                      (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_0 FALSE"
                                                         (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "58"))
                                                         (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "26"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                                         (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "58") (term "0,0"))
                                                         (rule "leq_literals" (formula "58") (term "0"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "false_right" (formula "58"))
                                                         (rule "commute_and_2" (formula "28") (term "1,1,0"))
                                                         (rule "commuteIntersection" (formula "55") (term "0"))
                                                         (rule "commute_or_2" (formula "54") (term "0,0"))
                                                         (rule "commute_or_2" (formula "28") (term "0,0"))
                                                         (rule "subsetToElementOfRight" (formula "70") (inst "fv=fv") (inst "ov=ov"))
                                                         (rule "allRight" (formula "70") (inst "sk=ov_2"))
                                                         (rule "allRight" (formula "70") (inst "sk=fv_2"))
                                                         (rule "impRight" (formula "70"))
                                                         (rule "elementOfUnion" (formula "71"))
                                                         (builtin "One Step Simplification" (formula "71"))
                                                         (rule "orRight" (formula "71"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                         (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "elementOfUnion" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                         (rule "elementOfSubsetOfUnion2" (formula "1") (term "1") (ifseqformula "17") (ifseqformula "77"))
                                                         (rule "elementOfIntersect" (formula "1") (term "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "orRight" (formula "58"))
                                                         (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "58")))
                                                         (rule "closeTrue" (formula "79"))
                                                      )
                                                   )
                                                   (branch "CUT: result_0.<created> = TRUE FALSE"
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "commute_or_2" (formula "28") (term "0"))
                                                      (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "51") (inst "i=i") (inst "r=r"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replaceKnownSelect_taclet32_0" (formula "51") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet33_0" (formula "51") (term "0,1"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "1,1,0,0,0,1,0") (ifseqformula "38"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,1,1,0,0,0,1,0") (ifseqformula "22"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "11"))
                                                      (rule "andLeft" (formula "51"))
                                                      (rule "andLeft" (formula "51"))
                                                      (rule "exLeft" (formula "51") (inst "sk=i_1"))
                                                      (rule "andLeft" (formula "51"))
                                                      (rule "andLeft" (formula "51"))
                                                      (rule "inEqSimp_ltToLeq" (formula "52"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "51"))
                                                      (rule "disjointDefinition" (formula "55"))
                                                      (rule "castedGetAny" (formula "53") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                                      (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                      (rule "pullOutSelect" (formula "54") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_1"))
                                                      (rule "applyEq" (formula "53") (term "1") (ifseqformula "54"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "38"))
                                                      (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "67")))
                                                      (rule "replaceKnownSelect_taclet34_0" (formula "54") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet35_0" (formula "54") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,0,0") (ifseqformula "22"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (rule "replace_known_left" (formula "54") (term "1,0,1,0,0") (ifseqformula "24"))
                                                      (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "68")) (ifInst ""  (formula "69")))
                                                      (rule "elementOfUnion" (formula "54") (term "0,0"))
                                                      (rule "elementOfSingleton" (formula "54") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "67")))
                                                      (rule "elementOfSingleton" (formula "54") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEqReverse" (formula "55") (term "1,0,0,0,0") (ifseqformula "54"))
                                                      (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "54"))
                                                      (rule "hideAuxiliaryEq" (formula "54"))
                                                      (rule "pullOutSelect" (formula "53") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_2"))
                                                      (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "53"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "38"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replaceKnownSelect_taclet14_0" (formula "53") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "53") (term "2,0"))
                                                      (rule "elementOfUnion" (formula "53") (term "0,0"))
                                                      (rule "elementOfSingleton" (formula "53") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "elementOfSingleton" (formula "53") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "53"))
                                                      (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "53"))
                                                      (rule "hideAuxiliaryEq" (formula "53"))
                                                      (rule "lenOfSeqConcat" (formula "52") (term "0"))
                                                      (builtin "One Step Simplification" (formula "52"))
                                                      (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "52"))
                                                      (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                      (rule "mul_literals" (formula "52") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                                      (rule "add_literals" (formula "52") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "52") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                                      (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                      (rule "getOfSeqConcat" (formula "53") (term "0"))
                                                      (rule "polySimp_elimSub" (formula "53") (term "1,2,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                                      (rule "getOfSeqSingleton" (formula "53") (term "2,0"))
                                                      (rule "castDel" (formula "53") (term "1,2,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "53") (term "0,2,0"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0,0,2,0"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "0,0,2,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "0,0,0"))
                                                      (rule "nnf_imp2or" (formula "54") (term "0"))
                                                      (rule "nnf_notAnd" (formula "54") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "nnf_notAnd" (formula "54") (term "0,0,0"))
                                                      (rule "nnf_notOr" (formula "54") (term "1,0,0,0"))
                                                      (rule "nnf_notOr" (formula "54") (term "1,1,0,0,0"))
                                                      (rule "nnf_notOr" (formula "54") (term "0,1,1,0,0,0"))
                                                      (rule "nnf_notOr" (formula "54") (term "0,0,1,1,0,0,0"))
                                                      (rule "commuteIntersection" (formula "47") (term "0"))
                                                      (rule "commuteIntersection" (formula "46") (term "0"))
                                                      (rule "commuteIntersection" (formula "45") (term "0"))
                                                      (rule "commute_or" (formula "28") (term "0,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "33") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "1"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1"))
                                                      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "35"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_homoEq" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0"))
                                                      (rule "add_literals" (formula "33") (term "1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "34"))
                                                      (rule "lenOfSeqConcat" (formula "33") (term "0,1,0,0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "33") (term "1,1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                      (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "commuteUnion" (formula "31") (term "1"))
                                                      (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                                      (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_0 TRUE"
                                                         (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26"))
                                                         (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "1,0"))
                                                         (rule "times_zero_1" (formula "26") (term "0"))
                                                         (rule "leq_literals" (formula "26"))
                                                         (rule "true_left" (formula "26"))
                                                         (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "26"))
                                                         (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                                         (rule "applyEq" (formula "53") (term "0,0,2,0") (ifseqformula "26"))
                                                         (rule "eqSymm" (formula "53") (term "0,2,0"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "26"))
                                                         (rule "inEqSimp_commuteGeq" (formula "52"))
                                                         (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                                         (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                         (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "27") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "eqSymm" (formula "27"))
                                                         (rule "applyEq" (formula "53") (term "1") (ifseqformula "27"))
                                                         (rule "ifEqualsInteger" (formula "53"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "54") (term "1,0,0,0,0,0") (ifseqformula "27"))
                                                         (rule "applyEq" (formula "28") (term "1,0,1,0,0,0") (ifseqformula "27"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "52"))
                                                         (rule "times_zero_1" (formula "51") (term "0,0"))
                                                         (rule "add_zero_left" (formula "51") (term "0"))
                                                         (rule "inEqSimp_notLeq" (formula "53") (term "0,1"))
                                                         (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,1"))
                                                         (rule "mul_literals" (formula "53") (term "0,1,0,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "53") (term "0,0,0,0,1"))
                                                         (rule "add_zero_left" (formula "53") (term "0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "53") (term "1,0,1"))
                                                         (rule "commute_and_2" (formula "28") (term "1,1,0"))
                                                         (rule "commuteIntersection" (formula "55") (term "0"))
                                                         (rule "subsetToElementOfRight" (formula "71") (inst "fv=fv") (inst "ov=ov"))
                                                         (rule "allRight" (formula "71") (inst "sk=ov_1"))
                                                         (rule "allRight" (formula "71") (inst "sk=fv_1"))
                                                         (rule "impRight" (formula "71"))
                                                         (rule "elementOfUnion" (formula "72"))
                                                         (builtin "One Step Simplification" (formula "72"))
                                                         (rule "orRight" (formula "72"))
                                                         (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                         (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "elementOfUnion" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                         (rule "elementOfSubsetOfUnion2" (formula "1") (term "1") (ifseqformula "17") (ifseqformula "78"))
                                                         (rule "elementOfIntersect" (formula "1") (term "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "2"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "orRight" (formula "59"))
                                                         (rule "replace_known_right" (formula "80") (term "0,0") (ifseqformula "58"))
                                                         (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "59")))
                                                         (rule "closeTrue" (formula "80"))
                                                      )
                                                      (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_0 FALSE"
                                                         (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "58"))
                                                         (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "26"))
                                                         (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                                         (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                         (rule "add_literals" (formula "58") (term "0,0"))
                                                         (rule "leq_literals" (formula "58") (term "0"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "false_right" (formula "58"))
                                                         (rule "commute_and_2" (formula "28") (term "1,1,0"))
                                                         (rule "commuteIntersection" (formula "55") (term "0"))
                                                         (rule "commute_or_2" (formula "54") (term "0,0"))
                                                         (rule "commute_or_2" (formula "28") (term "0,0"))
                                                         (rule "subsetToElementOfRight" (formula "71") (inst "fv=fv") (inst "ov=ov"))
                                                         (rule "allRight" (formula "71") (inst "sk=ov_0"))
                                                         (rule "allRight" (formula "71") (inst "sk=fv_0"))
                                                         (rule "impRight" (formula "71"))
                                                         (rule "elementOfUnion" (formula "72"))
                                                         (builtin "One Step Simplification" (formula "72"))
                                                         (rule "orRight" (formula "72"))
                                                         (rule "disjointNotInOtherLocset2" (formula "1") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "58"))
                                                         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
                                                         (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "47"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "disjointNotInOtherLocset2" (formula "2") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "59"))
                                                         (rule "elementOfUnion" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                                         (rule "elementOfSubsetOfUnion2" (formula "1") (term "1") (ifseqformula "17") (ifseqformula "78"))
                                                         (rule "elementOfIntersect" (formula "1") (term "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "59"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "orRight" (formula "58"))
                                                         (rule "replace_known_right" (formula "80") (term "0,0") (ifseqformula "60"))
                                                         (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "58")))
                                                         (rule "closeTrue" (formula "80"))
                                                      )
                                                   )
                                                )
                                                (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                                   (rule "applyEqReverse" (formula "32") (term "2,0,0") (ifseqformula "14"))
                                                   (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "14"))
                                                   (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "14"))
                                                   (rule "applyEqReverse" (formula "34") (term "2,0,0") (ifseqformula "14"))
                                                   (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "14"))
                                                   (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "14"))
                                                   (rule "applyEqReverse" (formula "29") (term "2,0,0") (ifseqformula "14"))
                                                   (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "14"))
                                                   (rule "hideAuxiliaryEq" (formula "14"))
                                                   (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "52"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "28"))
                                                   (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "65"))
                                                   (rule "closeTrue" (formula "65"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (builtin "One Step Simplification" (formula "1"))
                                                (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "48")))
                                                (rule "closeTrue" (formula "55"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "impRight" (formula "54"))
               (rule "orRight" (formula "55"))
               (rule "orRight" (formula "55"))
               (rule "orRight" (formula "55"))
               (rule "orRight" (formula "55"))
               (rule "orRight" (formula "55"))
               (rule "orRight" (formula "55"))
               (rule "orRight" (formula "55"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Case 2"
            (builtin "One Step Simplification" (formula "54"))
            (rule "allRight" (formula "54") (inst "sk=f_5") (userinteraction))
            (rule "allRight" (formula "54") (inst "sk=o_5") (userinteraction))
            (rule "orRight" (formula "54"))
            (rule "orRight" (formula "54"))
            (rule "orRight" (formula "54"))
            (rule "orRight" (formula "55"))
            (rule "andRight" (formula "55"))
            (branch "Case 1"
               (rule "andRight" (formula "56"))
               (branch "Case 1"
                  (rule "andRight" (formula "56"))
                  (branch "Case 1"
                     (rule "notRight" (formula "56"))
                     (rule "close" (formula "56") (ifseqformula "1"))
                  )
                  (branch "Case 2"
                     (rule "notRight" (formula "56"))
                     (rule "eqSymm" (formula "57"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                     (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=f_5_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "eqSymm" (formula "58"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                     (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0") (ifseqformula "18") (ifseqformula "57"))
                     (rule "elementOfIntersect" (formula "1") (term "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "4")))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "3")))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "17") (ifseqformula "57"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "elementOfIntersect" (formula "46"))
                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "47")))
                     (rule "false_right" (formula "46"))
                     (rule "nnf_imp2or" (formula "45") (term "0"))
                     (rule "nnf_imp2or" (formula "44") (term "0"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                     (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "44") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "43"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "43") (term "1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "43") (term "1,1"))
                     (rule "replaceKnownSelect_taclet28_0" (formula "43") (term "1,1,0,0"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "43") (term "1,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "43") (term "1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "43") (term "1,0,1,0"))
                     (rule "replaceKnownSelect_taclet26_0" (formula "43") (term "1,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "43") (term "1,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet28_0" (formula "43") (term "0,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "43") (term "0,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet26_0" (formula "43") (term "0,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "43") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "43") (term "0,1,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "43") (term "0,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "43") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "43") (term "0,1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "43") (term "0,0,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "43") (term "0,1,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "43") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "43") (term "0,1,1,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "43") (term "0,0,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "43") (term "0,1,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "43") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "43") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "43") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "43") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "43") (term "0,1,1,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "43") (term "0,1,1,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "43") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "43") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "43") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "43") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "43") (term "0,1,1,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "43") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "43"))
                     (rule "notLeft" (formula "45"))
                     (rule "andLeft" (formula "45"))
                     (rule "andLeft" (formula "43"))
                     (rule "notLeft" (formula "45"))
                     (rule "andLeft" (formula "45"))
                     (rule "notLeft" (formula "43"))
                     (rule "notLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "eqSymm" (formula "50"))
                     (rule "eqSymm" (formula "49"))
                     (rule "inEqSimp_commuteLeq" (formula "52"))
                     (rule "inEqSimp_commuteLeq" (formula "51"))
                     (rule "disjointDefinition" (formula "48"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "notLeft" (formula "48"))
                     (rule "eqSymm" (formula "54"))
                     (rule "disjointDefinition" (formula "47"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "notLeft" (formula "47"))
                     (rule "eqSymm" (formula "53"))
                     (rule "disjointDefinition" (formula "46"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "notLeft" (formula "46"))
                     (rule "eqSymm" (formula "52"))
                     (rule "disjointDefinition" (formula "45"))
                     (rule "disjointDefinition" (formula "43"))
                     (rule "disjointDefinition" (formula "44"))
                     (rule "sortsDisjointModuloNull" (formula "54"))
                     (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "56"))
                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "55")))
                     (rule "false_right" (formula "54"))
                     (rule "sortsDisjointModuloNull" (formula "53"))
                     (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "61"))
                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "54")))
                     (rule "false_right" (formula "53"))
                     (rule "sortsDisjointModuloNull" (formula "52"))
                     (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "60"))
                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "54")))
                     (rule "false_right" (formula "52"))
                     (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_server_4"))
                     (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "61")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "eqSymm" (formula "49"))
                     (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "49"))
                     (rule "hideAuxiliaryEq" (formula "49"))
                     (rule "replace_known_left" (formula "48") (term "1,0,1,0,0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "61")) (ifInst ""  (formula "62")))
                     (rule "elementOfUnion" (formula "48") (term "0,0"))
                     (rule "elementOfSingleton" (formula "48") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_4"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "59")))
                     (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "45") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_6"))
                     (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                     (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                     (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "replaceKnownSelect_taclet11_0" (formula "45") (term "2,0"))
                     (rule "elementOfUnion" (formula "45") (term "0,0"))
                     (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "elementOfSingleton" (formula "45") (term "0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "45"))
                     (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                     (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "45"))
                     (rule "hideAuxiliaryEq" (formula "45"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "27") (inst "i=i") (inst "r=r"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "replaceKnownSelect_taclet11_0" (formula "27") (term "0,1"))
                     (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "24"))
                     (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1,0,0,0,1,0") (ifseqformula "13"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "exLeft" (formula "27") (inst "sk=i_18"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "27"))
                     (rule "disjointDefinition" (formula "31"))
                     (rule "castedGetAny" (formula "29") (term "0"))
                     (rule "lenOfSeqConcat" (formula "28") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "getOfSeqConcat" (formula "29") (term "0"))
                     (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "29") (term "2,0"))
                     (rule "castDel" (formula "29") (term "1,2,0"))
                     (rule "polySimp_sepNegMonomial" (formula "29") (term "0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "30") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_16"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                     (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "65")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "13"))
                     (rule "replace_known_right" (formula "30") (term "1,0,1,0,0") (ifseqformula "67"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "66")))
                     (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "1,0,0,0,0") (ifseqformula "30"))
                     (rule "hideAuxiliaryEq" (formula "30"))
                     (rule "nnf_imp2or" (formula "30") (term "0"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "0,1,1,0,0,0"))
                     (rule "commute_or" (formula "55") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0"))
                     (rule "commute_or" (formula "54") (term "0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "53") (inst "i=i") (inst "r=r"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "replaceKnownSelect_taclet40_0" (formula "53") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet41_0" (formula "53") (term "0,1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "1,1,0,0,0,1,0") (ifseqformula "40"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,1,0,0,0,1,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "13"))
                     (rule "andLeft" (formula "53"))
                     (rule "andLeft" (formula "53"))
                     (rule "exLeft" (formula "53") (inst "sk=i_19"))
                     (rule "andLeft" (formula "53"))
                     (rule "andLeft" (formula "53"))
                     (rule "inEqSimp_ltToLeq" (formula "54"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "54") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "53"))
                     (rule "disjointDefinition" (formula "57"))
                     (rule "castedGetAny" (formula "55") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                     (rule "polySimp_elimOne" (formula "54") (term "0"))
                     (rule "pullOutSelect" (formula "56") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_17"))
                     (rule "applyEq" (formula "55") (term "1") (ifseqformula "56"))
                     (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "68")))
                     (rule "replaceKnownSelect_taclet42_0" (formula "56") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "56") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "56") (term "1,0,1,0,0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "69")) (ifInst ""  (formula "70")))
                     (rule "elementOfUnion" (formula "56") (term "0,0"))
                     (rule "elementOfSingleton" (formula "56") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "68")))
                     (rule "elementOfSingleton" (formula "56") (term "0,0"))
                     (builtin "One Step Simplification" (formula "56"))
                     (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "56"))
                     (rule "applyEqReverse" (formula "57") (term "1,0,0,0,0") (ifseqformula "56"))
                     (rule "hideAuxiliaryEq" (formula "56"))
                     (rule "pullOutSelect" (formula "55") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_9"))
                     (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "55"))
                     (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "replaceKnownSelect_taclet14_0" (formula "55") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "55") (term "2,0"))
                     (rule "elementOfUnion" (formula "55") (term "0,0"))
                     (rule "elementOfSingleton" (formula "55") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "elementOfSingleton" (formula "55") (term "0,0"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "55"))
                     (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "55"))
                     (rule "hideAuxiliaryEq" (formula "55"))
                     (rule "lenOfSeqConcat" (formula "54") (term "0"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "polySimp_addComm0" (formula "54") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "54"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                     (rule "mul_literals" (formula "54") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "54") (term "0"))
                     (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                     (rule "add_literals" (formula "54") (term "0,0,0"))
                     (rule "add_zero_left" (formula "54") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                     (rule "polySimp_elimOne" (formula "54") (term "0"))
                     (rule "getOfSeqConcat" (formula "55") (term "0"))
                     (rule "polySimp_elimSub" (formula "55") (term "1,2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "55") (term "2,0"))
                     (rule "castDel" (formula "55") (term "1,2,0"))
                     (rule "polySimp_sepNegMonomial" (formula "55") (term "0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "55") (term "0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "55") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "56") (term "0"))
                     (rule "nnf_notAnd" (formula "56") (term "0,0"))
                     (builtin "One Step Simplification" (formula "56"))
                     (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "56") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "56") (term "1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "56") (term "0,1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "56") (term "0,0,1,1,0,0,0"))
                     (rule "ifthenelse_split" (formula "16") (term "0"))
                     (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                        (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "38") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "33") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "63") (term "2") (ifseqformula "17"))
                        (rule "hideAuxiliaryEq" (formula "17"))
                        (rule "elementOfSubsetOfUnion2" (formula "62") (ifseqformula "17") (ifseqformula "73"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "elementOfIntersect" (formula "59"))
                        (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")))
                        (rule "false_right" (formula "59"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "commuteIntersection" (formula "47") (term "0"))
                           (rule "commuteIntersection" (formula "49") (term "0"))
                           (rule "commuteIntersection" (formula "48") (term "0"))
                           (rule "commute_or_2" (formula "30") (term "0,0"))
                           (rule "commuteIntersection" (formula "31") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                           (rule "andLeft" (formula "35"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addComm0" (formula "35") (term "1"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                           (rule "lenOfSeqConcat" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_homoEq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                           (rule "add_literals" (formula "35") (term "1,0"))
                           (rule "times_zero_1" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0"))
                           (rule "commute_or_2" (formula "30") (term "0"))
                           (rule "commute_or_2" (formula "56") (term "0"))
                           (rule "commuteUnion" (formula "33") (term "1"))
                           (rule "commute_or" (formula "30") (term "0,0,0"))
                           (rule "commute_or_2" (formula "30") (term "0,0"))
                           (rule "commute_or" (formula "56") (term "0,0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0"))
                           (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                           (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                           (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "true_left" (formula "51"))
                           (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                           (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                           (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "true_left" (formula "50"))
                           (rule "cnf_rightDist" (formula "30") (term "0"))
                           (rule "distr_forallAnd" (formula "30"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "commute_or" (formula "30") (term "0"))
                           (rule "cnf_rightDist" (formula "56") (term "0"))
                           (rule "distr_forallAnd" (formula "56"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "commute_or" (formula "56") (term "0"))
                           (rule "ifthenelse_split" (formula "29") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_18 TRUE"
                              (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "eqSymm" (formula "30"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "55") (term "0,0,2,0") (ifseqformula "28"))
                              (rule "eqSymm" (formula "55") (term "0,2,0"))
                              (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                              (rule "applyEq" (formula "54") (term "0") (ifseqformula "28"))
                              (rule "inEqSimp_commuteGeq" (formula "54"))
                              (rule "applyEq" (formula "30") (term "1,0,1,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "55") (term "1") (ifseqformula "29"))
                              (rule "ifEqualsInteger" (formula "55"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "applyEq" (formula "56") (term "1,0,1,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                              (rule "times_zero_1" (formula "53") (term "0,0"))
                              (rule "add_zero_left" (formula "53") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "55") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,1"))
                              (rule "commute_and_2" (formula "30") (term "1,0"))
                              (rule "commute_and_2" (formula "56") (term "1,0"))
                              (rule "cnf_rightDist" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or" (formula "55"))
                              (rule "cnf_rightDist" (formula "56"))
                              (rule "andLeft" (formula "56"))
                              (rule "commute_or_2" (formula "56"))
                              (rule "shift_paren_or" (formula "57"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "56") (term "0"))
                              (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "54"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,0,0"))
                              (rule "add_literals" (formula "56") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "56") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "inEqSimp_or_tautInEq2" (formula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "55") (term "0,1"))
                              (rule "add_literals" (formula "55") (term "1,0,1"))
                              (rule "times_zero_1" (formula "55") (term "0,1"))
                              (rule "leq_literals" (formula "55") (term "1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "commute_or" (formula "55"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "59") (term "0"))
                              (rule "distr_forallAnd" (formula "59"))
                              (rule "andLeft" (formula "59"))
                              (rule "shift_paren_or" (formula "60") (term "0"))
                              (rule "commute_or" (formula "60") (term "0,0"))
                              (rule "cnf_rightDist" (formula "59") (term "0"))
                              (rule "distr_forallAnd" (formula "59"))
                              (rule "andLeft" (formula "59"))
                              (rule "commute_or_2" (formula "59") (term "0"))
                              (rule "shift_paren_or" (formula "60") (term "0"))
                              (rule "commute_or" (formula "60") (term "0,0"))
                              (rule "ifthenelse_split" (formula "34") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                 (rule "hideAuxiliaryEq" (formula "35"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "34"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "34"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "83"))
                                    (rule "applyEq" (formula "83") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "83") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "83") (term "0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "70") (term "1") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "66") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "66"))
                                    (rule "false_right" (formula "66"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "75") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "82") (ifseqformula "1"))
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "82"))
                                    (rule "applyEqRigid" (formula "82") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "82"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "75") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "81") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_18 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "59"))
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                              (rule "add_literals" (formula "59") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "59") (term "1,0,0"))
                              (rule "add_literals" (formula "59") (term "0,0"))
                              (rule "leq_literals" (formula "59") (term "0"))
                              (builtin "One Step Simplification" (formula "59"))
                              (rule "false_right" (formula "59"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "57") (term "0"))
                              (rule "distr_forallAnd" (formula "57"))
                              (rule "andLeft" (formula "57"))
                              (rule "shift_paren_or" (formula "58") (term "0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "commute_or_2" (formula "58") (term "0"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "ifthenelse_split" (formula "57") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_19 TRUE"
                                 (rule "applyEq" (formula "56") (term "0") (ifseqformula "57"))
                                 (rule "inEqSimp_homoInEq1" (formula "56"))
                                 (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                 (rule "add_literals" (formula "56") (term "1,0"))
                                 (rule "times_zero_1" (formula "56") (term "0"))
                                 (rule "leq_literals" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                 (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                 (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "57") (term "0,0,0"))
                                 (rule "leq_literals" (formula "57") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "eqSymm" (formula "57"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "56"))
                                 (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "61") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "60") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "29") (term "1") (ifseqformula "57"))
                                 (rule "ifthenelse_split" (formula "34") (term "0"))
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                    (rule "elementOfUnion" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "82") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "69") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "81") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "81"))
                                       (rule "applyEqRigid" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "68") (term "0") (ifseqformula "2"))
                                       (rule "disjointAllFields" (formula "68") (ifseqformula "34"))
                                       (rule "false_right" (formula "68"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "73") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "80") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_19 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "56") (ifseqformula "64"))
                                 (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "56"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                 (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0"))
                                 (rule "leq_literals" (formula "64") (term "0"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "false_right" (formula "64"))
                                 (rule "ifthenelse_split" (formula "34") (term "0"))
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                    (rule "elementOfUnion" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEqRigid" (formula "82") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "69") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "81") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "81"))
                                       (rule "applyEqRigid" (formula "81") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "81") (term "0") (ifseqformula "40"))
                                       (rule "eqSymm" (formula "81"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "80") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "commuteIntersection" (formula "47") (term "0"))
                           (rule "commuteIntersection" (formula "49") (term "0"))
                           (rule "commuteIntersection" (formula "48") (term "0"))
                           (rule "commute_or_2" (formula "30") (term "0,0"))
                           (rule "commuteIntersection" (formula "31") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                           (rule "andLeft" (formula "35"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addComm0" (formula "35") (term "1"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                           (rule "lenOfSeqConcat" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_homoEq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                           (rule "add_literals" (formula "35") (term "1,0"))
                           (rule "times_zero_1" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0"))
                           (rule "commute_or_2" (formula "30") (term "0"))
                           (rule "commute_or_2" (formula "56") (term "0"))
                           (rule "commuteUnion" (formula "33") (term "1"))
                           (rule "commute_or" (formula "30") (term "0,0,0"))
                           (rule "commute_or_2" (formula "30") (term "0,0"))
                           (rule "commute_or" (formula "56") (term "0,0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0"))
                           (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "true_left" (formula "51"))
                           (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                           (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                           (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                           (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                           (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "true_left" (formula "50"))
                           (rule "cnf_rightDist" (formula "30") (term "0"))
                           (rule "distr_forallAnd" (formula "30"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "castDel" (formula "30") (term "0,1,0,0,0"))
                           (rule "castDel" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "commute_or" (formula "30") (term "0"))
                           (rule "cnf_rightDist" (formula "56") (term "0"))
                           (rule "distr_forallAnd" (formula "56"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "castDel" (formula "56") (term "1,0,0,1,0,0"))
                           (rule "castDel" (formula "56") (term "0,1,0,0,0"))
                           (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "commute_or" (formula "56") (term "0"))
                           (rule "ifthenelse_split" (formula "29") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_18 TRUE"
                              (rule "applyEq" (formula "55") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_commuteGeq" (formula "55"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "eqSymm" (formula "29"))
                              (rule "applyEq" (formula "55") (term "0,0,2,0") (ifseqformula "28"))
                              (rule "eqSymm" (formula "55") (term "0,2,0"))
                              (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                              (rule "applyEq" (formula "56") (term "1,0,1,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "30") (term "1,0,1,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "55") (term "1") (ifseqformula "29"))
                              (rule "ifEqualsInteger" (formula "55"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                              (rule "times_zero_1" (formula "53") (term "0,0"))
                              (rule "add_zero_left" (formula "53") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "55") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,1"))
                              (rule "commute_and_2" (formula "30") (term "1,0"))
                              (rule "commute_and_2" (formula "56") (term "1,0"))
                              (rule "cnf_rightDist" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or" (formula "55"))
                              (rule "cnf_rightDist" (formula "56"))
                              (rule "andLeft" (formula "56"))
                              (rule "commute_or_2" (formula "56"))
                              (rule "shift_paren_or" (formula "57"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "56") (term "0"))
                              (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "54"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,0,0"))
                              (rule "add_literals" (formula "56") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "56") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "inEqSimp_or_tautInEq2" (formula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "55") (term "0,1"))
                              (rule "add_literals" (formula "55") (term "1,0,1"))
                              (rule "times_zero_1" (formula "55") (term "0,1"))
                              (rule "leq_literals" (formula "55") (term "1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "commute_or" (formula "55"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "59") (term "0"))
                              (rule "distr_forallAnd" (formula "59"))
                              (rule "andLeft" (formula "59"))
                              (rule "shift_paren_or" (formula "60") (term "0"))
                              (rule "commute_or" (formula "60") (term "0,0"))
                              (rule "cnf_rightDist" (formula "59") (term "0"))
                              (rule "distr_forallAnd" (formula "59"))
                              (rule "andLeft" (formula "59"))
                              (rule "commute_or_2" (formula "59") (term "0"))
                              (rule "shift_paren_or" (formula "60") (term "0"))
                              (rule "commute_or" (formula "60") (term "0,0"))
                              (rule "ifthenelse_split" (formula "34") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                 (rule "hideAuxiliaryEq" (formula "35"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "34"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "34"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "84") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "84") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "84") (term "0") (ifseqformula "42"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "66"))
                                    (rule "false_right" (formula "66"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "70") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "76") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "83") (ifseqformula "1"))
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "83"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "70") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "70") (ifseqformula "34"))
                                    (rule "false_right" (formula "70"))
                                    (rule "applyEq" (formula "80") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "75") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "82") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_18 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "59"))
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                              (rule "add_literals" (formula "59") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "59") (term "1,0,0"))
                              (rule "add_literals" (formula "59") (term "0,0"))
                              (rule "leq_literals" (formula "59") (term "0"))
                              (builtin "One Step Simplification" (formula "59"))
                              (rule "false_right" (formula "59"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "57") (term "0"))
                              (rule "distr_forallAnd" (formula "57"))
                              (rule "andLeft" (formula "57"))
                              (rule "shift_paren_or" (formula "58") (term "0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "commute_or_2" (formula "58") (term "0"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "ifthenelse_split" (formula "57") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_19 TRUE"
                                 (rule "applyEq" (formula "56") (term "0") (ifseqformula "57"))
                                 (rule "inEqSimp_homoInEq1" (formula "56"))
                                 (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                 (rule "add_literals" (formula "56") (term "1,0"))
                                 (rule "times_zero_1" (formula "56") (term "0"))
                                 (rule "leq_literals" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "56"))
                                 (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                 (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                 (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "57") (term "0,0,0"))
                                 (rule "leq_literals" (formula "57") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "eqSymm" (formula "57"))
                                 (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "29") (term "1") (ifseqformula "57"))
                                 (rule "applyEq" (formula "60") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "61") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "ifthenelse_split" (formula "34") (term "0"))
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                    (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                    (rule "elementOfUnion" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEq" (formula "82") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "70") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "70") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "81") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "81") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "81") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "81"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "75") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEq" (formula "81") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "81") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "81") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_19 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "56") (ifseqformula "64"))
                                 (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "56"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                 (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0"))
                                 (rule "leq_literals" (formula "64") (term "0"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "false_right" (formula "64"))
                                 (rule "ifthenelse_split" (formula "34") (term "0"))
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                    (rule "elementOfUnion" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "69") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "80") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "81") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "81") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "81"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "75") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                    (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEq" (formula "81") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "81") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "81") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "81") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "81") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "81") (term "0") (ifseqformula "40"))
                                       (rule "applyEqRigid" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "81") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                        (rule "applyEqReverse" (formula "34") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "63") (term "2") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "36") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "32") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "32") (term "2,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "36") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "16"))
                        (rule "hideAuxiliaryEq" (formula "16"))
                        (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "57"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "30"))
                        (rule "hideAuxiliaryEq" (formula "30"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                           (rule "andLeft" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "31") (term "1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_addComm0" (formula "31") (term "1"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_homoEq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,0"))
                           (rule "times_zero_1" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "52") (term "0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "commute_or_2" (formula "52") (term "0"))
                           (rule "commuteIntersection" (formula "43") (term "0"))
                           (rule "commute_or" (formula "28") (term "0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "commute_or" (formula "52") (term "0,0,0"))
                           (rule "commute_or_2" (formula "52") (term "0,0"))
                           (rule "commuteIntersection" (formula "29") (term "0"))
                           (rule "commuteIntersection" (formula "44") (term "0"))
                           (rule "commuteIntersection" (formula "45") (term "0"))
                           (rule "arrayLengthNotNegative" (formula "47") (term "0"))
                           (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                           (rule "arrayLengthIsAnInt" (formula "47") (term "0"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "commute_or" (formula "28") (term "0"))
                           (rule "cnf_rightDist" (formula "52") (term "0"))
                           (rule "distr_forallAnd" (formula "52"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "castDel" (formula "52") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "commute_or" (formula "52") (term "0"))
                           (rule "ifthenelse_split" (formula "27") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_18 TRUE"
                              (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                              (rule "applyEq" (formula "52") (term "0,0,2,0") (ifseqformula "27"))
                              (rule "eqSymm" (formula "52") (term "0,2,0"))
                              (rule "applyEq" (formula "51") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_commuteGeq" (formula "51"))
                              (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "eqSymm" (formula "28"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,0"))
                              (rule "times_zero_1" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "28") (term "1,0,1,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "51") (term "1") (ifseqformula "27"))
                              (rule "ifEqualsInteger" (formula "51"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                              (rule "mul_literals" (formula "49") (term "0,0"))
                              (rule "add_zero_left" (formula "49") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,1"))
                              (rule "commute_and_2" (formula "28") (term "1,0"))
                              (rule "commute_and_2" (formula "52") (term "1,0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "52"))
                              (rule "andLeft" (formula "52"))
                              (rule "commute_or_2" (formula "52"))
                              (rule "shift_paren_or" (formula "53"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "52") (term "0"))
                              (rule "replace_known_left" (formula "52") (term "1,0") (ifseqformula "50"))
                              (rule "polySimp_addAssoc" (formula "52") (term "1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "52") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "inEqSimp_or_tautInEq2" (formula "51"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1"))
                              (rule "add_literals" (formula "51") (term "1,0,1"))
                              (rule "times_zero_1" (formula "51") (term "0,1"))
                              (rule "leq_literals" (formula "51") (term "1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or_2" (formula "55") (term "0"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "79"))
                                 (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "78") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "78") (term "0") (ifseqformula "38"))
                                 (rule "eqSymm" (formula "78"))
                                 (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "close" (formula "71") (ifseqformula "3"))
                              )
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                 (rule "close" (formula "78") (ifseqformula "1"))
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_18 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "55"))
                              (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0"))
                              (rule "add_zero_right" (formula "55") (term "0,0"))
                              (rule "leq_literals" (formula "55") (term "0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "false_right" (formula "55"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "53") (term "0"))
                              (rule "distr_forallAnd" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "shift_paren_or" (formula "54") (term "0"))
                              (rule "commute_or" (formula "54") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "commute_or_2" (formula "54") (term "0"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "ifthenelse_split" (formula "53") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_19 TRUE"
                                 (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                 (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                 (rule "leq_literals" (formula "54") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "eqSymm" (formula "54"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "52"))
                                 (rule "polySimp_pullOutFactor1" (formula "52") (term "0"))
                                 (rule "add_literals" (formula "52") (term "1,0"))
                                 (rule "times_zero_1" (formula "52") (term "0"))
                                 (rule "leq_literals" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "53"))
                                 (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "55") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "78"))
                                    (rule "applyEqRigid" (formula "78") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "78") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "71") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "77") (ifseqformula "1"))
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_19 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "52") (ifseqformula "60"))
                                 (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "52"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                 (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0"))
                                 (rule "leq_literals" (formula "60") (term "0"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "false_right" (formula "60"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "78"))
                                    (rule "applyEq" (formula "78") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "78") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "78") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "76") (term "1") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "78") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "78") (term "0") (ifseqformula "38"))
                                    (rule "eqSymm" (formula "78"))
                                    (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "76") (ifseqformula "32"))
                                    (rule "false_right" (formula "76"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "71") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "77") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                           (rule "andLeft" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "31") (term "1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_addComm0" (formula "31") (term "1"))
                           (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_homoEq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,0"))
                           (rule "times_zero_1" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "52") (term "0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "commute_or_2" (formula "52") (term "0"))
                           (rule "commuteIntersection" (formula "43") (term "0"))
                           (rule "commuteIntersection" (formula "29") (term "0"))
                           (rule "commuteIntersection" (formula "44") (term "0"))
                           (rule "commuteIntersection" (formula "45") (term "0"))
                           (rule "commute_or" (formula "28") (term "0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "commute_or" (formula "52") (term "0,0,0"))
                           (rule "commute_or_2" (formula "52") (term "0,0"))
                           (rule "arrayLengthIsAnInt" (formula "47") (term "0"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "arrayLengthNotNegative" (formula "47") (term "0"))
                           (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                           (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                           (rule "ifthenelse_split" (formula "27") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_18 TRUE"
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,0"))
                              (rule "times_zero_1" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "26"))
                              (rule "inEqSimp_commuteGeq" (formula "50"))
                              (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                              (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0,0"))
                              (rule "leq_literals" (formula "27") (term "0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "51") (term "0,0,2,0") (ifseqformula "26"))
                              (rule "eqSymm" (formula "51") (term "0,2,0"))
                              (rule "applyEq" (formula "28") (term "1,0,1,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "51") (term "1") (ifseqformula "27"))
                              (rule "ifEqualsInteger" (formula "51"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                              (rule "times_zero_1" (formula "49") (term "0,0"))
                              (rule "add_zero_left" (formula "49") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,1"))
                              (rule "commute_and_2" (formula "28") (term "1,1,0"))
                              (rule "commute_and_2" (formula "52") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "52"))
                              (rule "andLeft" (formula "52"))
                              (rule "commute_or_2" (formula "52"))
                              (rule "shift_paren_or" (formula "53"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "52") (term "0"))
                              (rule "replace_known_left" (formula "52") (term "1,0") (ifseqformula "50"))
                              (rule "polySimp_addAssoc" (formula "52") (term "1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "52") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "inEqSimp_or_tautInEq2" (formula "51"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1"))
                              (rule "add_literals" (formula "51") (term "1,0,1"))
                              (rule "times_zero_1" (formula "51") (term "0,1"))
                              (rule "leq_literals" (formula "51") (term "1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "53") (term "0"))
                              (rule "distr_forallAnd" (formula "53"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "castDel" (formula "53") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "53") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "53") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "commute_or" (formula "53") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or_2" (formula "55") (term "0"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "80"))
                                 (rule "applyEq" (formula "80") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "80") (term "0") (ifseqformula "38"))
                                 (rule "eqSymm" (formula "80"))
                                 (rule "applyEq" (formula "78") (term "0") (ifseqformula "2"))
                                 (rule "disjointAllFields" (formula "78") (ifseqformula "32"))
                                 (rule "false_right" (formula "78"))
                                 (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "close" (formula "72") (ifseqformula "3"))
                              )
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                 (rule "close" (formula "79") (ifseqformula "1"))
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_18 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "55"))
                              (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0"))
                              (rule "add_zero_right" (formula "55") (term "0,0"))
                              (rule "leq_literals" (formula "55") (term "0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "false_right" (formula "55"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "52") (term "0"))
                              (rule "distr_forallAnd" (formula "52"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "castDel" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "52") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "52") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "53") (term "0"))
                              (rule "distr_forallAnd" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "shift_paren_or" (formula "54") (term "0"))
                              (rule "commute_or" (formula "54") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "commute_or_2" (formula "54") (term "0"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "ifthenelse_split" (formula "53") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_19 TRUE"
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "52"))
                                 (rule "polySimp_pullOutFactor1" (formula "52") (term "0"))
                                 (rule "add_literals" (formula "52") (term "1,0"))
                                 (rule "times_zero_1" (formula "52") (term "0"))
                                 (rule "leq_literals" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "52"))
                                 (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                 (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "53") (term "0,0,0"))
                                 (rule "leq_literals" (formula "53") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "eqSymm" (formula "53"))
                                 (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "53"))
                                 (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "55") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEq" (formula "79") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "79") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "79") (term "0") (ifseqformula "38"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEqRigid" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "76") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "76") (ifseqformula "32"))
                                    (rule "false_right" (formula "76"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "71") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "78") (ifseqformula "1"))
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_19 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "52") (ifseqformula "60"))
                                 (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "52"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                 (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0"))
                                 (rule "leq_literals" (formula "60") (term "0"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "false_right" (formula "60"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEq" (formula "79") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "79") (term "1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "79") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "79") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "78") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "77") (ifseqformula "32"))
                                    (rule "false_right" (formula "77"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "72") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "78") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "57"))
                  (branch "Case 1"
                     (rule "notRight" (formula "57"))
                     (rule "close" (formula "56") (ifseqformula "1"))
                  )
                  (branch "Case 2"
                     (rule "notRight" (formula "57"))
                     (rule "eqSymm" (formula "58"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=f_5_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "eqSymm" (formula "59"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                     (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "59"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0") (ifseqformula "18") (ifseqformula "57"))
                     (rule "elementOfIntersect" (formula "1") (term "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "4")))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "3")))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "17") (ifseqformula "57"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "elementOfIntersect" (formula "46"))
                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "47")))
                     (rule "false_right" (formula "46"))
                     (rule "nnf_imp2or" (formula "45") (term "0"))
                     (rule "nnf_imp2or" (formula "44") (term "0"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "45") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                     (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "44") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "44") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "43"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "43") (term "1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "43") (term "1,1"))
                     (rule "replaceKnownSelect_taclet28_0" (formula "43") (term "1,1,0,0"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "43") (term "1,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "43") (term "1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "43") (term "1,0,1,0"))
                     (rule "replaceKnownSelect_taclet26_0" (formula "43") (term "1,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "43") (term "1,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet28_0" (formula "43") (term "0,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "43") (term "0,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet26_0" (formula "43") (term "0,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "43") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "43") (term "0,1,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "43") (term "0,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "43") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "43") (term "0,1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "43") (term "0,1,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "43") (term "0,0,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "43") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "43") (term "0,1,1,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "43") (term "0,1,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "43") (term "0,0,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "43") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "43") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "43") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "43") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "43") (term "0,1,1,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "43") (term "0,1,1,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "43") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "43") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "43") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "43") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "43") (term "0,1,1,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "43") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "45"))
                     (rule "notLeft" (formula "44"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "45"))
                     (rule "notLeft" (formula "44"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "45"))
                     (rule "notLeft" (formula "43"))
                     (rule "notLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "andLeft" (formula "43"))
                     (rule "eqSymm" (formula "50"))
                     (rule "eqSymm" (formula "49"))
                     (rule "inEqSimp_commuteLeq" (formula "52"))
                     (rule "inEqSimp_commuteLeq" (formula "51"))
                     (rule "disjointDefinition" (formula "48"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "notLeft" (formula "48"))
                     (rule "eqSymm" (formula "54"))
                     (rule "disjointDefinition" (formula "47"))
                     (builtin "One Step Simplification" (formula "47"))
                     (rule "notLeft" (formula "47"))
                     (rule "eqSymm" (formula "53"))
                     (rule "disjointDefinition" (formula "46"))
                     (builtin "One Step Simplification" (formula "46"))
                     (rule "notLeft" (formula "46"))
                     (rule "eqSymm" (formula "52"))
                     (rule "disjointDefinition" (formula "45"))
                     (rule "disjointDefinition" (formula "43"))
                     (rule "disjointDefinition" (formula "44"))
                     (rule "sortsDisjointModuloNull" (formula "54"))
                     (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "55"))
                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "56")))
                     (rule "false_right" (formula "54"))
                     (rule "sortsDisjointModuloNull" (formula "53"))
                     (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "61"))
                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "54")))
                     (rule "false_right" (formula "53"))
                     (rule "sortsDisjointModuloNull" (formula "52"))
                     (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "60"))
                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "54")))
                     (rule "false_right" (formula "52"))
                     (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_server_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "61")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "eqSymm" (formula "49"))
                     (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "49"))
                     (rule "hideAuxiliaryEq" (formula "49"))
                     (rule "replace_known_right" (formula "48") (term "1,0,0,1,0,0") (ifseqformula "62"))
                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "61")) (ifInst ""  (formula "26")))
                     (rule "elementOfUnion" (formula "48") (term "0,0"))
                     (rule "elementOfSingleton" (formula "48") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
                     (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "59"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                     (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "45") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_7"))
                     (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "45"))
                     (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                     (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "replaceKnownSelect_taclet11_0" (formula "45") (term "2,0"))
                     (rule "elementOfUnion" (formula "45") (term "0,0"))
                     (rule "elementOfSingleton" (formula "45") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "elementOfSingleton" (formula "45") (term "0,0"))
                     (builtin "One Step Simplification" (formula "45"))
                     (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "45"))
                     (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "45"))
                     (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "45"))
                     (rule "hideAuxiliaryEq" (formula "45"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "27") (inst "i=i") (inst "r=r"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "replaceKnownSelect_taclet11_0" (formula "27") (term "0,1"))
                     (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "24"))
                     (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1,0,0,0,1,0") (ifseqformula "13"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "exLeft" (formula "27") (inst "sk=i_20"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "27"))
                     (rule "disjointDefinition" (formula "31"))
                     (rule "castedGetAny" (formula "29") (term "0"))
                     (rule "lenOfSeqConcat" (formula "28") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "getOfSeqConcat" (formula "29") (term "0"))
                     (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "29") (term "2,0"))
                     (rule "castDel" (formula "29") (term "1,2,0"))
                     (rule "polySimp_sepNegMonomial" (formula "29") (term "0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "30") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_18"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                     (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "65")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "13"))
                     (rule "replace_known_right" (formula "30") (term "0,0,1,0,0") (ifseqformula "66"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "67")))
                     (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "1,0,0,0,0") (ifseqformula "30"))
                     (rule "hideAuxiliaryEq" (formula "30"))
                     (rule "nnf_imp2or" (formula "30") (term "0"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "0,1,1,0,0,0"))
                     (rule "commute_or" (formula "55") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0"))
                     (rule "commute_or" (formula "54") (term "0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "53") (inst "i=i") (inst "r=r"))
                     (builtin "One Step Simplification" (formula "53"))
                     (rule "replaceKnownSelect_taclet40_0" (formula "53") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet41_0" (formula "53") (term "0,1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "1,1,0,0,0,1,0") (ifseqformula "40"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,1,0,0,0,1,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "13"))
                     (rule "andLeft" (formula "53"))
                     (rule "andLeft" (formula "53"))
                     (rule "exLeft" (formula "53") (inst "sk=i_21"))
                     (rule "andLeft" (formula "53"))
                     (rule "andLeft" (formula "53"))
                     (rule "inEqSimp_ltToLeq" (formula "54"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "54") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "53"))
                     (rule "disjointDefinition" (formula "57"))
                     (rule "castedGetAny" (formula "55") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                     (rule "polySimp_elimOne" (formula "54") (term "0"))
                     (rule "pullOutSelect" (formula "56") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_19"))
                     (rule "applyEq" (formula "55") (term "1") (ifseqformula "56"))
                     (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "68")))
                     (rule "replaceKnownSelect_taclet42_0" (formula "56") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "56") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "replace_known_right" (formula "56") (term "1,0,0,1,0,0") (ifseqformula "70"))
                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "69")) (ifInst ""  (formula "26")))
                     (rule "elementOfUnion" (formula "56") (term "0,0"))
                     (rule "elementOfSingleton" (formula "56") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "68")))
                     (rule "elementOfSingleton" (formula "56") (term "0,0"))
                     (builtin "One Step Simplification" (formula "56"))
                     (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "56"))
                     (rule "applyEqReverse" (formula "57") (term "1,0,0,0,0") (ifseqformula "56"))
                     (rule "hideAuxiliaryEq" (formula "56"))
                     (rule "pullOutSelect" (formula "55") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_10"))
                     (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "55"))
                     (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "replaceKnownSelect_taclet14_0" (formula "55") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "55") (term "2,0"))
                     (rule "elementOfUnion" (formula "55") (term "0,0"))
                     (rule "elementOfSingleton" (formula "55") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "elementOfSingleton" (formula "55") (term "0,0"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "55"))
                     (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "55"))
                     (rule "hideAuxiliaryEq" (formula "55"))
                     (rule "lenOfSeqConcat" (formula "54") (term "0"))
                     (builtin "One Step Simplification" (formula "54"))
                     (rule "polySimp_addComm0" (formula "54") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "54"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                     (rule "mul_literals" (formula "54") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "54") (term "0"))
                     (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                     (rule "add_literals" (formula "54") (term "0,0,0"))
                     (rule "add_zero_left" (formula "54") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                     (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                     (rule "polySimp_elimOne" (formula "54") (term "0"))
                     (rule "getOfSeqConcat" (formula "55") (term "0"))
                     (rule "polySimp_elimSub" (formula "55") (term "1,2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "55") (term "2,0"))
                     (rule "castDel" (formula "55") (term "1,2,0"))
                     (rule "polySimp_sepNegMonomial" (formula "55") (term "0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "55") (term "0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "55") (term "0,0,0"))
                     (rule "nnf_imp2or" (formula "56") (term "0"))
                     (rule "nnf_notAnd" (formula "56") (term "0,0"))
                     (builtin "One Step Simplification" (formula "56"))
                     (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "56") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "56") (term "1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "56") (term "0,1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "56") (term "0,0,1,1,0,0,0"))
                     (rule "ifthenelse_split" (formula "16") (term "0"))
                     (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                        (rule "applyEqReverse" (formula "63") (term "2") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "33") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "38") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "17"))
                        (rule "hideAuxiliaryEq" (formula "17"))
                        (rule "elementOfSubsetOfUnion2" (formula "62") (ifseqformula "17") (ifseqformula "73"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "elementOfIntersect" (formula "59"))
                        (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")))
                        (rule "false_right" (formula "59"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "commuteIntersection" (formula "47") (term "0"))
                           (rule "commuteIntersection" (formula "48") (term "0"))
                           (rule "commuteIntersection" (formula "49") (term "0"))
                           (rule "commute_or_2" (formula "30") (term "0,0"))
                           (rule "commuteIntersection" (formula "31") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                           (rule "andLeft" (formula "35"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addComm0" (formula "35") (term "1"))
                           (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                           (rule "lenOfSeqConcat" (formula "36") (term "0,1,0,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "36") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                           (rule "lenOfSeqConcat" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_homoEq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                           (rule "add_literals" (formula "35") (term "1,0"))
                           (rule "times_zero_1" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0"))
                           (rule "commute_or_2" (formula "30") (term "0"))
                           (rule "commute_or_2" (formula "56") (term "0"))
                           (rule "commuteUnion" (formula "33") (term "1"))
                           (rule "commute_or" (formula "30") (term "0,0,0"))
                           (rule "commute_or_2" (formula "30") (term "0,0"))
                           (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                           (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                           (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "true_left" (formula "51"))
                           (rule "commute_or" (formula "56") (term "0,0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0"))
                           (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                           (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                           (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "true_left" (formula "50"))
                           (rule "ifthenelse_split" (formula "29") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_20 TRUE"
                              (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                              (rule "applyEq" (formula "55") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_commuteGeq" (formula "55"))
                              (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "eqSymm" (formula "30"))
                              (rule "applyEq" (formula "56") (term "0,0,2,0") (ifseqformula "29"))
                              (rule "eqSymm" (formula "56") (term "0,2,0"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "56") (term "1,0,1,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "30") (term "1,0,1,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "55") (term "1") (ifseqformula "29"))
                              (rule "ifEqualsInteger" (formula "55"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                              (rule "times_zero_1" (formula "53") (term "0,0"))
                              (rule "add_zero_left" (formula "53") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "55") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,1"))
                              (rule "commute_and_2" (formula "30") (term "1,1,0"))
                              (rule "commute_and_2" (formula "56") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or" (formula "55"))
                              (rule "cnf_rightDist" (formula "56"))
                              (rule "andLeft" (formula "56"))
                              (rule "commute_or_2" (formula "56"))
                              (rule "shift_paren_or" (formula "57"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "56") (term "0"))
                              (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "54"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,0,0"))
                              (rule "add_literals" (formula "56") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "56") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "inEqSimp_or_tautInEq2" (formula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "55") (term "0,1"))
                              (rule "add_literals" (formula "55") (term "1,0,1"))
                              (rule "times_zero_1" (formula "55") (term "0,1"))
                              (rule "leq_literals" (formula "55") (term "1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "commute_or" (formula "55"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "30") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "cnf_rightDist" (formula "57") (term "0"))
                              (rule "distr_forallAnd" (formula "57"))
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "castDel" (formula "57") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "57") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "57") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "commute_or" (formula "57") (term "0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "ifthenelse_split" (formula "34") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                 (rule "hideAuxiliaryEq" (formula "35"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "34"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "34"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "commute_or_2" (formula "59") (term "0"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "84") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "84") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "84") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "84") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "84") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "84") (term "0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "66"))
                                    (rule "false_right" (formula "66"))
                                    (rule "applyEq" (formula "69") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "75") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "83") (ifseqformula "1"))
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "commute_or_2" (formula "57") (term "0"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "83"))
                                    (rule "applyEq" (formula "83") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "83") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "83") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "83") (term "0") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "83"))
                                    (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "false_right" (formula "64"))
                                    (rule "applyEq" (formula "79") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "81"))
                                    (rule "false_right" (formula "81"))
                                    (rule "applyEqRigid" (formula "68") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "68") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "68") (ifseqformula "34"))
                                    (rule "false_right" (formula "68"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "73") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "82") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_20 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "59"))
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                              (rule "add_literals" (formula "59") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "59") (term "1,0,0"))
                              (rule "add_literals" (formula "59") (term "0,0"))
                              (rule "leq_literals" (formula "59") (term "0"))
                              (builtin "One Step Simplification" (formula "59"))
                              (rule "false_right" (formula "59"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "30") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "cnf_rightDist" (formula "56") (term "0"))
                              (rule "distr_forallAnd" (formula "56"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "castDel" (formula "56") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "56") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "57") (term "0"))
                              (rule "distr_forallAnd" (formula "57"))
                              (rule "andLeft" (formula "57"))
                              (rule "shift_paren_or" (formula "58") (term "0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "commute_or_2" (formula "58") (term "0"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "ifthenelse_split" (formula "57") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_21 TRUE"
                                 (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                 (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,0"))
                                 (rule "leq_literals" (formula "58") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "eqSymm" (formula "58"))
                                 (rule "applyEq" (formula "56") (term "0") (ifseqformula "57"))
                                 (rule "inEqSimp_homoInEq1" (formula "56"))
                                 (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                 (rule "add_literals" (formula "56") (term "1,0"))
                                 (rule "times_zero_1" (formula "56") (term "0"))
                                 (rule "leq_literals" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "56"))
                                 (rule "applyEq" (formula "29") (term "1") (ifseqformula "57"))
                                 (rule "applyEq" (formula "60") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "61") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "ifthenelse_split" (formula "34") (term "0"))
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                    (rule "elementOfUnion" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEqRigid" (formula "83") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "83") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "0") (ifseqformula "42"))
                                       (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "68") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "81") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "81"))
                                       (rule "false_right" (formula "81"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "82") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "1") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEqRigid" (formula "78") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "79"))
                                       (rule "false_right" (formula "79"))
                                       (rule "applyEqRigid" (formula "67") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "79") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "79") (term "0") (ifseqformula "40"))
                                       (rule "eqSymm" (formula "79"))
                                       (rule "applyEq" (formula "78") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "67") (term "0") (ifseqformula "2"))
                                       (rule "disjointAllFields" (formula "67") (ifseqformula "34"))
                                       (rule "false_right" (formula "67"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "72") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "81") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_21 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "56") (ifseqformula "64"))
                                 (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "56"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                 (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "64") (term "0,0"))
                                 (rule "leq_literals" (formula "64") (term "0"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "false_right" (formula "64"))
                                 (rule "ifthenelse_split" (formula "34") (term "0"))
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                    (rule "elementOfUnion" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "82") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "1") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "82") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "42"))
                                       (rule "applyEq" (formula "81") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "81"))
                                       (rule "false_right" (formula "81"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "68") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "82") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "82") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "80"))
                                       (rule "false_right" (formula "80"))
                                       (rule "applyEq" (formula "67") (term "0") (ifseqformula "2"))
                                       (rule "disjointAllFields" (formula "67") (ifseqformula "34"))
                                       (rule "false_right" (formula "67"))
                                       (rule "applyEq" (formula "79") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "79") (term "0") (ifseqformula "40"))
                                       (rule "eqSymm" (formula "79"))
                                       (rule "applyEq" (formula "78") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "77") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "72") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "81") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "commuteIntersection" (formula "47") (term "0"))
                           (rule "commuteIntersection" (formula "48") (term "0"))
                           (rule "commuteIntersection" (formula "49") (term "0"))
                           (rule "commute_or_2" (formula "30") (term "0,0"))
                           (rule "commuteIntersection" (formula "31") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                           (rule "andLeft" (formula "35"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addComm0" (formula "35") (term "1"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                           (rule "lenOfSeqConcat" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_homoEq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                           (rule "add_literals" (formula "35") (term "1,0"))
                           (rule "times_zero_1" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                           (rule "lenOfSeqConcat" (formula "35") (term "0,1,0,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0"))
                           (rule "commute_or_2" (formula "30") (term "0"))
                           (rule "commute_or_2" (formula "56") (term "0"))
                           (rule "commuteUnion" (formula "33") (term "1"))
                           (rule "commute_or" (formula "30") (term "0,0,0"))
                           (rule "commute_or_2" (formula "30") (term "0,0"))
                           (rule "commute_or" (formula "56") (term "0,0,0"))
                           (rule "commute_or_2" (formula "56") (term "0,0"))
                           (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "true_left" (formula "51"))
                           (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                           (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                           (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                           (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                           (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "true_left" (formula "50"))
                           (rule "ifthenelse_split" (formula "29") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_20 TRUE"
                              (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                              (rule "applyEq" (formula "56") (term "0,0,2,0") (ifseqformula "29"))
                              (rule "eqSymm" (formula "56") (term "0,2,0"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "eqSymm" (formula "29"))
                              (rule "applyEq" (formula "54") (term "0") (ifseqformula "28"))
                              (rule "inEqSimp_commuteGeq" (formula "54"))
                              (rule "applyEq" (formula "56") (term "1,0,1,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "55") (term "1") (ifseqformula "29"))
                              (rule "ifEqualsInteger" (formula "55"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "applyEq" (formula "30") (term "1,0,1,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                              (rule "times_zero_1" (formula "53") (term "0,0"))
                              (rule "add_zero_left" (formula "53") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "55") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,1"))
                              (rule "commute_and_2" (formula "30") (term "1,1,0"))
                              (rule "commute_and_2" (formula "56") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or" (formula "55"))
                              (rule "cnf_rightDist" (formula "56"))
                              (rule "andLeft" (formula "56"))
                              (rule "commute_or_2" (formula "56"))
                              (rule "shift_paren_or" (formula "57"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "56") (term "0"))
                              (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "54"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,0,0"))
                              (rule "add_literals" (formula "56") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "56") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "inEqSimp_or_tautInEq2" (formula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "55") (term "0,1"))
                              (rule "add_literals" (formula "55") (term "1,0,1"))
                              (rule "times_zero_1" (formula "55") (term "0,1"))
                              (rule "leq_literals" (formula "55") (term "1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "commute_or" (formula "55"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "30") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "cnf_rightDist" (formula "57") (term "0"))
                              (rule "distr_forallAnd" (formula "57"))
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "castDel" (formula "57") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "57") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "57") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "commute_or" (formula "57") (term "0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "59") (term "0"))
                              (rule "distr_forallAnd" (formula "59"))
                              (rule "andLeft" (formula "59"))
                              (rule "shift_paren_or" (formula "60") (term "0"))
                              (rule "commute_or" (formula "60") (term "0,0"))
                              (rule "ifthenelse_split" (formula "34") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                 (rule "hideAuxiliaryEq" (formula "35"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "34"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "34"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "commute_or_2" (formula "59") (term "0"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "85"))
                                    (rule "applyEqRigid" (formula "85") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "85") (term "1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "85") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "85") (term "0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "83") (term "0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "71") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "66"))
                                    (rule "false_right" (formula "66"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "76") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "84") (ifseqformula "1"))
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "commute_or_2" (formula "57") (term "0"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "84") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "84") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "84") (term "0") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "false_right" (formula "64"))
                                    (rule "applyEqRigid" (formula "82") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "82"))
                                    (rule "false_right" (formula "82"))
                                    (rule "applyEq" (formula "80") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "75") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "83") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_20 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "59"))
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                              (rule "add_literals" (formula "59") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "59") (term "1,0,0"))
                              (rule "add_zero_right" (formula "59") (term "0,0"))
                              (rule "leq_literals" (formula "59") (term "0"))
                              (builtin "One Step Simplification" (formula "59"))
                              (rule "false_right" (formula "59"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "cnf_rightDist" (formula "56") (term "0"))
                              (rule "distr_forallAnd" (formula "56"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "castDel" (formula "56") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "56") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "57") (term "0"))
                              (rule "distr_forallAnd" (formula "57"))
                              (rule "andLeft" (formula "57"))
                              (rule "shift_paren_or" (formula "58") (term "0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "commute_or_2" (formula "58") (term "0"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "ifthenelse_split" (formula "57") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_21 TRUE"
                                 (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                 (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,0,0"))
                                 (rule "leq_literals" (formula "58") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "eqSymm" (formula "58"))
                                 (rule "applyEq" (formula "56") (term "0") (ifseqformula "57"))
                                 (rule "inEqSimp_homoInEq1" (formula "56"))
                                 (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                 (rule "add_literals" (formula "56") (term "1,0"))
                                 (rule "times_zero_1" (formula "56") (term "0"))
                                 (rule "leq_literals" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "56"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "61") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "29") (term "1") (ifseqformula "57"))
                                 (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "60") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "57"))
                                 (rule "ifthenelse_split" (formula "34") (term "0"))
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                    (rule "elementOfUnion" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "applyEqRigid" (formula "84") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "84") (term "1") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "75") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "83") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                    (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEqRigid" (formula "82") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "40"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEqRigid" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "80") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "80"))
                                       (rule "false_right" (formula "80"))
                                       (rule "applyEq" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_21 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "56") (ifseqformula "64"))
                                 (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "56"))
                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                 (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                 (rule "add_literals" (formula "64") (term "0,0"))
                                 (rule "leq_literals" (formula "64") (term "0"))
                                 (builtin "One Step Simplification" (formula "64"))
                                 (rule "false_right" (formula "64"))
                                 (rule "ifthenelse_split" (formula "34") (term "0"))
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                    (rule "elementOfUnion" (formula "34"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                    (rule "true_left" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "applyEq" (formula "81") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "82") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "70") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "76") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "83") (ifseqformula "1"))
                                    )
                                 )
                                 (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                    (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEqRigid" (formula "83") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEqRigid" (formula "82") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "40"))
                                       (rule "applyEqRigid" (formula "81") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "81"))
                                       (rule "false_right" (formula "81"))
                                       (rule "applyEq" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                        (rule "applyEqReverse" (formula "36") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "34") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "63") (term "2") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "32") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "38") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "applyEqReverse" (formula "36") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "23") (term "1,1,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "31") (term "2,0") (ifseqformula "16"))
                        (rule "hideAuxiliaryEq" (formula "16"))
                        (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "57"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "30"))
                        (rule "hideAuxiliaryEq" (formula "30"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                           (rule "andLeft" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "31") (term "1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_addComm0" (formula "31") (term "1"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_homoEq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,0"))
                           (rule "times_zero_1" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "52") (term "0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "commute_or_2" (formula "52") (term "0"))
                           (rule "commuteIntersection" (formula "29") (term "0"))
                           (rule "commuteIntersection" (formula "44") (term "0"))
                           (rule "commute_or" (formula "28") (term "0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "commute_or" (formula "52") (term "0,0,0"))
                           (rule "commute_or_2" (formula "52") (term "0,0"))
                           (rule "commuteIntersection" (formula "45") (term "0"))
                           (rule "commuteIntersection" (formula "43") (term "0"))
                           (rule "arrayLengthIsAnInt" (formula "47") (term "0"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "arrayLengthNotNegative" (formula "47") (term "0"))
                           (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                           (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                           (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "cnf_rightDist" (formula "28") (term "0"))
                           (rule "distr_forallAnd" (formula "28"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "commute_or" (formula "28") (term "0"))
                           (rule "cnf_rightDist" (formula "52") (term "0"))
                           (rule "distr_forallAnd" (formula "52"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "castDel" (formula "52") (term "0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "commute_or" (formula "52") (term "0"))
                           (rule "ifthenelse_split" (formula "27") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_20 TRUE"
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,0"))
                              (rule "times_zero_1" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "51") (term "0,0,2,0") (ifseqformula "26"))
                              (rule "eqSymm" (formula "51") (term "0,2,0"))
                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "26"))
                              (rule "inEqSimp_commuteGeq" (formula "50"))
                              (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0"))
                              (rule "leq_literals" (formula "27") (term "0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                              (rule "applyEq" (formula "51") (term "1") (ifseqformula "27"))
                              (rule "ifEqualsInteger" (formula "51"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "28") (term "1,0,1,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                              (rule "mul_literals" (formula "49") (term "0,0"))
                              (rule "add_zero_left" (formula "49") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,1"))
                              (rule "commute_and_2" (formula "28") (term "1,0"))
                              (rule "commute_and_2" (formula "52") (term "1,0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "52"))
                              (rule "andLeft" (formula "52"))
                              (rule "commute_or_2" (formula "52"))
                              (rule "shift_paren_or" (formula "53"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "52") (term "0"))
                              (rule "replace_known_left" (formula "52") (term "1,0") (ifseqformula "50"))
                              (rule "polySimp_addAssoc" (formula "52") (term "1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "52") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "inEqSimp_or_tautInEq2" (formula "51"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1"))
                              (rule "add_literals" (formula "51") (term "1,0,1"))
                              (rule "times_zero_1" (formula "51") (term "0,1"))
                              (rule "leq_literals" (formula "51") (term "1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or_2" (formula "55") (term "0"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "80"))
                                 (rule "applyEq" (formula "80") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "80") (term "2,1") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "80") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "80") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "80") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEq" (formula "76") (term "0") (ifseqformula "2"))
                                 (rule "disjointAllFields" (formula "76") (ifseqformula "32"))
                                 (rule "false_right" (formula "76"))
                                 (rule "applyEq" (formula "76") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "close" (formula "71") (ifseqformula "3"))
                              )
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                 (rule "close" (formula "79") (ifseqformula "1"))
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_20 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "55"))
                              (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0"))
                              (rule "add_zero_right" (formula "55") (term "0,0"))
                              (rule "leq_literals" (formula "55") (term "0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "false_right" (formula "55"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "53") (term "0"))
                              (rule "distr_forallAnd" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "shift_paren_or" (formula "54") (term "0"))
                              (rule "commute_or" (formula "54") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "commute_or_2" (formula "54") (term "0"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "ifthenelse_split" (formula "53") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_21 TRUE"
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "52"))
                                 (rule "polySimp_pullOutFactor1" (formula "52") (term "0"))
                                 (rule "add_literals" (formula "52") (term "1,0"))
                                 (rule "times_zero_1" (formula "52") (term "0"))
                                 (rule "leq_literals" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                 (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "53") (term "0,0,0"))
                                 (rule "leq_literals" (formula "53") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "eqSymm" (formula "53"))
                                 (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "55") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "53"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "79") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "79") (term "0") (ifseqformula "38"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "76") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEqRigid" (formula "76") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "76"))
                                    (rule "false_right" (formula "76"))
                                    (rule "applyEq" (formula "75") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "75") (ifseqformula "32"))
                                    (rule "false_right" (formula "75"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "70") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "78") (ifseqformula "1"))
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_21 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "52") (ifseqformula "60"))
                                 (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "52"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                 (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0"))
                                 (rule "leq_literals" (formula "60") (term "0"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "false_right" (formula "60"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEq" (formula "79") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "79") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "79") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "79") (term "0") (ifseqformula "38"))
                                    (rule "applyEqRigid" (formula "76") (term "1") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "78") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "78"))
                                    (rule "false_right" (formula "78"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "70") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "78") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                           (rule "andLeft" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "31") (term "1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_addComm0" (formula "31") (term "1"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_homoEq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,0"))
                           (rule "times_zero_1" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "32"))
                           (rule "lenOfSeqConcat" (formula "31") (term "0,1,0,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_or_2" (formula "52") (term "0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "commute_or_2" (formula "52") (term "0"))
                           (rule "commuteIntersection" (formula "29") (term "0"))
                           (rule "commuteIntersection" (formula "44") (term "0"))
                           (rule "commuteIntersection" (formula "45") (term "0"))
                           (rule "commuteIntersection" (formula "43") (term "0"))
                           (rule "commute_or" (formula "28") (term "0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0,0"))
                           (rule "arrayLengthIsAnInt" (formula "47") (term "0"))
                           (builtin "One Step Simplification" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "arrayLengthNotNegative" (formula "47") (term "0"))
                           (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                           (rule "commute_or" (formula "52") (term "0,0,0"))
                           (rule "commute_or_2" (formula "52") (term "0,0"))
                           (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                           (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                           (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "ifthenelse_split" (formula "27") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_20 TRUE"
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,0"))
                              (rule "times_zero_1" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "51") (term "0,0,2,0") (ifseqformula "26"))
                              (rule "eqSymm" (formula "51") (term "0,2,0"))
                              (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "26"))
                              (rule "inEqSimp_commuteGeq" (formula "50"))
                              (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0,0"))
                              (rule "leq_literals" (formula "27") (term "0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "51") (term "1") (ifseqformula "27"))
                              (rule "ifEqualsInteger" (formula "51"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "applyEq" (formula "28") (term "1,0,1,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "52") (term "1,0,1,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                              (rule "times_zero_1" (formula "49") (term "0,0"))
                              (rule "add_zero_left" (formula "49") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,1"))
                              (rule "commute_and_2" (formula "28") (term "1,1,0"))
                              (rule "commute_and_2" (formula "52") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "52"))
                              (rule "andLeft" (formula "52"))
                              (rule "commute_or_2" (formula "52"))
                              (rule "shift_paren_or" (formula "53"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "52") (term "0"))
                              (rule "replace_known_left" (formula "52") (term "1,0") (ifseqformula "50"))
                              (rule "polySimp_addAssoc" (formula "52") (term "1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "52") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "inEqSimp_or_tautInEq2" (formula "51"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1"))
                              (rule "add_literals" (formula "51") (term "1,0,1"))
                              (rule "times_zero_1" (formula "51") (term "0,1"))
                              (rule "leq_literals" (formula "51") (term "1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "53") (term "0"))
                              (rule "distr_forallAnd" (formula "53"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "castDel" (formula "53") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "53") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "53") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "commute_or" (formula "53") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or_2" (formula "55") (term "0"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "81"))
                                 (rule "applyEq" (formula "81") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "81") (term "0") (ifseqformula "38"))
                                 (rule "eqSymm" (formula "81"))
                                 (rule "applyEq" (formula "80") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "80"))
                                 (rule "false_right" (formula "80"))
                                 (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEq" (formula "78") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                 (rule "disjointAllFields" (formula "77") (ifseqformula "32"))
                                 (rule "false_right" (formula "77"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "close" (formula "72") (ifseqformula "3"))
                              )
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                 (rule "close" (formula "80") (ifseqformula "1"))
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_20 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "55"))
                              (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                              (rule "add_literals" (formula "55") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "55") (term "1,0,0"))
                              (rule "add_zero_right" (formula "55") (term "0,0"))
                              (rule "leq_literals" (formula "55") (term "0"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "false_right" (formula "55"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "52") (term "0"))
                              (rule "distr_forallAnd" (formula "52"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "castDel" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "52") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "52") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "53") (term "0"))
                              (rule "distr_forallAnd" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "shift_paren_or" (formula "54") (term "0"))
                              (rule "commute_or" (formula "54") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "commute_or_2" (formula "54") (term "0"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "ifthenelse_split" (formula "53") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_21 TRUE"
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "52"))
                                 (rule "polySimp_pullOutFactor1" (formula "52") (term "0"))
                                 (rule "add_literals" (formula "52") (term "1,0"))
                                 (rule "times_zero_1" (formula "52") (term "0"))
                                 (rule "leq_literals" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                 (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "53") (term "0,0,0"))
                                 (rule "leq_literals" (formula "53") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "eqSymm" (formula "53"))
                                 (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "55") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "53"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEq" (formula "80") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEqRigid" (formula "76") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "78") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "78"))
                                    (rule "false_right" (formula "78"))
                                    (rule "applyEq" (formula "78") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "76") (ifseqformula "32"))
                                    (rule "false_right" (formula "76"))
                                    (rule "applyEqRigid" (formula "77") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "77") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "77") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "77") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "71") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "79") (ifseqformula "1"))
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_21 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "52") (ifseqformula "60"))
                                 (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "52"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                 (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0"))
                                 (rule "leq_literals" (formula "60") (term "0"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "false_right" (formula "60"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "71") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "79") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "andRight" (formula "56"))
               (branch "Case 1"
                  (rule "andRight" (formula "57"))
                  (branch "Case 1"
                     (rule "notRight" (formula "57"))
                     (rule "close" (formula "57") (ifseqformula "1"))
                  )
                  (branch "Case 2"
                     (rule "notRight" (formula "57"))
                     (rule "eqSymm" (formula "58"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=f_5_4"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "eqSymm" (formula "59"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                     (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "59"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "59"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0") (ifseqformula "18") (ifseqformula "57"))
                     (rule "elementOfIntersect" (formula "1") (term "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "4")))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "3")))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "60"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "17") (ifseqformula "57"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "elementOfIntersect" (formula "46"))
                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "47")))
                     (rule "false_right" (formula "46"))
                     (rule "nnf_imp2or" (formula "44") (term "0"))
                     (rule "nnf_imp2or" (formula "45") (term "0"))
                     (rule "nnf_notAnd" (formula "44") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                     (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "27") (inst "i=i") (inst "r=r"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "replaceKnownSelect_taclet11_0" (formula "27") (term "0,1"))
                     (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,1,1,0,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "24"))
                     (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,1,1,0,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1,0,0,0,1,0") (ifseqformula "13"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "exLeft" (formula "27") (inst "sk=i_22"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "27"))
                     (rule "disjointDefinition" (formula "31"))
                     (rule "castedGetAny" (formula "29") (term "0"))
                     (rule "lenOfSeqConcat" (formula "28") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "getOfSeqConcat" (formula "29") (term "0"))
                     (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "29") (term "2,0"))
                     (rule "castDel" (formula "29") (term "1,2,0"))
                     (rule "polySimp_sepNegMonomial" (formula "29") (term "0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "30") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_20"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                     (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "56")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "13"))
                     (rule "replace_known_right" (formula "30") (term "0,0,1,0,0") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "58")))
                     (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "1,0,0,0,0") (ifseqformula "30"))
                     (rule "hideAuxiliaryEq" (formula "30"))
                     (rule "nnf_imp2or" (formula "30") (term "0"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "0,1,1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "47"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "47") (term "1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "47") (term "1,1"))
                     (rule "replaceKnownSelect_taclet28_0" (formula "47") (term "1,1,0,0"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "47") (term "1,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "47") (term "1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "47") (term "1,0,1,0"))
                     (rule "replaceKnownSelect_taclet26_0" (formula "47") (term "1,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "47") (term "1,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet28_0" (formula "47") (term "0,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "47") (term "0,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet26_0" (formula "47") (term "0,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "47") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "47") (term "0,1,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "47") (term "0,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "47") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "47") (term "0,1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "47") (term "0,0,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "47") (term "0,1,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "47") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "47") (term "0,1,1,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "47") (term "0,0,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "47") (term "0,1,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "47") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "47") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "47") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "47") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "47") (term "0,1,1,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "47") (term "0,1,1,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "47") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "47") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "47") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "47") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "47") (term "0,1,1,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "47") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "48"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "49"))
                     (rule "notLeft" (formula "48"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "49"))
                     (rule "notLeft" (formula "48"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "49"))
                     (rule "notLeft" (formula "48"))
                     (rule "notLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "eqSymm" (formula "54"))
                     (rule "eqSymm" (formula "53"))
                     (rule "inEqSimp_commuteLeq" (formula "56"))
                     (rule "inEqSimp_commuteLeq" (formula "55"))
                     (rule "disjointDefinition" (formula "52"))
                     (builtin "One Step Simplification" (formula "52"))
                     (rule "notLeft" (formula "52"))
                     (rule "eqSymm" (formula "58"))
                     (rule "disjointDefinition" (formula "51"))
                     (builtin "One Step Simplification" (formula "51"))
                     (rule "notLeft" (formula "51"))
                     (rule "eqSymm" (formula "57"))
                     (rule "disjointDefinition" (formula "50"))
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "notLeft" (formula "50"))
                     (rule "eqSymm" (formula "56"))
                     (rule "disjointDefinition" (formula "49"))
                     (rule "disjointDefinition" (formula "47"))
                     (rule "disjointDefinition" (formula "48"))
                     (rule "sortsDisjointModuloNull" (formula "58"))
                     (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "60"))
                     (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                     (rule "false_right" (formula "58"))
                     (rule "sortsDisjointModuloNull" (formula "57"))
                     (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "59"))
                     (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "65")))
                     (rule "false_right" (formula "57"))
                     (rule "sortsDisjointModuloNull" (formula "56"))
                     (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "64")))
                     (rule "false_right" (formula "56"))
                     (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_server_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "65")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "eqSymm" (formula "53"))
                     (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "53"))
                     (rule "hideAuxiliaryEq" (formula "53"))
                     (rule "replace_known_left" (formula "52") (term "1,0,1,0,0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "65")) (ifInst ""  (formula "66")))
                     (rule "elementOfUnion" (formula "52") (term "0,0"))
                     (rule "elementOfSingleton" (formula "52") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "64")))
                     (rule "elementOfSingleton" (formula "52") (term "0,0"))
                     (builtin "One Step Simplification" (formula "52"))
                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "61"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "63")))
                     (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "49") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_8"))
                     (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "49"))
                     (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "49"))
                     (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "replaceKnownSelect_taclet11_0" (formula "49") (term "2,0"))
                     (rule "elementOfUnion" (formula "49") (term "0,0"))
                     (rule "elementOfSingleton" (formula "49") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "elementOfSingleton" (formula "49") (term "0,0"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "49"))
                     (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "49"))
                     (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                     (rule "hideAuxiliaryEq" (formula "49"))
                     (rule "commute_or" (formula "54") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0"))
                     (rule "commute_or" (formula "55") (term "0,0"))
                     (rule "commute_or_2" (formula "30") (term "0,0"))
                     (rule "commuteIntersection" (formula "31") (term "0"))
                     (rule "ifthenelse_split" (formula "16") (term "0"))
                     (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                        (rule "applyEqReverse" (formula "38") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "60") (term "2") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "33") (term "2,0,0") (ifseqformula "17"))
                        (rule "hideAuxiliaryEq" (formula "17"))
                        (rule "elementOfSubsetOfUnion2" (formula "59") (ifseqformula "17") (ifseqformula "70"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "elementOfIntersect" (formula "56"))
                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "60")))
                        (rule "false_right" (formula "56"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "53") (inst "i=i") (inst "r=r"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "replaceKnownSelect_taclet42_0" (formula "53") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "53") (term "0,1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "1,1,0,0,0,1,0") (ifseqformula "40"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,1,0,0,0,1,0") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "13"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "53"))
                           (rule "exLeft" (formula "53") (inst "sk=i_26"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "53"))
                           (rule "inEqSimp_ltToLeq" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "53"))
                           (rule "disjointDefinition" (formula "57"))
                           (rule "castedGetAny" (formula "55") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                           (rule "polySimp_elimOne" (formula "54") (term "0"))
                           (rule "pullOutSelect" (formula "56") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_24"))
                           (rule "applyEq" (formula "55") (term "1") (ifseqformula "56"))
                           (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "69")))
                           (rule "replaceKnownSelect_taclet36_0" (formula "56") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "56") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0,0") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,1,0,0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "56") (term "1,0,0,1,0,0") (ifseqformula "71"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "70")) (ifInst ""  (formula "26")))
                           (rule "elementOfUnion" (formula "56") (term "0,0"))
                           (rule "elementOfSingleton" (formula "56") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "69")))
                           (rule "elementOfSingleton" (formula "56") (term "0,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "applyEqReverse" (formula "57") (term "1,0,0,0,0") (ifseqformula "56"))
                           (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "56"))
                           (rule "hideAuxiliaryEq" (formula "56"))
                           (rule "pullOutSelect" (formula "55") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_14"))
                           (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "55"))
                           (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "replaceKnownSelect_taclet14_0" (formula "55") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "55") (term "2,0"))
                           (rule "elementOfUnion" (formula "55") (term "0,0"))
                           (rule "elementOfSingleton" (formula "55") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "elementOfSingleton" (formula "55") (term "0,0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "55"))
                           (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "55"))
                           (rule "hideAuxiliaryEq" (formula "55"))
                           (rule "lenOfSeqConcat" (formula "54") (term "0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "polySimp_addComm0" (formula "54") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0"))
                           (rule "add_zero_left" (formula "54") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                           (rule "polySimp_elimOne" (formula "54") (term "0"))
                           (rule "getOfSeqConcat" (formula "55") (term "0"))
                           (rule "polySimp_elimSub" (formula "55") (term "1,2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                           (rule "getOfSeqSingleton" (formula "55") (term "2,0"))
                           (rule "castDel" (formula "55") (term "1,2,0"))
                           (rule "polySimp_sepNegMonomial" (formula "55") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "56") (term "0"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "0,1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "0,0,1,1,0,0,0"))
                           (rule "commute_or_2" (formula "30") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                           (rule "andLeft" (formula "35"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addComm0" (formula "35") (term "1"))
                           (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                           (rule "lenOfSeqConcat" (formula "36") (term "0,1,0,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "36") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                           (rule "lenOfSeqConcat" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_homoEq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                           (rule "add_literals" (formula "35") (term "1,0"))
                           (rule "times_zero_1" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commuteIntersection" (formula "47") (term "0"))
                           (rule "commuteIntersection" (formula "48") (term "0"))
                           (rule "commuteIntersection" (formula "49") (term "0"))
                           (rule "ifthenelse_split" (formula "29") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_22 TRUE"
                              (rule "applyEq" (formula "55") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_commuteGeq" (formula "55"))
                              (rule "applyEq" (formula "56") (term "0,0,2,0") (ifseqformula "29"))
                              (rule "eqSymm" (formula "56") (term "0,2,0"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0"))
                              (rule "leq_literals" (formula "29") (term "0,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "eqSymm" (formula "29"))
                              (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                              (rule "applyEq" (formula "55") (term "1") (ifseqformula "29"))
                              (rule "ifEqualsInteger" (formula "55"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "applyEq" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "56") (term "1,0,0,0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                              (rule "times_zero_1" (formula "53") (term "0,0"))
                              (rule "add_zero_left" (formula "53") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "55") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,1"))
                              (rule "commuteUnion" (formula "33") (term "1"))
                              (rule "commuteIntersection" (formula "57") (term "0"))
                              (rule "commute_and_2" (formula "30") (term "1,1,0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "commute_or_2" (formula "56") (term "0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "ifthenelse_split" (formula "32") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "32") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "32"))
                                 (rule "commute_or" (formula "56") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "56") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "55"))
                                 (rule "andLeft" (formula "55"))
                                 (rule "commute_or" (formula "55"))
                                 (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "true_left" (formula "51"))
                                 (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                 (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                 (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                 (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                 (rule "cnf_rightDist" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "commute_or_2" (formula "56"))
                                 (rule "shift_paren_or" (formula "57"))
                                 (rule "commute_or" (formula "56") (term "0"))
                                 (rule "inEqSimp_or_weaken0" (formula "56") (term "0"))
                                 (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "54"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "1,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,1,0,0"))
                                 (rule "add_zero_left" (formula "56") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "commute_or" (formula "56") (term "0"))
                                 (rule "cnf_rightDist" (formula "55"))
                                 (rule "andLeft" (formula "55"))
                                 (rule "inEqSimp_or_tautInEq2" (formula "55"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "55") (term "0,1"))
                                 (rule "add_literals" (formula "55") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "0,1"))
                                 (rule "leq_literals" (formula "55") (term "1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "true_left" (formula "55"))
                                 (rule "commute_or" (formula "55"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or" (formula "30") (term "0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "castDel" (formula "57") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "commute_or" (formula "57") (term "0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0"))
                                 (rule "distr_forallAnd" (formula "58"))
                                 (rule "andLeft" (formula "58"))
                                 (rule "shift_paren_or" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "59") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "commute_or_2" (formula "59") (term "0"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "84") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "84") (term "0") (ifseqformula "42"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "70") (term "0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "70") (term "1") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "82") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "82"))
                                    (rule "false_right" (formula "82"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "76") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "83") (ifseqformula "1"))
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEqReverse" (formula "46") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "commute_or" (formula "54") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "54") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "53"))
                                 (rule "andLeft" (formula "53"))
                                 (rule "commute_or" (formula "53"))
                                 (rule "cnf_rightDist" (formula "54"))
                                 (rule "andLeft" (formula "54"))
                                 (rule "commute_or_2" (formula "54"))
                                 (rule "shift_paren_or" (formula "55"))
                                 (rule "commute_or" (formula "54") (term "0"))
                                 (rule "inEqSimp_or_weaken0" (formula "54") (term "0"))
                                 (rule "replace_known_left" (formula "54") (term "1,0") (ifseqformula "52"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "1,0,0"))
                                 (rule "add_literals" (formula "54") (term "0,1,0,0"))
                                 (rule "add_zero_left" (formula "54") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "true_left" (formula "54"))
                                 (rule "commute_or" (formula "54") (term "0"))
                                 (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                 (rule "arrayLengthIsAnInt" (formula "49") (term "0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "true_left" (formula "49"))
                                 (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "true_left" (formula "48"))
                                 (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                 (rule "cnf_rightDist" (formula "53"))
                                 (rule "andLeft" (formula "53"))
                                 (rule "inEqSimp_or_tautInEq2" (formula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "53") (term "0,1"))
                                 (rule "add_literals" (formula "53") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "53") (term "0,1"))
                                 (rule "leq_literals" (formula "53") (term "1"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "commute_or" (formula "53"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or" (formula "30") (term "0"))
                                 (rule "cnf_rightDist" (formula "55") (term "0"))
                                 (rule "distr_forallAnd" (formula "55"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "castDel" (formula "55") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "commute_or" (formula "55") (term "0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0"))
                                 (rule "distr_forallAnd" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "shift_paren_or" (formula "57") (term "0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "commute_or_2" (formula "57") (term "0"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "83"))
                                    (rule "applyEq" (formula "80") (term "1") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "false_right" (formula "64"))
                                    (rule "applyEqRigid" (formula "82") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "82"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "74") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "82") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_22 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "60"))
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                              (rule "add_literals" (formula "60") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "60") (term "1,0,0"))
                              (rule "add_literals" (formula "60") (term "0,0"))
                              (rule "leq_literals" (formula "60") (term "0"))
                              (builtin "One Step Simplification" (formula "60"))
                              (rule "false_right" (formula "60"))
                              (rule "commuteUnion" (formula "33") (term "1"))
                              (rule "commuteIntersection" (formula "57") (term "0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "56") (term "0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "commute_and_2" (formula "30") (term "1,1,0"))
                              (rule "commute_or" (formula "56") (term "0,0,0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "cnf_rightDist" (formula "56") (term "0"))
                              (rule "distr_forallAnd" (formula "56"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "castDel" (formula "56") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "56") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "57") (term "0"))
                              (rule "distr_forallAnd" (formula "57"))
                              (rule "andLeft" (formula "57"))
                              (rule "shift_paren_or" (formula "58") (term "0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "ifthenelse_split" (formula "33") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "33") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "33"))
                                 (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "33"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0"))
                                 (rule "distr_forallAnd" (formula "58"))
                                 (rule "andLeft" (formula "58"))
                                 (rule "shift_paren_or" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "59") (term "0,0"))
                                 (rule "arrayLengthNotNegative" (formula "53") (term "0"))
                                 (rule "applyEq" (formula "53") (term "0") (ifseqformula "54"))
                                 (rule "arrayLengthIsAnInt" (formula "53") (term "0"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "arrayLengthIsAnInt" (formula "52") (term "0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "arrayLengthNotNegative" (formula "52") (term "0"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "cnf_rightDist" (formula "58") (term "0"))
                                 (rule "distr_forallAnd" (formula "58"))
                                 (rule "andLeft" (formula "58"))
                                 (rule "commute_or_2" (formula "58") (term "0"))
                                 (rule "shift_paren_or" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "59") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "57") (term "2,0"))
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_26 TRUE"
                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "57"))
                                    (rule "inEqSimp_homoInEq1" (formula "56"))
                                    (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                    (rule "add_literals" (formula "56") (term "1,0"))
                                    (rule "times_zero_1" (formula "56") (term "0"))
                                    (rule "leq_literals" (formula "56"))
                                    (rule "true_left" (formula "56"))
                                    (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                    (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                    (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,0"))
                                    (rule "leq_literals" (formula "57") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "eqSymm" (formula "57"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "56"))
                                    (rule "applyEq" (formula "60") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "61") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "57"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEq" (formula "83") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "83") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "83") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_26 FALSE"
                                    (rule "inEqSimp_strengthen1" (formula "56") (ifseqformula "64"))
                                    (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "56"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                    (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0"))
                                    (rule "leq_literals" (formula "64") (term "0"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "false_right" (formula "64"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEq" (formula "83") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "83") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "83") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEqRigid" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "80") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "80"))
                                       (rule "false_right" (formula "80"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0"))
                                 (rule "distr_forallAnd" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "shift_paren_or" (formula "57") (term "0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                 (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                 (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "true_left" (formula "51"))
                                 (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                 (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                 (rule "cnf_rightDist" (formula "56") (term "0"))
                                 (rule "distr_forallAnd" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "commute_or_2" (formula "56") (term "0"))
                                 (rule "shift_paren_or" (formula "57") (term "0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "55") (term "2,0"))
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_26 TRUE"
                                    (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                    (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,0"))
                                    (rule "add_literals" (formula "56") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "56") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "56") (term "0,0,0"))
                                    (rule "leq_literals" (formula "56") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "54") (term "0") (ifseqformula "55"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,0"))
                                    (rule "times_zero_1" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "true_left" (formula "54"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "55"))
                                    (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "80"))
                                       (rule "false_right" (formula "80"))
                                       (rule "applyEq" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "68") (term "0") (ifseqformula "2"))
                                       (rule "disjointAllFields" (formula "68") (ifseqformula "34"))
                                       (rule "false_right" (formula "68"))
                                       (rule "applyEq" (formula "78") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "78") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "78") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "78") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "78") (term "0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "77") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "72") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "81") (ifseqformula "1"))
                                    )
                                 )
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_26 FALSE"
                                    (rule "inEqSimp_strengthen1" (formula "54") (ifseqformula "62"))
                                    (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_contradEq7" (formula "62") (ifseqformula "54"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                    (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0"))
                                    (rule "leq_literals" (formula "62") (term "0"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "false_right" (formula "62"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEq" (formula "81") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "81") (term "0") (ifseqformula "40"))
                                       (rule "eqSymm" (formula "81"))
                                       (rule "applyEqRigid" (formula "78") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "79") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "79"))
                                       (rule "false_right" (formula "79"))
                                       (rule "applyEq" (formula "67") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "73") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "81") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "53") (inst "i=i") (inst "r=r"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "replaceKnownSelect_taclet42_0" (formula "53") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "53") (term "0,1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "1,1,0,0,0,1,0") (ifseqformula "40"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,1,0,0,0,1,0") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "13"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "53"))
                           (rule "exLeft" (formula "53") (inst "sk=i_25"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "53"))
                           (rule "inEqSimp_ltToLeq" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "53"))
                           (rule "disjointDefinition" (formula "57"))
                           (rule "castedGetAny" (formula "55") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                           (rule "polySimp_elimOne" (formula "54") (term "0"))
                           (rule "pullOutSelect" (formula "56") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_23"))
                           (rule "applyEq" (formula "55") (term "1") (ifseqformula "56"))
                           (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "70")))
                           (rule "replaceKnownSelect_taclet36_0" (formula "56") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "56") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0,0") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,1,0,0") (ifseqformula "13"))
                           (rule "replace_known_left" (formula "56") (term "1,0,1,0,0") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                           (rule "elementOfUnion" (formula "56") (term "0,0"))
                           (rule "elementOfSingleton" (formula "56") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "elementOfSingleton" (formula "56") (term "0,0"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "70")))
                           (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "56"))
                           (rule "applyEqReverse" (formula "57") (term "1,0,0,0,0") (ifseqformula "56"))
                           (rule "hideAuxiliaryEq" (formula "56"))
                           (rule "pullOutSelect" (formula "55") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_13"))
                           (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "55"))
                           (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "replaceKnownSelect_taclet14_0" (formula "55") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "55") (term "2,0"))
                           (rule "elementOfUnion" (formula "55") (term "0,0"))
                           (rule "elementOfSingleton" (formula "55") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "elementOfSingleton" (formula "55") (term "0,0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "55"))
                           (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "55"))
                           (rule "hideAuxiliaryEq" (formula "55"))
                           (rule "lenOfSeqConcat" (formula "54") (term "0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "polySimp_addComm0" (formula "54") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0"))
                           (rule "add_zero_left" (formula "54") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                           (rule "polySimp_elimOne" (formula "54") (term "0"))
                           (rule "getOfSeqConcat" (formula "55") (term "0"))
                           (rule "polySimp_elimSub" (formula "55") (term "1,2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                           (rule "getOfSeqSingleton" (formula "55") (term "2,0"))
                           (rule "castDel" (formula "55") (term "1,2,0"))
                           (rule "polySimp_sepNegMonomial" (formula "55") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "56") (term "0"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "0,1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "0,0,1,1,0,0,0"))
                           (rule "commute_or_2" (formula "30") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                           (rule "andLeft" (formula "35"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addComm0" (formula "35") (term "1"))
                           (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                           (rule "lenOfSeqConcat" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_homoEq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                           (rule "add_literals" (formula "35") (term "1,0"))
                           (rule "times_zero_1" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commuteIntersection" (formula "47") (term "0"))
                           (rule "commuteIntersection" (formula "48") (term "0"))
                           (rule "commuteIntersection" (formula "49") (term "0"))
                           (rule "ifthenelse_split" (formula "29") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_22 TRUE"
                              (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "eqSymm" (formula "30"))
                              (rule "applyEq" (formula "55") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_commuteGeq" (formula "55"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                              (rule "applyEq" (formula "55") (term "0,0,2,0") (ifseqformula "28"))
                              (rule "eqSymm" (formula "55") (term "0,2,0"))
                              (rule "applyEq" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "55") (term "1") (ifseqformula "29"))
                              (rule "ifEqualsInteger" (formula "55"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "applyEq" (formula "56") (term "1,0,0,0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                              (rule "times_zero_1" (formula "53") (term "0,0"))
                              (rule "add_zero_left" (formula "53") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "55") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,1"))
                              (rule "commuteUnion" (formula "33") (term "1"))
                              (rule "commuteIntersection" (formula "57") (term "0"))
                              (rule "commute_and_2" (formula "30") (term "1,1,0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "commute_or_2" (formula "56") (term "0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or" (formula "55"))
                              (rule "cnf_rightDist" (formula "56"))
                              (rule "andLeft" (formula "56"))
                              (rule "commute_or_2" (formula "56"))
                              (rule "shift_paren_or" (formula "57"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "56") (term "0"))
                              (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "54"))
                              (rule "polySimp_addAssoc" (formula "56") (term "1,0,0"))
                              (rule "add_literals" (formula "56") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "56") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "true_left" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "inEqSimp_or_tautInEq2" (formula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "55") (term "0,1"))
                              (rule "add_literals" (formula "55") (term "1,0,1"))
                              (rule "times_zero_1" (formula "55") (term "0,1"))
                              (rule "leq_literals" (formula "55") (term "1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "commute_or" (formula "55"))
                              (rule "commute_or" (formula "57") (term "0,0,0"))
                              (rule "ifthenelse_split" (formula "32") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "32") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "32"))
                                 (rule "commute_or_2" (formula "57") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or" (formula "30") (term "0"))
                                 (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "true_left" (formula "51"))
                                 (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                 (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                 (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                 (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                 (rule "commute_and_2" (formula "57") (term "1,1,0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0"))
                                 (rule "distr_forallAnd" (formula "58"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "castDel" (formula "58") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "58"))
                                 (rule "commute_or" (formula "58") (term "0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "commute_or_2" (formula "59") (term "0"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "85"))
                                    (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "66"))
                                    (rule "false_right" (formula "66"))
                                    (rule "applyEq" (formula "82") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "82"))
                                    (rule "false_right" (formula "82"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "76") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "84") (ifseqformula "1"))
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "46") (term "1,0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "commute_or_2" (formula "55") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or" (formula "30") (term "0"))
                                 (rule "arrayLengthIsAnInt" (formula "49") (term "0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "true_left" (formula "49"))
                                 (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                 (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "true_left" (formula "48"))
                                 (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                 (rule "commute_and_2" (formula "55") (term "1,1,0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0"))
                                 (rule "distr_forallAnd" (formula "56"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "commute_or" (formula "56") (term "0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "commute_or_2" (formula "57") (term "0"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "84") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "84") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "84") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "84") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "84") (term "0") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEqRigid" (formula "82") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "82"))
                                    (rule "false_right" (formula "82"))
                                    (rule "applyEq" (formula "82") (term "0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "81") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "70") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "70") (ifseqformula "34"))
                                    (rule "false_right" (formula "70"))
                                    (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "false_right" (formula "64"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "74") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "83") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_22 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "60"))
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                              (rule "add_literals" (formula "60") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "60") (term "1,0,0"))
                              (rule "add_zero_right" (formula "60") (term "0,0"))
                              (rule "leq_literals" (formula "60") (term "0"))
                              (builtin "One Step Simplification" (formula "60"))
                              (rule "false_right" (formula "60"))
                              (rule "commuteUnion" (formula "33") (term "1"))
                              (rule "commuteIntersection" (formula "57") (term "0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "56") (term "0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "commute_and_2" (formula "30") (term "1,1,0"))
                              (rule "commute_or" (formula "56") (term "0,0,0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "cnf_rightDist" (formula "56") (term "0"))
                              (rule "distr_forallAnd" (formula "56"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "castDel" (formula "56") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "56") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "57") (term "0"))
                              (rule "distr_forallAnd" (formula "57"))
                              (rule "andLeft" (formula "57"))
                              (rule "shift_paren_or" (formula "58") (term "0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "ifthenelse_split" (formula "34") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                 (rule "hideAuxiliaryEq" (formula "35"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "34"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "34"))
                                 (rule "cnf_rightDist" (formula "58") (term "0"))
                                 (rule "distr_forallAnd" (formula "58"))
                                 (rule "andLeft" (formula "58"))
                                 (rule "commute_or_2" (formula "58") (term "0"))
                                 (rule "shift_paren_or" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "59") (term "0,0"))
                                 (rule "arrayLengthNotNegative" (formula "53") (term "0"))
                                 (rule "applyEq" (formula "53") (term "0") (ifseqformula "54"))
                                 (rule "arrayLengthIsAnInt" (formula "53") (term "0"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "arrayLengthNotNegative" (formula "52") (term "0"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "arrayLengthIsAnInt" (formula "52") (term "0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "ifthenelse_split" (formula "57") (term "2,0"))
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_25 TRUE"
                                    (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                    (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                    (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "58") (term "0,0,0"))
                                    (rule "leq_literals" (formula "58") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "eqSymm" (formula "58"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "57"))
                                    (rule "inEqSimp_homoInEq1" (formula "56"))
                                    (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                    (rule "add_literals" (formula "56") (term "1,0"))
                                    (rule "times_zero_1" (formula "56") (term "0"))
                                    (rule "leq_literals" (formula "56"))
                                    (rule "true_left" (formula "56"))
                                    (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "60") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "57"))
                                    (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "61") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "81") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "81"))
                                       (rule "false_right" (formula "81"))
                                       (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "81") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "81") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "81"))
                                       (rule "applyEq" (formula "80") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "69") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "69") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "75") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "83") (ifseqformula "1"))
                                    )
                                 )
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_25 FALSE"
                                    (rule "inEqSimp_strengthen1" (formula "56") (ifseqformula "64"))
                                    (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "56"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                    (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "64") (term "0,0"))
                                    (rule "leq_literals" (formula "64") (term "0"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "false_right" (formula "64"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "76") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "83") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "cnf_rightDist" (formula "56") (term "0"))
                                 (rule "distr_forallAnd" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "commute_or_2" (formula "56") (term "0"))
                                 (rule "shift_paren_or" (formula "57") (term "0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                 (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                 (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "true_left" (formula "51"))
                                 (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                 (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                 (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "ifthenelse_split" (formula "55") (term "2,0"))
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_25 TRUE"
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "55"))
                                    (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0,0"))
                                    (rule "add_literals" (formula "56") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "56") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0"))
                                    (rule "leq_literals" (formula "56") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "applyEq" (formula "54") (term "0") (ifseqformula "55"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,0"))
                                    (rule "times_zero_1" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "true_left" (formula "54"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "55"))
                                    (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEqRigid" (formula "83") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "83") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "0") (ifseqformula "40"))
                                       (rule "applyEqRigid" (formula "81") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "81"))
                                       (rule "false_right" (formula "81"))
                                       (rule "applyEqRigid" (formula "80") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "69") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEq" (formula "68") (term "0") (ifseqformula "2"))
                                       (rule "disjointAllFields" (formula "68") (ifseqformula "34"))
                                       (rule "false_right" (formula "68"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "73") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_25 FALSE"
                                    (rule "inEqSimp_strengthen1" (formula "54") (ifseqformula "62"))
                                    (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_contradEq7" (formula "62") (ifseqformula "54"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                    (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0"))
                                    (rule "leq_literals" (formula "62") (term "0"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "false_right" (formula "62"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEq" (formula "83") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "83") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "83") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "83") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "0") (ifseqformula "40"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEqRigid" (formula "80") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "80"))
                                       (rule "false_right" (formula "80"))
                                       (rule "applyEq" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                        (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "36") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "60") (term "2") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "32") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "32") (term "2,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "34") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "16"))
                        (rule "hideAuxiliaryEq" (formula "16"))
                        (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "54"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEqReverse" (formula "29") (term "1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "hideAuxiliaryEq" (formula "30"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "49") (inst "i=i") (inst "r=r"))
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "replaceKnownSelect_taclet42_0" (formula "49") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "49") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet45_0" (formula "49") (term "0,1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,1,0,0,0,1,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,1,1,0,0,0,1,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "13"))
                           (rule "andLeft" (formula "49"))
                           (rule "andLeft" (formula "49"))
                           (rule "exLeft" (formula "49") (inst "sk=i_24"))
                           (rule "andLeft" (formula "49"))
                           (rule "andLeft" (formula "49"))
                           (rule "inEqSimp_ltToLeq" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "49"))
                           (rule "disjointDefinition" (formula "53"))
                           (rule "castedGetAny" (formula "51") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "pullOutSelect" (formula "52") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_22"))
                           (rule "applyEq" (formula "51") (term "1") (ifseqformula "52"))
                           (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "65")))
                           (rule "replaceKnownSelect_taclet36_0" (formula "52") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "52") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,1,0,0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "52") (term "1,0,0,1,0,0") (ifseqformula "67"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "66")) (ifInst ""  (formula "24")))
                           (rule "elementOfUnion" (formula "52") (term "0,0"))
                           (rule "elementOfSingleton" (formula "52") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "elementOfSingleton" (formula "52") (term "0,0"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "65")))
                           (rule "applyEqReverse" (formula "53") (term "1,0,0,0,0") (ifseqformula "52"))
                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "52"))
                           (rule "hideAuxiliaryEq" (formula "52"))
                           (rule "pullOutSelect" (formula "51") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_12"))
                           (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "51"))
                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "replaceKnownSelect_taclet14_0" (formula "51") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "51") (term "2,0"))
                           (rule "elementOfUnion" (formula "51") (term "0,0"))
                           (rule "elementOfSingleton" (formula "51") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "elementOfSingleton" (formula "51") (term "0,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "51"))
                           (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                           (rule "hideAuxiliaryEq" (formula "51"))
                           (rule "lenOfSeqConcat" (formula "50") (term "0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "polySimp_addComm0" (formula "50") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0"))
                           (rule "add_zero_left" (formula "50") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "getOfSeqConcat" (formula "51") (term "0"))
                           (rule "polySimp_elimSub" (formula "51") (term "1,2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                           (rule "getOfSeqSingleton" (formula "51") (term "2,0"))
                           (rule "castDel" (formula "51") (term "1,2,0"))
                           (rule "polySimp_sepNegMonomial" (formula "51") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "52") (term "0"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "0,1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "0,0,1,1,0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                           (rule "andLeft" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "31") (term "1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_addComm0" (formula "31") (term "1"))
                           (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_homoEq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,0"))
                           (rule "times_zero_1" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_split" (formula "27") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_22 TRUE"
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,0"))
                              (rule "times_zero_1" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "26"))
                              (rule "inEqSimp_commuteGeq" (formula "50"))
                              (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0,0"))
                              (rule "leq_literals" (formula "27") (term "0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "51") (term "0,0,2,0") (ifseqformula "26"))
                              (rule "eqSymm" (formula "51") (term "0,2,0"))
                              (rule "applyEq" (formula "51") (term "1") (ifseqformula "27"))
                              (rule "ifEqualsInteger" (formula "51"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                              (rule "times_zero_1" (formula "49") (term "0,0"))
                              (rule "add_zero_left" (formula "49") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,1"))
                              (rule "commuteIntersection" (formula "43") (term "0"))
                              (rule "commuteIntersection" (formula "44") (term "0"))
                              (rule "commuteIntersection" (formula "45") (term "0"))
                              (rule "commuteIntersection" (formula "53") (term "0"))
                              (rule "commute_and_2" (formula "28") (term "1,1,0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "commute_or" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "52"))
                              (rule "andLeft" (formula "52"))
                              (rule "commute_or_2" (formula "52"))
                              (rule "shift_paren_or" (formula "53"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "52") (term "0"))
                              (rule "replace_known_left" (formula "52") (term "1,0") (ifseqformula "50"))
                              (rule "polySimp_addAssoc" (formula "52") (term "1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "52") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "inEqSimp_or_tautInEq2" (formula "51"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1"))
                              (rule "add_literals" (formula "51") (term "1,0,1"))
                              (rule "times_zero_1" (formula "51") (term "0,1"))
                              (rule "leq_literals" (formula "51") (term "1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "commute_or" (formula "53") (term "0,0,0"))
                              (rule "arrayLengthNotNegative" (formula "47") (term "0"))
                              (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                              (rule "arrayLengthIsAnInt" (formula "47") (term "0"))
                              (builtin "One Step Simplification" (formula "47"))
                              (rule "true_left" (formula "47"))
                              (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                              (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "true_left" (formula "46"))
                              (rule "commute_or_2" (formula "53") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "commute_and_2" (formula "53") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "castDel" (formula "54") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "54") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "54") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "commute_or" (formula "54") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or_2" (formula "55") (term "0"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "80"))
                                 (rule "applyEq" (formula "80") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "80") (term "2,1") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "80") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                 (rule "disjointAllFields" (formula "77") (ifseqformula "32"))
                                 (rule "false_right" (formula "77"))
                                 (rule "applyEq" (formula "78") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "78") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "78") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "77") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "77"))
                                 (rule "false_right" (formula "77"))
                                 (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "close" (formula "71") (ifseqformula "3"))
                              )
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                 (rule "close" (formula "79") (ifseqformula "1"))
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_22 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "56"))
                              (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                              (rule "add_literals" (formula "56") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "56") (term "1,0,0"))
                              (rule "add_zero_right" (formula "56") (term "0,0"))
                              (rule "leq_literals" (formula "56") (term "0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "false_right" (formula "56"))
                              (rule "commuteIntersection" (formula "43") (term "0"))
                              (rule "commuteIntersection" (formula "44") (term "0"))
                              (rule "commuteIntersection" (formula "45") (term "0"))
                              (rule "commuteIntersection" (formula "53") (term "0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "commute_or" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "commute_or_2" (formula "28") (term "0,0"))
                              (rule "commute_and_2" (formula "28") (term "1,1,0"))
                              (rule "commute_or" (formula "52") (term "0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "52") (term "0"))
                              (rule "distr_forallAnd" (formula "52"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "castDel" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "52") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "52") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "53") (term "0"))
                              (rule "distr_forallAnd" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "shift_paren_or" (formula "54") (term "0"))
                              (rule "commute_or" (formula "54") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                              (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                              (rule "arrayLengthIsAnInt" (formula "49") (term "0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "true_left" (formula "49"))
                              (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                              (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "commute_or_2" (formula "54") (term "0"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "ifthenelse_split" (formula "53") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_24 TRUE"
                                 (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                 (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                 (rule "leq_literals" (formula "54") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "eqSymm" (formula "54"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "52"))
                                 (rule "polySimp_pullOutFactor1" (formula "52") (term "0"))
                                 (rule "add_literals" (formula "52") (term "1,0"))
                                 (rule "times_zero_1" (formula "52") (term "0"))
                                 (rule "leq_literals" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "applyEq" (formula "55") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "53"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "76") (ifseqformula "32"))
                                    (rule "false_right" (formula "76"))
                                    (rule "applyEqRigid" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "70") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "78") (ifseqformula "1"))
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_24 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "52") (ifseqformula "60"))
                                 (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "52"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                 (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0"))
                                 (rule "leq_literals" (formula "60") (term "0"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "false_right" (formula "60"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEqRigid" (formula "79") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "79") (term "0") (ifseqformula "38"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "75") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "75") (ifseqformula "32"))
                                    (rule "false_right" (formula "75"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "75") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "75"))
                                    (rule "false_right" (formula "75"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "70") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "78") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "49") (inst "i=i") (inst "r=r"))
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "replaceKnownSelect_taclet42_0" (formula "49") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "49") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet45_0" (formula "49") (term "0,1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,1,0,0,0,1,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,1,1,0,0,0,1,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "13"))
                           (rule "andLeft" (formula "49"))
                           (rule "andLeft" (formula "49"))
                           (rule "exLeft" (formula "49") (inst "sk=i_23"))
                           (rule "andLeft" (formula "49"))
                           (rule "andLeft" (formula "49"))
                           (rule "inEqSimp_ltToLeq" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "49"))
                           (rule "disjointDefinition" (formula "53"))
                           (rule "castedGetAny" (formula "51") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "pullOutSelect" (formula "52") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_21"))
                           (rule "applyEq" (formula "51") (term "1") (ifseqformula "52"))
                           (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "66")))
                           (rule "replaceKnownSelect_taclet36_0" (formula "52") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "52") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,1,0,0") (ifseqformula "13"))
                           (rule "replace_known_left" (formula "52") (term "1,0,1,0,0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                           (rule "elementOfUnion" (formula "52") (term "0,0"))
                           (rule "elementOfSingleton" (formula "52") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "elementOfSingleton" (formula "52") (term "0,0"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "66")))
                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "52"))
                           (rule "applyEqReverse" (formula "53") (term "1,0,0,0,0") (ifseqformula "52"))
                           (rule "hideAuxiliaryEq" (formula "52"))
                           (rule "pullOutSelect" (formula "51") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_11"))
                           (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "51"))
                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "replaceKnownSelect_taclet14_0" (formula "51") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "51") (term "2,0"))
                           (rule "elementOfUnion" (formula "51") (term "0,0"))
                           (rule "elementOfSingleton" (formula "51") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "elementOfSingleton" (formula "51") (term "0,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "51"))
                           (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                           (rule "hideAuxiliaryEq" (formula "51"))
                           (rule "lenOfSeqConcat" (formula "50") (term "0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "polySimp_addComm0" (formula "50") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0"))
                           (rule "add_zero_left" (formula "50") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "getOfSeqConcat" (formula "51") (term "0"))
                           (rule "polySimp_elimSub" (formula "51") (term "1,2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                           (rule "getOfSeqSingleton" (formula "51") (term "2,0"))
                           (rule "castDel" (formula "51") (term "1,2,0"))
                           (rule "polySimp_sepNegMonomial" (formula "51") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "52") (term "0"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "0,1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "0,0,1,1,0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                           (rule "andLeft" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "31") (term "1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_addComm0" (formula "31") (term "1"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_homoEq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,0"))
                           (rule "times_zero_1" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_split" (formula "27") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_22 TRUE"
                              (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "eqSymm" (formula "28"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,0"))
                              (rule "times_zero_1" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "26"))
                              (rule "inEqSimp_commuteGeq" (formula "50"))
                              (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                              (rule "applyEq" (formula "51") (term "0,0,2,0") (ifseqformula "26"))
                              (rule "eqSymm" (formula "51") (term "0,2,0"))
                              (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "51") (term "1") (ifseqformula "27"))
                              (rule "ifEqualsInteger" (formula "51"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                              (rule "mul_literals" (formula "49") (term "0,0"))
                              (rule "add_zero_left" (formula "49") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,1"))
                              (rule "commuteIntersection" (formula "43") (term "0"))
                              (rule "commuteIntersection" (formula "44") (term "0"))
                              (rule "commuteIntersection" (formula "45") (term "0"))
                              (rule "commuteIntersection" (formula "53") (term "0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "commute_and_2" (formula "28") (term "1,1,0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "commute_or" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "52"))
                              (rule "andLeft" (formula "52"))
                              (rule "commute_or_2" (formula "52"))
                              (rule "shift_paren_or" (formula "53"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "52") (term "0"))
                              (rule "replace_known_left" (formula "52") (term "1,0") (ifseqformula "50"))
                              (rule "polySimp_addAssoc" (formula "52") (term "1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "52") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "inEqSimp_or_tautInEq2" (formula "51"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1"))
                              (rule "add_literals" (formula "51") (term "1,0,1"))
                              (rule "times_zero_1" (formula "51") (term "0,1"))
                              (rule "leq_literals" (formula "51") (term "1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "commute_or" (formula "53") (term "0,0,0"))
                              (rule "commute_or_2" (formula "53") (term "0,0"))
                              (rule "arrayLengthNotNegative" (formula "47") (term "0"))
                              (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                              (rule "arrayLengthIsAnInt" (formula "47") (term "0"))
                              (builtin "One Step Simplification" (formula "47"))
                              (rule "true_left" (formula "47"))
                              (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "true_left" (formula "46"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                              (rule "commute_and_2" (formula "53") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "castDel" (formula "54") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "54") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "54") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "commute_or" (formula "54") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or_2" (formula "55") (term "0"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "81"))
                                 (rule "applyEq" (formula "81") (term "2,1") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "81") (term "1") (ifseqformula "4"))
                                 (rule "applyEqRigid" (formula "81") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "81") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "78") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEqRigid" (formula "78") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "78"))
                                 (rule "false_right" (formula "78"))
                                 (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                 (rule "disjointAllFields" (formula "77") (ifseqformula "32"))
                                 (rule "false_right" (formula "77"))
                                 (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "close" (formula "72") (ifseqformula "3"))
                              )
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                 (rule "close" (formula "80") (ifseqformula "1"))
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_22 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "56"))
                              (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                              (rule "add_literals" (formula "56") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "56") (term "1,0,0"))
                              (rule "add_zero_right" (formula "56") (term "0,0"))
                              (rule "leq_literals" (formula "56") (term "0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "false_right" (formula "56"))
                              (rule "commuteIntersection" (formula "43") (term "0"))
                              (rule "commuteIntersection" (formula "44") (term "0"))
                              (rule "commuteIntersection" (formula "45") (term "0"))
                              (rule "commuteIntersection" (formula "53") (term "0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "commute_or" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "commute_or_2" (formula "28") (term "0,0"))
                              (rule "commute_and_2" (formula "28") (term "1,1,0"))
                              (rule "commute_or" (formula "52") (term "0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "52") (term "0"))
                              (rule "distr_forallAnd" (formula "52"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "castDel" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "52") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "52") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "53") (term "0"))
                              (rule "distr_forallAnd" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "shift_paren_or" (formula "54") (term "0"))
                              (rule "commute_or" (formula "54") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "commute_or_2" (formula "54") (term "0"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                              (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                              (rule "arrayLengthIsAnInt" (formula "49") (term "0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "true_left" (formula "49"))
                              (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                              (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                              (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "ifthenelse_split" (formula "53") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_23 TRUE"
                                 (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                 (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                 (rule "leq_literals" (formula "54") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "eqSymm" (formula "54"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "52"))
                                 (rule "polySimp_pullOutFactor1" (formula "52") (term "0"))
                                 (rule "add_literals" (formula "52") (term "1,0"))
                                 (rule "times_zero_1" (formula "52") (term "0"))
                                 (rule "leq_literals" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "52"))
                                 (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "53"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "55") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEqRigid" (formula "80") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "80") (term "0") (ifseqformula "38"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEqRigid" (formula "77") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "78") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "78"))
                                    (rule "false_right" (formula "78"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "71") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "79") (ifseqformula "1"))
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_23 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "52") (ifseqformula "60"))
                                 (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "52"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                 (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0"))
                                 (rule "leq_literals" (formula "60") (term "0"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "false_right" (formula "60"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "79") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "79") (term "1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "79") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "79") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "77") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "77"))
                                    (rule "false_right" (formula "77"))
                                    (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "76") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "76") (ifseqformula "32"))
                                    (rule "false_right" (formula "76"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "71") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "79") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "57"))
                  (branch "Case 1"
                     (rule "notRight" (formula "57"))
                     (rule "eqSymm" (formula "58"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "applyEqRigid" (formula "58") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "55") (term "0") (ifseqformula "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=f_5_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "59"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "50"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                     (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0") (ifseqformula "17") (ifseqformula "56"))
                     (rule "elementOfIntersect" (formula "1") (term "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "46"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 2"
                     (rule "notRight" (formula "57"))
                     (rule "eqSymm" (formula "58"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=f_5_7"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "13"))
                     (rule "eqSymm" (formula "59"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_8"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "14"))
                     (rule "replace_known_left" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,0") (ifseqformula "59"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0") (ifseqformula "18") (ifseqformula "57"))
                     (rule "elementOfIntersect" (formula "1") (term "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "60"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "elementOfSubsetOfUnion2" (formula "46") (ifseqformula "17") (ifseqformula "57"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "elementOfIntersect" (formula "46"))
                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "47")))
                     (rule "false_right" (formula "46"))
                     (rule "nnf_imp2or" (formula "44") (term "0"))
                     (rule "nnf_imp2or" (formula "45") (term "0"))
                     (rule "nnf_notAnd" (formula "44") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "44") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "44") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "44") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "44") (term "1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                     (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "45") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "45") (term "1,0,0"))
                     (rule "times_zero_1" (formula "45") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "45") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                     (rule "mul_literals" (formula "45") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "45") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "27") (inst "i=i") (inst "r=r"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "replaceKnownSelect_taclet11_0" (formula "27") (term "0,1"))
                     (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,1,1,0,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "24"))
                     (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,1,1,0,0,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1,0,0,0,1,0") (ifseqformula "13"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "exLeft" (formula "27") (inst "sk=i_27"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "27"))
                     (rule "disjointDefinition" (formula "31"))
                     (rule "castedGetAny" (formula "29") (term "0"))
                     (rule "lenOfSeqConcat" (formula "28") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0"))
                     (rule "add_zero_left" (formula "28") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "getOfSeqConcat" (formula "29") (term "0"))
                     (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                     (rule "getOfSeqSingleton" (formula "29") (term "2,0"))
                     (rule "castDel" (formula "29") (term "1,2,0"))
                     (rule "polySimp_sepNegMonomial" (formula "29") (term "0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,0,2,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "30") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_25"))
                     (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                     (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "56")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "13"))
                     (rule "replace_known_right" (formula "30") (term "0,0,1,0,0") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "58")))
                     (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
                     (rule "applyEqReverse" (formula "31") (term "1,0,0,0,0") (ifseqformula "30"))
                     (rule "hideAuxiliaryEq" (formula "30"))
                     (rule "nnf_imp2or" (formula "30") (term "0"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "1,0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "1,1,0,0,0"))
                     (rule "nnf_notOr" (formula "30") (term "0,1,1,0,0,0"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "47"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "47") (term "1,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "47") (term "1,1"))
                     (rule "replaceKnownSelect_taclet28_0" (formula "47") (term "1,1,0,0"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "47") (term "1,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "47") (term "1,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "47") (term "1,0,1,0"))
                     (rule "replaceKnownSelect_taclet26_0" (formula "47") (term "1,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "47") (term "1,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet28_0" (formula "47") (term "0,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet29_0" (formula "47") (term "0,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet26_0" (formula "47") (term "0,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "47") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "47") (term "0,1,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet27_0" (formula "47") (term "0,1,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "47") (term "0,1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "47") (term "0,1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "47") (term "0,0,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "47") (term "0,1,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet30_0" (formula "47") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "47") (term "0,1,1,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "47") (term "0,0,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "47") (term "0,1,1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "47") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "47") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "47") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet31_0" (formula "47") (term "0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet24_0" (formula "47") (term "0,1,1,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "47") (term "0,1,1,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet22_0" (formula "47") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "47") (term "0,1,1,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "47") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "47") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet25_0" (formula "47") (term "0,1,1,0,0,0,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet23_0" (formula "47") (term "0,1,1,0,0,0,0,1,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "48"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "49"))
                     (rule "notLeft" (formula "48"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "49"))
                     (rule "notLeft" (formula "48"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "49"))
                     (rule "notLeft" (formula "48"))
                     (rule "notLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "eqSymm" (formula "54"))
                     (rule "eqSymm" (formula "53"))
                     (rule "inEqSimp_commuteLeq" (formula "56"))
                     (rule "inEqSimp_commuteLeq" (formula "55"))
                     (rule "disjointDefinition" (formula "52"))
                     (builtin "One Step Simplification" (formula "52"))
                     (rule "notLeft" (formula "52"))
                     (rule "eqSymm" (formula "58"))
                     (rule "disjointDefinition" (formula "51"))
                     (builtin "One Step Simplification" (formula "51"))
                     (rule "notLeft" (formula "51"))
                     (rule "eqSymm" (formula "57"))
                     (rule "disjointDefinition" (formula "50"))
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "notLeft" (formula "50"))
                     (rule "eqSymm" (formula "56"))
                     (rule "disjointDefinition" (formula "49"))
                     (rule "disjointDefinition" (formula "47"))
                     (rule "disjointDefinition" (formula "48"))
                     (rule "sortsDisjointModuloNull" (formula "58"))
                     (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "60"))
                     (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                     (rule "false_right" (formula "58"))
                     (rule "sortsDisjointModuloNull" (formula "57"))
                     (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "59"))
                     (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "65")))
                     (rule "false_right" (formula "57"))
                     (rule "sortsDisjointModuloNull" (formula "56"))
                     (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "64")))
                     (rule "false_right" (formula "56"))
                     (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_server_7"))
                     (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "65")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0,0") (ifseqformula "24"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "eqSymm" (formula "53"))
                     (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "53"))
                     (rule "hideAuxiliaryEq" (formula "53"))
                     (rule "replace_known_left" (formula "52") (term "1,0,1,0,0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "65")) (ifInst ""  (formula "66")))
                     (rule "elementOfUnion" (formula "52") (term "0,0"))
                     (rule "elementOfSingleton" (formula "52") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "64")))
                     (rule "elementOfSingleton" (formula "52") (term "0,0"))
                     (builtin "One Step Simplification" (formula "52"))
                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=de_uni_trier_infsec_eVotingVerif_core_Server_sender_7"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "14"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "61"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "63")))
                     (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "49") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_rep_9"))
                     (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "49"))
                     (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "49"))
                     (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "replaceKnownSelect_taclet11_0" (formula "49") (term "2,0"))
                     (rule "elementOfUnion" (formula "49") (term "0,0"))
                     (rule "elementOfSingleton" (formula "49") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "elementOfSingleton" (formula "49") (term "0,0"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "applyEqReverse" (formula "47") (term "0,0") (ifseqformula "49"))
                     (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "49"))
                     (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "49"))
                     (rule "hideAuxiliaryEq" (formula "49"))
                     (rule "commute_or" (formula "54") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0,0"))
                     (rule "commute_or" (formula "55") (term "0,0"))
                     (rule "commute_or_2" (formula "30") (term "0,0"))
                     (rule "commuteIntersection" (formula "31") (term "0"))
                     (rule "ifthenelse_split" (formula "16") (term "0"))
                     (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                        (rule "applyEqReverse" (formula "33") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "60") (term "2") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "38") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "17"))
                        (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "17"))
                        (rule "hideAuxiliaryEq" (formula "17"))
                        (rule "elementOfSubsetOfUnion2" (formula "59") (ifseqformula "17") (ifseqformula "70"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "elementOfIntersect" (formula "56"))
                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "60")))
                        (rule "false_right" (formula "56"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "53") (inst "i=i") (inst "r=r"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "replaceKnownSelect_taclet42_0" (formula "53") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "53") (term "0,1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "1,1,0,0,0,1,0") (ifseqformula "40"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,1,0,0,0,1,0") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "13"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "53"))
                           (rule "exLeft" (formula "53") (inst "sk=i_31"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "53"))
                           (rule "inEqSimp_ltToLeq" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "53"))
                           (rule "disjointDefinition" (formula "57"))
                           (rule "castedGetAny" (formula "55") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                           (rule "polySimp_elimOne" (formula "54") (term "0"))
                           (rule "pullOutSelect" (formula "56") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_29"))
                           (rule "applyEq" (formula "55") (term "1") (ifseqformula "56"))
                           (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "69")))
                           (rule "replaceKnownSelect_taclet36_0" (formula "56") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "56") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0,0") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,1,0,0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "56") (term "1,0,0,1,0,0") (ifseqformula "71"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "70")) (ifInst ""  (formula "26")))
                           (rule "elementOfUnion" (formula "56") (term "0,0"))
                           (rule "elementOfSingleton" (formula "56") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "69")))
                           (rule "elementOfSingleton" (formula "56") (term "0,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "applyEqReverse" (formula "57") (term "1,0,0,0,0") (ifseqformula "56"))
                           (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "56"))
                           (rule "hideAuxiliaryEq" (formula "56"))
                           (rule "pullOutSelect" (formula "55") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_18"))
                           (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "55"))
                           (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "replaceKnownSelect_taclet14_0" (formula "55") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "55") (term "2,0"))
                           (rule "elementOfUnion" (formula "55") (term "0,0"))
                           (rule "elementOfSingleton" (formula "55") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "elementOfSingleton" (formula "55") (term "0,0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "55"))
                           (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "55"))
                           (rule "hideAuxiliaryEq" (formula "55"))
                           (rule "lenOfSeqConcat" (formula "54") (term "0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "polySimp_addComm0" (formula "54") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0"))
                           (rule "add_zero_left" (formula "54") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                           (rule "polySimp_elimOne" (formula "54") (term "0"))
                           (rule "getOfSeqConcat" (formula "55") (term "0"))
                           (rule "polySimp_elimSub" (formula "55") (term "1,2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                           (rule "getOfSeqSingleton" (formula "55") (term "2,0"))
                           (rule "castDel" (formula "55") (term "1,2,0"))
                           (rule "polySimp_sepNegMonomial" (formula "55") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "56") (term "0"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "0,1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "0,0,1,1,0,0,0"))
                           (rule "commute_or_2" (formula "30") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                           (rule "andLeft" (formula "35"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addComm0" (formula "35") (term "1"))
                           (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                           (rule "lenOfSeqConcat" (formula "36") (term "0,1,0,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "36") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "37"))
                           (rule "lenOfSeqConcat" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_homoEq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                           (rule "add_literals" (formula "35") (term "1,0"))
                           (rule "times_zero_1" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "applyEq" (formula "35") (term "0,0,1,0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commuteIntersection" (formula "47") (term "0"))
                           (rule "commuteIntersection" (formula "48") (term "0"))
                           (rule "commuteIntersection" (formula "49") (term "0"))
                           (rule "ifthenelse_split" (formula "29") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_27 TRUE"
                              (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "eqSymm" (formula "30"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "54") (term "0") (ifseqformula "28"))
                              (rule "inEqSimp_commuteGeq" (formula "54"))
                              (rule "applyEq" (formula "55") (term "0,0,2,0") (ifseqformula "28"))
                              (rule "eqSymm" (formula "55") (term "0,2,0"))
                              (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                              (rule "applyEq" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "56") (term "1,0,0,0,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "55") (term "1") (ifseqformula "29"))
                              (rule "ifEqualsInteger" (formula "55"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                              (rule "times_zero_1" (formula "53") (term "0,0"))
                              (rule "add_zero_left" (formula "53") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "55") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,1"))
                              (rule "commuteUnion" (formula "33") (term "1"))
                              (rule "commuteIntersection" (formula "57") (term "0"))
                              (rule "commute_and_2" (formula "30") (term "1,1,0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "commute_or_2" (formula "56") (term "0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "ifthenelse_split" (formula "32") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "32") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "32"))
                                 (rule "commute_or" (formula "56") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "56") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "55"))
                                 (rule "andLeft" (formula "55"))
                                 (rule "commute_or" (formula "55"))
                                 (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                 (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                 (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "true_left" (formula "51"))
                                 (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                 (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                 (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "cnf_rightDist" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "commute_or_2" (formula "56"))
                                 (rule "shift_paren_or" (formula "57"))
                                 (rule "commute_or" (formula "56") (term "0"))
                                 (rule "inEqSimp_or_weaken0" (formula "56") (term "0"))
                                 (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "54"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "1,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,1,0,0"))
                                 (rule "add_zero_left" (formula "56") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "commute_or" (formula "56") (term "0"))
                                 (rule "cnf_rightDist" (formula "55"))
                                 (rule "andLeft" (formula "55"))
                                 (rule "inEqSimp_or_tautInEq2" (formula "55"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "55") (term "0,1"))
                                 (rule "add_literals" (formula "55") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "0,1"))
                                 (rule "leq_literals" (formula "55") (term "1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "true_left" (formula "55"))
                                 (rule "commute_or" (formula "55"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or" (formula "30") (term "0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "castDel" (formula "57") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "commute_or" (formula "57") (term "0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0"))
                                 (rule "distr_forallAnd" (formula "58"))
                                 (rule "andLeft" (formula "58"))
                                 (rule "shift_paren_or" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "59") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "commute_or_2" (formula "59") (term "0"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "84") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "84") (term "0") (ifseqformula "42"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "66"))
                                    (rule "false_right" (formula "66"))
                                    (rule "applyEq" (formula "80") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "69") (term "0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "80") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "82") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "82"))
                                    (rule "false_right" (formula "82"))
                                    (rule "applyEq" (formula "69") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "81"))
                                    (rule "false_right" (formula "81"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "75") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "83") (ifseqformula "1"))
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "commute_or" (formula "54") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "54") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "53"))
                                 (rule "andLeft" (formula "53"))
                                 (rule "commute_or" (formula "53"))
                                 (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                 (rule "cnf_rightDist" (formula "54"))
                                 (rule "andLeft" (formula "54"))
                                 (rule "commute_or_2" (formula "54"))
                                 (rule "shift_paren_or" (formula "55"))
                                 (rule "commute_or" (formula "54") (term "0"))
                                 (rule "inEqSimp_or_weaken0" (formula "54") (term "0"))
                                 (rule "replace_known_left" (formula "54") (term "1,0") (ifseqformula "52"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "1,0,0"))
                                 (rule "add_literals" (formula "54") (term "0,1,0,0"))
                                 (rule "add_zero_left" (formula "54") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "true_left" (formula "54"))
                                 (rule "commute_or" (formula "54") (term "0"))
                                 (rule "arrayLengthIsAnInt" (formula "49") (term "0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "true_left" (formula "49"))
                                 (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                 (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "true_left" (formula "48"))
                                 (rule "cnf_rightDist" (formula "53"))
                                 (rule "andLeft" (formula "53"))
                                 (rule "inEqSimp_or_tautInEq2" (formula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "53") (term "0,1"))
                                 (rule "add_literals" (formula "53") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "53") (term "0,1"))
                                 (rule "leq_literals" (formula "53") (term "1"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "commute_or" (formula "53"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or" (formula "30") (term "0"))
                                 (rule "cnf_rightDist" (formula "55") (term "0"))
                                 (rule "distr_forallAnd" (formula "55"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "castDel" (formula "55") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "commute_or" (formula "55") (term "0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0"))
                                 (rule "distr_forallAnd" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "shift_paren_or" (formula "57") (term "0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "commute_or_2" (formula "57") (term "0"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "83"))
                                    (rule "applyEq" (formula "83") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "83") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "false_right" (formula "64"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "81"))
                                    (rule "false_right" (formula "81"))
                                    (rule "applyEqRigid" (formula "68") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "68") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "68") (ifseqformula "34"))
                                    (rule "false_right" (formula "68"))
                                    (rule "applyEqRigid" (formula "79") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "79"))
                                    (rule "false_right" (formula "79"))
                                    (rule "applyEq" (formula "78") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "73") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "82") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_27 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "60"))
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                              (rule "add_literals" (formula "60") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "60") (term "1,0,0"))
                              (rule "add_literals" (formula "60") (term "0,0"))
                              (rule "leq_literals" (formula "60") (term "0"))
                              (builtin "One Step Simplification" (formula "60"))
                              (rule "false_right" (formula "60"))
                              (rule "commuteUnion" (formula "33") (term "1"))
                              (rule "commuteIntersection" (formula "57") (term "0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "56") (term "0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "commute_and_2" (formula "30") (term "1,1,0"))
                              (rule "commute_or" (formula "56") (term "0,0,0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "cnf_rightDist" (formula "56") (term "0"))
                              (rule "distr_forallAnd" (formula "56"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "castDel" (formula "56") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "56") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "57") (term "0"))
                              (rule "distr_forallAnd" (formula "57"))
                              (rule "andLeft" (formula "57"))
                              (rule "shift_paren_or" (formula "58") (term "0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "ifthenelse_split" (formula "33") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "33") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "33"))
                                 (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "33"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0"))
                                 (rule "distr_forallAnd" (formula "58"))
                                 (rule "andLeft" (formula "58"))
                                 (rule "shift_paren_or" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "59") (term "0,0"))
                                 (rule "arrayLengthIsAnInt" (formula "53") (term "0"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "arrayLengthNotNegative" (formula "53") (term "0"))
                                 (rule "applyEq" (formula "53") (term "0") (ifseqformula "54"))
                                 (rule "arrayLengthIsAnInt" (formula "52") (term "0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "arrayLengthNotNegative" (formula "52") (term "0"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "cnf_rightDist" (formula "58") (term "0"))
                                 (rule "distr_forallAnd" (formula "58"))
                                 (rule "andLeft" (formula "58"))
                                 (rule "commute_or_2" (formula "58") (term "0"))
                                 (rule "shift_paren_or" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "59") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "57") (term "2,0"))
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_31 TRUE"
                                    (rule "applyEq" (formula "58") (term "0,0,0") (ifseqformula "57"))
                                    (rule "inEqSimp_homoInEq1" (formula "58") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0,0"))
                                    (rule "add_literals" (formula "58") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "58") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "58") (term "0,0,0"))
                                    (rule "leq_literals" (formula "58") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "eqSymm" (formula "58"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "57"))
                                    (rule "inEqSimp_homoInEq1" (formula "56"))
                                    (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                    (rule "add_literals" (formula "56") (term "1,0"))
                                    (rule "times_zero_1" (formula "56") (term "0"))
                                    (rule "leq_literals" (formula "56"))
                                    (rule "true_left" (formula "56"))
                                    (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "57"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "61") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "60") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "82") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEqRigid" (formula "80") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "80"))
                                       (rule "false_right" (formula "80"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "80") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "80"))
                                       (rule "false_right" (formula "80"))
                                       (rule "applyEqRigid" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_31 FALSE"
                                    (rule "inEqSimp_strengthen1" (formula "56") (ifseqformula "64"))
                                    (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "56"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                    (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                    (rule "add_literals" (formula "64") (term "0,0"))
                                    (rule "leq_literals" (formula "64") (term "0"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "false_right" (formula "64"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEq" (formula "83") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "83") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "81") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "81"))
                                       (rule "false_right" (formula "81"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "75") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "32") (term "1,0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0"))
                                 (rule "distr_forallAnd" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "shift_paren_or" (formula "57") (term "0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                 (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                 (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "true_left" (formula "51"))
                                 (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                 (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                 (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "cnf_rightDist" (formula "56") (term "0"))
                                 (rule "distr_forallAnd" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "commute_or_2" (formula "56") (term "0"))
                                 (rule "shift_paren_or" (formula "57") (term "0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "55") (term "2,0"))
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_31 TRUE"
                                    (rule "applyEq" (formula "54") (term "0") (ifseqformula "55"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,0"))
                                    (rule "times_zero_1" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "true_left" (formula "54"))
                                    (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0"))
                                    (rule "leq_literals" (formula "55") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "eqSymm" (formula "55"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "54"))
                                    (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "55"))
                                    (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "82") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "40"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEqRigid" (formula "80") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "80"))
                                       (rule "false_right" (formula "80"))
                                       (rule "applyEq" (formula "67") (term "0") (ifseqformula "2"))
                                       (rule "disjointAllFields" (formula "67") (ifseqformula "34"))
                                       (rule "false_right" (formula "67"))
                                       (rule "applyEqRigid" (formula "78") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "78"))
                                       (rule "false_right" (formula "78"))
                                       (rule "applyEq" (formula "77") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "72") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "81") (ifseqformula "1"))
                                    )
                                 )
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_31 FALSE"
                                    (rule "inEqSimp_strengthen1" (formula "54") (ifseqformula "62"))
                                    (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_contradEq7" (formula "62") (ifseqformula "54"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                    (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0"))
                                    (rule "leq_literals" (formula "62") (term "0"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "false_right" (formula "62"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "82") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "82") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "82") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "40"))
                                       (rule "eqSymm" (formula "82"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "80"))
                                       (rule "false_right" (formula "80"))
                                       (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEq" (formula "67") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "78") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "79"))
                                       (rule "false_right" (formula "79"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "73") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "81") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "53") (inst "i=i") (inst "r=r"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "replaceKnownSelect_taclet42_0" (formula "53") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "53") (term "0,1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "1,1,0,0,0,1,0") (ifseqformula "40"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,1,0,0,0,1,0") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "13"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "53"))
                           (rule "exLeft" (formula "53") (inst "sk=i_30"))
                           (rule "andLeft" (formula "53"))
                           (rule "andLeft" (formula "53"))
                           (rule "inEqSimp_ltToLeq" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "53"))
                           (rule "disjointDefinition" (formula "57"))
                           (rule "castedGetAny" (formula "55") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                           (rule "polySimp_elimOne" (formula "54") (term "0"))
                           (rule "pullOutSelect" (formula "56") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_28"))
                           (rule "applyEq" (formula "55") (term "1") (ifseqformula "56"))
                           (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "70")))
                           (rule "replaceKnownSelect_taclet36_0" (formula "56") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "56") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0,0") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,0,1,0,0") (ifseqformula "13"))
                           (rule "replace_known_left" (formula "56") (term "1,0,1,0,0") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "71")) (ifInst ""  (formula "72")))
                           (rule "elementOfUnion" (formula "56") (term "0,0"))
                           (rule "elementOfSingleton" (formula "56") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "elementOfSingleton" (formula "56") (term "0,0"))
                           (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "70")))
                           (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "56"))
                           (rule "applyEqReverse" (formula "57") (term "1,0,0,0,0") (ifseqformula "56"))
                           (rule "hideAuxiliaryEq" (formula "56"))
                           (rule "pullOutSelect" (formula "55") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_17"))
                           (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "55"))
                           (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "replaceKnownSelect_taclet14_0" (formula "55") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "55") (term "2,0"))
                           (rule "elementOfUnion" (formula "55") (term "0,0"))
                           (rule "elementOfSingleton" (formula "55") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "elementOfSingleton" (formula "55") (term "0,0"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "55"))
                           (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "55"))
                           (rule "hideAuxiliaryEq" (formula "55"))
                           (rule "lenOfSeqConcat" (formula "54") (term "0"))
                           (builtin "One Step Simplification" (formula "54"))
                           (rule "polySimp_addComm0" (formula "54") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                           (rule "mul_literals" (formula "54") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "54") (term "0"))
                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                           (rule "add_literals" (formula "54") (term "0,0,0"))
                           (rule "add_zero_left" (formula "54") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "54"))
                           (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                           (rule "polySimp_elimOne" (formula "54") (term "0"))
                           (rule "getOfSeqConcat" (formula "55") (term "0"))
                           (rule "polySimp_elimSub" (formula "55") (term "1,2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                           (rule "getOfSeqSingleton" (formula "55") (term "2,0"))
                           (rule "castDel" (formula "55") (term "1,2,0"))
                           (rule "polySimp_sepNegMonomial" (formula "55") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "55") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "56") (term "0"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0"))
                           (builtin "One Step Simplification" (formula "56"))
                           (rule "nnf_notAnd" (formula "56") (term "0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "0,1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "56") (term "0,0,1,1,0,0,0"))
                           (rule "commute_or_2" (formula "30") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "35") (inst "iv=iv"))
                           (rule "andLeft" (formula "35"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "35") (term "1"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_addComm0" (formula "35") (term "1"))
                           (rule "applyEq" (formula "36") (term "0,0,1,0") (ifseqformula "37"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                           (rule "lenOfSeqConcat" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "polySimp_homoEq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "35") (term "0"))
                           (rule "add_literals" (formula "35") (term "1,0"))
                           (rule "times_zero_1" (formula "35") (term "0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commuteIntersection" (formula "47") (term "0"))
                           (rule "commuteIntersection" (formula "48") (term "0"))
                           (rule "commuteIntersection" (formula "49") (term "0"))
                           (rule "ifthenelse_split" (formula "29") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_27 TRUE"
                              (rule "applyEq" (formula "56") (term "0,0,2,0") (ifseqformula "29"))
                              (rule "eqSymm" (formula "56") (term "0,2,0"))
                              (rule "applyEq" (formula "55") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_commuteGeq" (formula "55"))
                              (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "eqSymm" (formula "30"))
                              (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "56") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "56") (term "0,0,0"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "55") (term "1") (ifseqformula "29"))
                              (rule "ifEqualsInteger" (formula "55"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "applyEq" (formula "56") (term "1,0,0,0,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "30") (term "1,0,0,0,0,0") (ifseqformula "29"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                              (rule "times_zero_1" (formula "53") (term "0,0"))
                              (rule "add_zero_left" (formula "53") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "55") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "55") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,1"))
                              (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "55") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,1"))
                              (rule "commuteUnion" (formula "33") (term "1"))
                              (rule "commuteIntersection" (formula "57") (term "0"))
                              (rule "commute_and_2" (formula "30") (term "1,1,0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "commute_or_2" (formula "56") (term "0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "ifthenelse_split" (formula "32") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "32") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "32"))
                                 (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "32"))
                                 (rule "cnf_rightDist" (formula "55"))
                                 (rule "andLeft" (formula "55"))
                                 (rule "commute_or" (formula "55"))
                                 (rule "commute_or" (formula "57") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "57") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "commute_or_2" (formula "56"))
                                 (rule "shift_paren_or" (formula "57"))
                                 (rule "commute_or" (formula "56") (term "0"))
                                 (rule "inEqSimp_or_weaken0" (formula "56") (term "0"))
                                 (rule "replace_known_left" (formula "56") (term "1,0") (ifseqformula "54"))
                                 (rule "polySimp_addAssoc" (formula "56") (term "1,0,0"))
                                 (rule "add_literals" (formula "56") (term "0,1,0,0"))
                                 (rule "add_zero_left" (formula "56") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "56"))
                                 (rule "true_left" (formula "56"))
                                 (rule "commute_or" (formula "56") (term "0"))
                                 (rule "cnf_rightDist" (formula "55"))
                                 (rule "andLeft" (formula "55"))
                                 (rule "inEqSimp_or_tautInEq2" (formula "55"))
                                 (rule "inEqSimp_homoInEq1" (formula "55") (term "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "55") (term "0,1"))
                                 (rule "add_literals" (formula "55") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "55") (term "0,1"))
                                 (rule "leq_literals" (formula "55") (term "1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "true_left" (formula "55"))
                                 (rule "commute_or" (formula "55"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or" (formula "30") (term "0"))
                                 (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "true_left" (formula "51"))
                                 (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                 (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                 (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                 (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "castDel" (formula "57") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "57"))
                                 (rule "commute_or" (formula "57") (term "0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "58") (term "0"))
                                 (rule "distr_forallAnd" (formula "58"))
                                 (rule "andLeft" (formula "58"))
                                 (rule "shift_paren_or" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "59") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "59") (term "0"))
                                 (rule "distr_forallAnd" (formula "59"))
                                 (rule "andLeft" (formula "59"))
                                 (rule "commute_or_2" (formula "59") (term "0"))
                                 (rule "shift_paren_or" (formula "60") (term "0"))
                                 (rule "commute_or" (formula "60") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "86") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "85"))
                                    (rule "applyEqRigid" (formula "85") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "85") (term "0") (ifseqformula "42"))
                                    (rule "eqSymm" (formula "85"))
                                    (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "66"))
                                    (rule "false_right" (formula "66"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "76") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "84") (ifseqformula "1"))
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEqReverse" (formula "47") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "48") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "46") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "cnf_rightDist" (formula "53"))
                                 (rule "andLeft" (formula "53"))
                                 (rule "commute_or" (formula "53"))
                                 (rule "commute_or" (formula "55") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "55") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "54"))
                                 (rule "andLeft" (formula "54"))
                                 (rule "commute_or_2" (formula "54"))
                                 (rule "shift_paren_or" (formula "55"))
                                 (rule "commute_or" (formula "54") (term "0"))
                                 (rule "inEqSimp_or_weaken0" (formula "54") (term "0"))
                                 (rule "replace_known_left" (formula "54") (term "1,0") (ifseqformula "52"))
                                 (rule "polySimp_addAssoc" (formula "54") (term "1,0,0"))
                                 (rule "add_literals" (formula "54") (term "0,1,0,0"))
                                 (rule "add_zero_left" (formula "54") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "true_left" (formula "54"))
                                 (rule "commute_or" (formula "54") (term "0"))
                                 (rule "cnf_rightDist" (formula "53"))
                                 (rule "andLeft" (formula "53"))
                                 (rule "inEqSimp_or_tautInEq2" (formula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "53") (term "0,1"))
                                 (rule "add_literals" (formula "53") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "53") (term "0,1"))
                                 (rule "leq_literals" (formula "53") (term "1"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "commute_or" (formula "53"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "commute_or" (formula "30") (term "0"))
                                 (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                 (rule "arrayLengthIsAnInt" (formula "49") (term "0"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "true_left" (formula "49"))
                                 (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                                 (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "true_left" (formula "48"))
                                 (rule "cnf_rightDist" (formula "55") (term "0"))
                                 (rule "distr_forallAnd" (formula "55"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "castDel" (formula "55") (term "0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "commute_or" (formula "55") (term "0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "56") (term "0"))
                                 (rule "distr_forallAnd" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "shift_paren_or" (formula "57") (term "0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "30") (term "0"))
                                 (rule "distr_forallAnd" (formula "30"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "commute_or_2" (formula "30") (term "0"))
                                 (rule "shift_paren_or" (formula "31") (term "0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "57") (term "0"))
                                 (rule "distr_forallAnd" (formula "57"))
                                 (rule "andLeft" (formula "57"))
                                 (rule "commute_or_2" (formula "57") (term "0"))
                                 (rule "shift_paren_or" (formula "58") (term "0"))
                                 (rule "commute_or" (formula "58") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "84") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "84") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "84") (term "0") (ifseqformula "40"))
                                    (rule "eqSymm" (formula "84"))
                                    (rule "applyEq" (formula "81") (term "0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "70") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "82") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "82"))
                                    (rule "false_right" (formula "82"))
                                    (rule "applyEq" (formula "81") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "76") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "83") (ifseqformula "1"))
                                 )
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_27 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "60"))
                              (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "28"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                              (rule "add_literals" (formula "60") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "60") (term "1,0,0"))
                              (rule "add_zero_right" (formula "60") (term "0,0"))
                              (rule "leq_literals" (formula "60") (term "0"))
                              (builtin "One Step Simplification" (formula "60"))
                              (rule "false_right" (formula "60"))
                              (rule "commuteUnion" (formula "33") (term "1"))
                              (rule "commuteIntersection" (formula "57") (term "0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "56") (term "0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "commute_and_2" (formula "30") (term "1,1,0"))
                              (rule "commute_or" (formula "56") (term "0,0,0"))
                              (rule "commute_or_2" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "cnf_rightDist" (formula "56") (term "0"))
                              (rule "distr_forallAnd" (formula "56"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "castDel" (formula "56") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "56") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "56") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "commute_or" (formula "56") (term "0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "57") (term "0"))
                              (rule "distr_forallAnd" (formula "57"))
                              (rule "andLeft" (formula "57"))
                              (rule "shift_paren_or" (formula "58") (term "0"))
                              (rule "commute_or" (formula "58") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "58") (term "0"))
                              (rule "distr_forallAnd" (formula "58"))
                              (rule "andLeft" (formula "58"))
                              (rule "shift_paren_or" (formula "59") (term "0"))
                              (rule "commute_or" (formula "59") (term "0,0"))
                              (rule "ifthenelse_split" (formula "34") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> TRUE"
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "52") (term "1,0") (ifseqformula "35"))
                                 (rule "hideAuxiliaryEq" (formula "35"))
                                 (rule "elementOfSubsetImpliesElementOfSuperset" (formula "34") (ifseqformula "17"))
                                 (rule "elementOfUnion" (formula "34"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "16")))
                                 (rule "true_left" (formula "34"))
                                 (rule "cnf_rightDist" (formula "58") (term "0"))
                                 (rule "distr_forallAnd" (formula "58"))
                                 (rule "andLeft" (formula "58"))
                                 (rule "commute_or_2" (formula "58") (term "0"))
                                 (rule "shift_paren_or" (formula "59") (term "0"))
                                 (rule "commute_or" (formula "59") (term "0,0"))
                                 (rule "arrayLengthIsAnInt" (formula "53") (term "0"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "arrayLengthNotNegative" (formula "53") (term "0"))
                                 (rule "applyEq" (formula "53") (term "0") (ifseqformula "54"))
                                 (rule "arrayLengthNotNegative" (formula "52") (term "0"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "arrayLengthIsAnInt" (formula "52") (term "0"))
                                 (builtin "One Step Simplification" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "ifthenelse_split" (formula "57") (term "2,0"))
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_30 TRUE"
                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "57"))
                                    (rule "inEqSimp_homoInEq1" (formula "56"))
                                    (rule "polySimp_pullOutFactor1" (formula "56") (term "0"))
                                    (rule "add_literals" (formula "56") (term "1,0"))
                                    (rule "times_zero_1" (formula "56") (term "0"))
                                    (rule "leq_literals" (formula "56"))
                                    (rule "true_left" (formula "56"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "56"))
                                    (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "56"))
                                    (rule "inEqSimp_homoInEq1" (formula "57") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,0"))
                                    (rule "add_literals" (formula "57") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "57") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "57") (term "0,0,0"))
                                    (rule "leq_literals" (formula "57") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "eqSymm" (formula "57"))
                                    (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "57"))
                                    (rule "applyEq" (formula "61") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "60") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "57"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "applyEq" (formula "84") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "84") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "84") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEqRigid" (formula "82") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "82"))
                                       (rule "false_right" (formula "82"))
                                       (rule "applyEq" (formula "80") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "69") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "75") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "83") (ifseqformula "1"))
                                    )
                                 )
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_30 FALSE"
                                    (rule "inEqSimp_strengthen1" (formula "56") (ifseqformula "64"))
                                    (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "56"))
                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                    (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "64") (term "0,0"))
                                    (rule "leq_literals" (formula "64") (term "0"))
                                    (builtin "One Step Simplification" (formula "64"))
                                    (rule "false_right" (formula "64"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "applyEq" (formula "84") (term "1,1") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "84") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "84") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "84"))
                                       (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "69") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "80") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "81") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "81"))
                                       (rule "false_right" (formula "81"))
                                       (rule "applyEqRigid" (formula "81") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "81"))
                                       (rule "false_right" (formula "81"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "75") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "83") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep@anon_heap_registerSender<<anonHeapFunction>> FALSE"
                                 (rule "applyEqReverse" (formula "50") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "49") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "cnf_rightDist" (formula "56") (term "0"))
                                 (rule "distr_forallAnd" (formula "56"))
                                 (rule "andLeft" (formula "56"))
                                 (rule "commute_or_2" (formula "56") (term "0"))
                                 (rule "shift_paren_or" (formula "57") (term "0"))
                                 (rule "commute_or" (formula "57") (term "0,0"))
                                 (rule "arrayLengthIsAnInt" (formula "51") (term "0"))
                                 (builtin "One Step Simplification" (formula "51"))
                                 (rule "true_left" (formula "51"))
                                 (rule "arrayLengthNotNegative" (formula "51") (term "0"))
                                 (rule "applyEq" (formula "51") (term "0") (ifseqformula "52"))
                                 (rule "arrayLengthIsAnInt" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "arrayLengthNotNegative" (formula "50") (term "0"))
                                 (rule "applyEq" (formula "50") (term "0") (ifseqformula "51"))
                                 (rule "ifthenelse_split" (formula "55") (term "2,0"))
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_30 TRUE"
                                    (rule "applyEq" (formula "54") (term "0") (ifseqformula "55"))
                                    (rule "inEqSimp_homoInEq1" (formula "54"))
                                    (rule "polySimp_pullOutFactor1" (formula "54") (term "0"))
                                    (rule "add_literals" (formula "54") (term "1,0"))
                                    (rule "times_zero_1" (formula "54") (term "0"))
                                    (rule "leq_literals" (formula "54"))
                                    (rule "true_left" (formula "54"))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "54"))
                                    (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "54"))
                                    (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0"))
                                    (rule "leq_literals" (formula "55") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "eqSymm" (formula "55"))
                                    (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "59") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "applyEq" (formula "29") (term "1") (ifseqformula "55"))
                                    (rule "applyEq" (formula "58") (term "1,0,1,0") (ifseqformula "55"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEqRigid" (formula "83") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "83") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "0") (ifseqformula "40"))
                                       (rule "applyEqRigid" (formula "82") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "82"))
                                       (rule "false_right" (formula "82"))
                                       (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEq" (formula "80") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "80"))
                                       (rule "false_right" (formula "80"))
                                       (rule "applyEq" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "79") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "68") (term "0") (ifseqformula "2"))
                                       (rule "disjointAllFields" (formula "68") (ifseqformula "34"))
                                       (rule "false_right" (formula "68"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "73") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                                 (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_30 FALSE"
                                    (rule "inEqSimp_strengthen1" (formula "54") (ifseqformula "62"))
                                    (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_contradEq7" (formula "62") (ifseqformula "54"))
                                    (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0"))
                                    (rule "add_literals" (formula "62") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "62") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "62") (term "0,0"))
                                    (rule "leq_literals" (formula "62") (term "0"))
                                    (builtin "One Step Simplification" (formula "62"))
                                    (rule "false_right" (formula "62"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "83"))
                                       (rule "applyEqRigid" (formula "83") (term "2,1") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "83") (term "1") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEqRigid" (formula "82") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "82") (term "0") (ifseqformula "40"))
                                       (rule "applyEq" (formula "79") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "68") (term "1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "81") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "81"))
                                       (rule "false_right" (formula "81"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "74") (ifseqformula "3"))
                                    )
                                    (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                       (rule "close" (formula "82") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                        (rule "applyEqReverse" (formula "32") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "60") (term "2") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "38") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "34") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "36") (term "2,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "applyEqReverse" (formula "23") (term "1,1,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "31") (term "2,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "32") (term "0,1") (ifseqformula "16"))
                        (rule "hideAuxiliaryEq" (formula "16"))
                        (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "54"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "applyEqReverse" (formula "29") (term "1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "45") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "30"))
                        (rule "hideAuxiliaryEq" (formula "30"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "49") (inst "i=i") (inst "r=r"))
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "replaceKnownSelect_taclet42_0" (formula "49") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "49") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet45_0" (formula "49") (term "0,1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,1,0,0,0,1,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,1,1,0,0,0,1,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "13"))
                           (rule "andLeft" (formula "49"))
                           (rule "andLeft" (formula "49"))
                           (rule "exLeft" (formula "49") (inst "sk=i_29"))
                           (rule "andLeft" (formula "49"))
                           (rule "andLeft" (formula "49"))
                           (rule "inEqSimp_ltToLeq" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "49"))
                           (rule "disjointDefinition" (formula "53"))
                           (rule "castedGetAny" (formula "51") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "pullOutSelect" (formula "52") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_27"))
                           (rule "applyEq" (formula "51") (term "1") (ifseqformula "52"))
                           (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "65")))
                           (rule "replaceKnownSelect_taclet36_0" (formula "52") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "52") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,1,0,0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "52") (term "1,0,0,1,0,0") (ifseqformula "67"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "66")) (ifInst ""  (formula "24")))
                           (rule "elementOfUnion" (formula "52") (term "0,0"))
                           (rule "elementOfSingleton" (formula "52") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "elementOfSingleton" (formula "52") (term "0,0"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "65")))
                           (rule "applyEqReverse" (formula "53") (term "1,0,0,0,0") (ifseqformula "52"))
                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "52"))
                           (rule "hideAuxiliaryEq" (formula "52"))
                           (rule "pullOutSelect" (formula "51") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_16"))
                           (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "51"))
                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "replaceKnownSelect_taclet14_0" (formula "51") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "51") (term "2,0"))
                           (rule "elementOfUnion" (formula "51") (term "0,0"))
                           (rule "elementOfSingleton" (formula "51") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "elementOfSingleton" (formula "51") (term "0,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "51"))
                           (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                           (rule "hideAuxiliaryEq" (formula "51"))
                           (rule "lenOfSeqConcat" (formula "50") (term "0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "polySimp_addComm0" (formula "50") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0"))
                           (rule "add_zero_left" (formula "50") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "getOfSeqConcat" (formula "51") (term "0"))
                           (rule "polySimp_elimSub" (formula "51") (term "1,2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                           (rule "getOfSeqSingleton" (formula "51") (term "2,0"))
                           (rule "castDel" (formula "51") (term "1,2,0"))
                           (rule "polySimp_sepNegMonomial" (formula "51") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "52") (term "0"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "0,1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "0,0,1,1,0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                           (rule "andLeft" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "31") (term "1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_addComm0" (formula "31") (term "1"))
                           (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "32") (term "0,1,0,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_homoEq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,0"))
                           (rule "times_zero_1" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_split" (formula "27") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_27 TRUE"
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,0"))
                              (rule "times_zero_1" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "27") (term "0,0,0"))
                              (rule "leq_literals" (formula "27") (term "0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "eqSymm" (formula "27"))
                              (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                              (rule "applyEq" (formula "51") (term "0,0,2,0") (ifseqformula "26"))
                              (rule "eqSymm" (formula "51") (term "0,2,0"))
                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "26"))
                              (rule "inEqSimp_commuteGeq" (formula "50"))
                              (rule "applyEq" (formula "51") (term "1") (ifseqformula "27"))
                              (rule "ifEqualsInteger" (formula "51"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                              (rule "times_zero_1" (formula "49") (term "0,0"))
                              (rule "add_zero_left" (formula "49") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,1"))
                              (rule "commuteIntersection" (formula "44") (term "0"))
                              (rule "commuteIntersection" (formula "45") (term "0"))
                              (rule "commuteIntersection" (formula "43") (term "0"))
                              (rule "commuteIntersection" (formula "53") (term "0"))
                              (rule "commute_and_2" (formula "28") (term "1,1,0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "commute_or" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "52"))
                              (rule "andLeft" (formula "52"))
                              (rule "commute_or_2" (formula "52"))
                              (rule "shift_paren_or" (formula "53"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "52") (term "0"))
                              (rule "replace_known_left" (formula "52") (term "1,0") (ifseqformula "50"))
                              (rule "polySimp_addAssoc" (formula "52") (term "1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "52") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "inEqSimp_or_tautInEq2" (formula "51"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1"))
                              (rule "add_literals" (formula "51") (term "1,0,1"))
                              (rule "times_zero_1" (formula "51") (term "0,1"))
                              (rule "leq_literals" (formula "51") (term "1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "arrayLengthIsAnInt" (formula "47") (term "0"))
                              (builtin "One Step Simplification" (formula "47"))
                              (rule "true_left" (formula "47"))
                              (rule "arrayLengthNotNegative" (formula "47") (term "0"))
                              (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                              (rule "commute_or" (formula "53") (term "0,0,0"))
                              (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                              (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "true_left" (formula "46"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "commute_or_2" (formula "53") (term "0,0"))
                              (rule "commute_and_2" (formula "53") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "castDel" (formula "54") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "54") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "54") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "commute_or" (formula "54") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or_2" (formula "55") (term "0"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "80"))
                                 (rule "applyEq" (formula "80") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "80") (term "1,0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "77") (term "1") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "79") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "79"))
                                 (rule "false_right" (formula "79"))
                                 (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "close" (formula "71") (ifseqformula "3"))
                              )
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                 (rule "close" (formula "79") (ifseqformula "1"))
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_27 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "56"))
                              (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                              (rule "add_literals" (formula "56") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "56") (term "1,0,0"))
                              (rule "add_zero_right" (formula "56") (term "0,0"))
                              (rule "leq_literals" (formula "56") (term "0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "false_right" (formula "56"))
                              (rule "commuteIntersection" (formula "44") (term "0"))
                              (rule "commuteIntersection" (formula "45") (term "0"))
                              (rule "commuteIntersection" (formula "43") (term "0"))
                              (rule "commuteIntersection" (formula "53") (term "0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "commute_or" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "commute_or_2" (formula "28") (term "0,0"))
                              (rule "commute_and_2" (formula "28") (term "1,1,0"))
                              (rule "commute_or" (formula "52") (term "0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "52") (term "0"))
                              (rule "distr_forallAnd" (formula "52"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "castDel" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "52") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "52") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "53") (term "0"))
                              (rule "distr_forallAnd" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "shift_paren_or" (formula "54") (term "0"))
                              (rule "commute_or" (formula "54") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "arrayLengthIsAnInt" (formula "49") (term "0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "true_left" (formula "49"))
                              (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                              (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                              (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                              (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                              (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "commute_or_2" (formula "54") (term "0"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "ifthenelse_split" (formula "53") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_29 TRUE"
                                 (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "54") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0"))
                                 (rule "add_literals" (formula "54") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "54") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "54") (term "0,0,0"))
                                 (rule "leq_literals" (formula "54") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "eqSymm" (formula "54"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "52"))
                                 (rule "polySimp_pullOutFactor1" (formula "52") (term "0"))
                                 (rule "add_literals" (formula "52") (term "1,0"))
                                 (rule "times_zero_1" (formula "52") (term "0"))
                                 (rule "leq_literals" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "55") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "53"))
                                 (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEqRigid" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "78") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "78") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "78") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "77") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "77"))
                                    (rule "false_right" (formula "77"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "70") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "78") (ifseqformula "1"))
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_29 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "52") (ifseqformula "60"))
                                 (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "52"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                 (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "60") (term "0,0"))
                                 (rule "leq_literals" (formula "60") (term "0"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "false_right" (formula "60"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "applyEqRigid" (formula "78") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "78"))
                                    (rule "false_right" (formula "78"))
                                    (rule "applyEq" (formula "76") (term "0") (ifseqformula "2"))
                                    (rule "disjointAllFields" (formula "76") (ifseqformula "32"))
                                    (rule "false_right" (formula "76"))
                                    (rule "applyEqRigid" (formula "76") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "76"))
                                    (rule "false_right" (formula "76"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "71") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "78") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "49") (inst "i=i") (inst "r=r"))
                           (builtin "One Step Simplification" (formula "49"))
                           (rule "replaceKnownSelect_taclet42_0" (formula "49") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet43_0" (formula "49") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet45_0" (formula "49") (term "0,1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,1,0,0,0,1,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,1,1,0,0,0,1,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "13"))
                           (rule "andLeft" (formula "49"))
                           (rule "andLeft" (formula "49"))
                           (rule "exLeft" (formula "49") (inst "sk=i_28"))
                           (rule "andLeft" (formula "49"))
                           (rule "andLeft" (formula "49"))
                           (rule "inEqSimp_ltToLeq" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "49"))
                           (rule "disjointDefinition" (formula "53"))
                           (rule "castedGetAny" (formula "51") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "pullOutSelect" (formula "52") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_26"))
                           (rule "applyEq" (formula "51") (term "1") (ifseqformula "52"))
                           (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "66")))
                           (rule "replaceKnownSelect_taclet36_0" (formula "52") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet37_0" (formula "52") (term "2,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,1,0,0") (ifseqformula "22"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "52") (term "0,0,1,0,0") (ifseqformula "13"))
                           (rule "replace_known_left" (formula "52") (term "1,0,1,0,0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                           (rule "elementOfUnion" (formula "52") (term "0,0"))
                           (rule "elementOfSingleton" (formula "52") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "elementOfSingleton" (formula "52") (term "0,0"))
                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "66")))
                           (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "52"))
                           (rule "applyEqReverse" (formula "53") (term "1,0,0,0,0") (ifseqformula "52"))
                           (rule "hideAuxiliaryEq" (formula "52"))
                           (rule "pullOutSelect" (formula "51") (term "0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_SMT_registered_receiver_ids_15"))
                           (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "51"))
                           (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "replaceKnownSelect_taclet14_0" (formula "51") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "51") (term "2,0"))
                           (rule "elementOfUnion" (formula "51") (term "0,0"))
                           (rule "elementOfSingleton" (formula "51") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "elementOfSingleton" (formula "51") (term "0,0"))
                           (builtin "One Step Simplification" (formula "51"))
                           (rule "applyEqReverse" (formula "50") (term "0,0") (ifseqformula "51"))
                           (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                           (rule "hideAuxiliaryEq" (formula "51"))
                           (rule "lenOfSeqConcat" (formula "50") (term "0"))
                           (builtin "One Step Simplification" (formula "50"))
                           (rule "polySimp_addComm0" (formula "50") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "50"))
                           (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                           (rule "mul_literals" (formula "50") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0"))
                           (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0"))
                           (rule "add_zero_left" (formula "50") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "polySimp_elimOne" (formula "50") (term "0"))
                           (rule "getOfSeqConcat" (formula "51") (term "0"))
                           (rule "polySimp_elimSub" (formula "51") (term "1,2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                           (rule "getOfSeqSingleton" (formula "51") (term "2,0"))
                           (rule "castDel" (formula "51") (term "1,2,0"))
                           (rule "polySimp_sepNegMonomial" (formula "51") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "51") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "51") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "52") (term "0"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0"))
                           (builtin "One Step Simplification" (formula "52"))
                           (rule "nnf_notAnd" (formula "52") (term "0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "0,1,1,0,0,0"))
                           (rule "nnf_notOr" (formula "52") (term "0,0,1,1,0,0,0"))
                           (rule "commute_or_2" (formula "28") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                           (rule "andLeft" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                           (rule "lenOfSeqConcat" (formula "31") (term "1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_addComm0" (formula "31") (term "1"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "33"))
                           (rule "lenOfSeqConcat" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_homoEq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,0"))
                           (rule "times_zero_1" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "applyEq" (formula "31") (term "0,0,1,0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_split" (formula "27") (term "2,0"))
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_27 TRUE"
                              (rule "applyEq" (formula "52") (term "0,0,2,0") (ifseqformula "27"))
                              (rule "eqSymm" (formula "52") (term "0,2,0"))
                              (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "eqSymm" (formula "28"))
                              (rule "applyEq" (formula "51") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_commuteGeq" (formula "51"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "26"))
                              (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                              (rule "add_literals" (formula "26") (term "1,0"))
                              (rule "times_zero_1" (formula "26") (term "0"))
                              (rule "leq_literals" (formula "26"))
                              (rule "true_left" (formula "26"))
                              (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "26"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                              (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "28") (term "1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "51") (term "1") (ifseqformula "27"))
                              (rule "ifEqualsInteger" (formula "51"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "50"))
                              (rule "mul_literals" (formula "49") (term "0,0"))
                              (rule "add_zero_left" (formula "49") (term "0"))
                              (rule "inEqSimp_notLeq" (formula "51") (term "0,1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,1"))
                              (rule "mul_literals" (formula "51") (term "0,1,0,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,1"))
                              (rule "add_literals" (formula "51") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "51") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,0,1"))
                              (rule "commuteIntersection" (formula "44") (term "0"))
                              (rule "commuteIntersection" (formula "45") (term "0"))
                              (rule "commuteIntersection" (formula "43") (term "0"))
                              (rule "commuteIntersection" (formula "53") (term "0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "commute_and_2" (formula "28") (term "1,1,0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "commute_or" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "28") (term "0,0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "cnf_rightDist" (formula "52"))
                              (rule "andLeft" (formula "52"))
                              (rule "commute_or_2" (formula "52"))
                              (rule "shift_paren_or" (formula "53"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "inEqSimp_or_weaken0" (formula "52") (term "0"))
                              (rule "replace_known_left" (formula "52") (term "1,0") (ifseqformula "50"))
                              (rule "polySimp_addAssoc" (formula "52") (term "1,0,0"))
                              (rule "add_literals" (formula "52") (term "0,1,0,0"))
                              (rule "add_zero_left" (formula "52") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "51"))
                              (rule "andLeft" (formula "51"))
                              (rule "inEqSimp_or_tautInEq2" (formula "51"))
                              (rule "inEqSimp_homoInEq1" (formula "51") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "51") (term "0,1"))
                              (rule "add_literals" (formula "51") (term "1,0,1"))
                              (rule "times_zero_1" (formula "51") (term "0,1"))
                              (rule "leq_literals" (formula "51") (term "1"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "commute_or" (formula "51"))
                              (rule "commute_or" (formula "53") (term "0,0,0"))
                              (rule "commute_or_2" (formula "53") (term "0,0"))
                              (rule "arrayLengthNotNegative" (formula "47") (term "0"))
                              (rule "applyEq" (formula "47") (term "0") (ifseqformula "48"))
                              (rule "arrayLengthIsAnInt" (formula "47") (term "0"))
                              (builtin "One Step Simplification" (formula "47"))
                              (rule "true_left" (formula "47"))
                              (rule "arrayLengthNotNegative" (formula "46") (term "0"))
                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "47"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "28") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "arrayLengthIsAnInt" (formula "46") (term "0"))
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "true_left" (formula "46"))
                              (rule "commute_and_2" (formula "53") (term "1,1,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "castDel" (formula "54") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "54") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "54") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "commute_or" (formula "54") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "cnf_rightDist" (formula "55") (term "0"))
                              (rule "distr_forallAnd" (formula "55"))
                              (rule "andLeft" (formula "55"))
                              (rule "commute_or_2" (formula "55") (term "0"))
                              (rule "shift_paren_or" (formula "56") (term "0"))
                              (rule "commute_or" (formula "56") (term "0,0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "81"))
                                 (rule "applyEq" (formula "81") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "81") (term "0") (ifseqformula "38"))
                                 (rule "eqSymm" (formula "81"))
                                 (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "62"))
                                 (rule "false_right" (formula "62"))
                                 (rule "applyEq" (formula "78") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "78"))
                                 (rule "false_right" (formula "78"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "close" (formula "72") (ifseqformula "3"))
                              )
                              (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                 (rule "close" (formula "80") (ifseqformula "1"))
                              )
                           )
                           (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_27 FALSE"
                              (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "56"))
                              (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradEq7" (formula "56") (ifseqformula "26"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "56") (term "0,0"))
                              (rule "add_literals" (formula "56") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "56") (term "1,0,0"))
                              (rule "add_zero_right" (formula "56") (term "0,0"))
                              (rule "leq_literals" (formula "56") (term "0"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "false_right" (formula "56"))
                              (rule "commuteIntersection" (formula "44") (term "0"))
                              (rule "commuteIntersection" (formula "45") (term "0"))
                              (rule "commuteIntersection" (formula "43") (term "0"))
                              (rule "commuteIntersection" (formula "53") (term "0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "commute_or" (formula "28") (term "0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "commute_or_2" (formula "28") (term "0,0"))
                              (rule "commute_and_2" (formula "28") (term "1,1,0"))
                              (rule "commute_or" (formula "52") (term "0,0,0"))
                              (rule "commute_or_2" (formula "52") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "castDel" (formula "28") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "commute_or" (formula "28") (term "0"))
                              (rule "cnf_rightDist" (formula "52") (term "0"))
                              (rule "distr_forallAnd" (formula "52"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "castDel" (formula "52") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "52") (term "0,1,0,0,0"))
                              (rule "castDel" (formula "52") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "commute_or" (formula "52") (term "0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "53") (term "0"))
                              (rule "distr_forallAnd" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "shift_paren_or" (formula "54") (term "0"))
                              (rule "commute_or" (formula "54") (term "0,0"))
                              (rule "cnf_rightDist" (formula "28") (term "0"))
                              (rule "distr_forallAnd" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "commute_or_2" (formula "28") (term "0"))
                              (rule "shift_paren_or" (formula "29") (term "0"))
                              (rule "commute_or" (formula "29") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "cnf_rightDist" (formula "54") (term "0"))
                              (rule "distr_forallAnd" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "commute_or_2" (formula "54") (term "0"))
                              (rule "shift_paren_or" (formula "55") (term "0"))
                              (rule "commute_or" (formula "55") (term "0,0"))
                              (rule "arrayLengthIsAnInt" (formula "49") (term "0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "true_left" (formula "49"))
                              (rule "arrayLengthNotNegative" (formula "49") (term "0"))
                              (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                              (rule "arrayLengthNotNegative" (formula "48") (term "0"))
                              (rule "applyEq" (formula "48") (term "0") (ifseqformula "49"))
                              (rule "arrayLengthIsAnInt" (formula "48") (term "0"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "ifthenelse_split" (formula "53") (term "2,0"))
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_28 TRUE"
                                 (rule "applyEq" (formula "52") (term "0") (ifseqformula "53"))
                                 (rule "inEqSimp_homoInEq1" (formula "52"))
                                 (rule "polySimp_pullOutFactor1" (formula "52") (term "0"))
                                 (rule "add_literals" (formula "52") (term "1,0"))
                                 (rule "times_zero_1" (formula "52") (term "0"))
                                 (rule "leq_literals" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "52"))
                                 (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                 (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "53") (term "0,0,0"))
                                 (rule "leq_literals" (formula "53") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "eqSymm" (formula "53"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "52"))
                                 (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "55") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "57") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "27") (term "1") (ifseqformula "53"))
                                 (rule "applyEq" (formula "56") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "53"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEqRigid" (formula "80") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "80") (term "0") (ifseqformula "38"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEqRigid" (formula "77") (term "1") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "79") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "79"))
                                    (rule "false_right" (formula "79"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "71") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "79") (ifseqformula "1"))
                                 )
                              )
                              (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_28 FALSE"
                                 (rule "inEqSimp_strengthen1" (formula "52") (ifseqformula "60"))
                                 (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "53"))
                                 (rule "inEqSimp_contradEq7" (formula "60") (ifseqformula "52"))
                                 (rule "polySimp_mulComm0" (formula "60") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "60") (term "0,0"))
                                 (rule "add_literals" (formula "60") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "60") (term "1,0,0"))
                                 (rule "add_literals" (formula "60") (term "0,0"))
                                 (rule "leq_literals" (formula "60") (term "0"))
                                 (builtin "One Step Simplification" (formula "60"))
                                 (rule "false_right" (formula "60"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEqRigid" (formula "80") (term "2,1") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "80") (term "1") (ifseqformula "4"))
                                    (rule "applyEq" (formula "80") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "80") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "80") (term "0") (ifseqformula "38"))
                                    (rule "eqSymm" (formula "80"))
                                    (rule "applyEqRigid" (formula "79") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "79"))
                                    (rule "false_right" (formula "79"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "61"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "71") (ifseqformula "3"))
                                 )
                                 (branch "f_5 = server & !f_5 = <created> & o_5 = result_1 FALSE"
                                    (rule "close" (formula "79") (ifseqformula "1"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Exceptional Post (Server)"
         (builtin "One Step Simplification" (formula "41"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,1,0,1,0,1") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,1,0,1,0,1") (ifseqformula "11"))
         (rule "andLeft" (formula "34"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0,0") (ifseqformula "34"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0,0") (ifseqformula "11"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0,1,0") (ifseqformula "34"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,1,0,1,0") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,1,0,1,0") (ifseqformula "11"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "37"))
         (rule "notLeft" (formula "35"))
         (rule "andLeft" (formula "37"))
         (rule "notLeft" (formula "36"))
         (rule "notLeft" (formula "36"))
         (rule "orRight" (formula "40"))
         (rule "orRight" (formula "40"))
         (rule "eqSymm" (formula "38") (term "0,1,1,1"))
         (rule "eqSymm" (formula "38") (term "0,1,1"))
         (rule "eqSymm" (formula "38") (term "0,1"))
         (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "44"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "true_left" (formula "38"))
         (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "40"))
         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "39")) (ifInst ""  (formula "41")))
         (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "43"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "commute_or_2" (formula "35"))
         (rule "commute_or_2" (formula "38") (term "0"))
         (rule "commute_or_2" (formula "38"))
         (rule "commute_or_2" (formula "35") (term "0"))
         (rule "commute_or_2" (formula "35"))
         (rule "commute_or" (formula "38") (term "0,0"))
         (rule "commute_or_2" (formula "38") (term "0"))
         (rule "methodCallParamThrow" (formula "50") (term "1"))
         (rule "tryCatchThrow" (formula "50") (term "1"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "29") (inst "iv=iv"))
         (rule "andLeft" (formula "29"))
         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
         (rule "lenOfSeqConcat" (formula "29") (term "1"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "polySimp_addComm0" (formula "29") (term "1"))
         (rule "applyEq" (formula "30") (term "0,0,1,0") (ifseqformula "31"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "true_left" (formula "30"))
         (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "30"))
         (rule "lenOfSeqConcat" (formula "29") (term "0"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "polySimp_addComm0" (formula "29") (term "0"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "true_left" (formula "29"))
         (rule "ifElseUnfold" (formula "50") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_2"))
         (rule "equality_comparison_simple" (formula "50") (term "1"))
         (builtin "One Step Simplification" (formula "50"))
         (rule "replace_known_right" (formula "50") (term "0,0,1,0") (ifseqformula "43"))
         (builtin "One Step Simplification" (formula "50"))
         (rule "ifElseSplit" (formula "50"))
         (branch "if x_2 true"
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_2 false"
            (builtin "One Step Simplification" (formula "1"))
            (builtin "One Step Simplification" (formula "51"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "50"))
            (branch "if exc_2 instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
               (rule "instanceof_static_type" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "50") (term "1") (newnames "e_2"))
               (rule "reference_type_cast" (formula "50"))
               (branch "Normal Execution (exc_2 instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "assignment" (formula "50") (term "1"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "emptyModality" (formula "50") (term "1"))
                  (rule "andRight" (formula "50"))
                  (branch "Case 1"
                     (rule "andRight" (formula "50"))
                     (branch "Case 1"
                        (rule "impRight" (formula "50"))
                        (rule "andRight" (formula "51"))
                        (branch "Case 1"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "51"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "51"))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "51"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "51"))
                                 (branch "Case 1"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "51"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "51"))
                                       (branch "Case 1"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "51"))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "51"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "51"))
                                                (branch "Case 1"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "51"))
                                                   (branch "Case 1"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "51"))
                                                      (branch "Case 1"
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Case 2"
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "impRight" (formula "50"))
                        (rule "orRight" (formula "51"))
                        (rule "orRight" (formula "51"))
                        (rule "orRight" (formula "51"))
                        (rule "orRight" (formula "51"))
                        (rule "orRight" (formula "51"))
                        (rule "orRight" (formula "51"))
                        (rule "orRight" (formula "51"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                        (builtin "One Step Simplification" (formula "58"))
                        (builtin "One Step Simplification" (formula "57"))
                        (builtin "One Step Simplification" (formula "56"))
                        (builtin "One Step Simplification" (formula "55"))
                        (builtin "One Step Simplification" (formula "54"))
                        (builtin "One Step Simplification" (formula "53"))
                        (builtin "One Step Simplification" (formula "52"))
                        (builtin "One Step Simplification" (formula "51"))
                        (rule "true_left" (formula "1"))
                        (rule "replace_known_right" (formula "38") (term "1,0") (ifseqformula "50"))
                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "55")) (ifInst ""  (formula "54")) (ifInst ""  (formula "51")))
                        (rule "closeFalse" (formula "38"))
                     )
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "50"))
                     (rule "allRight" (formula "50") (inst "sk=f_4") (userinteraction))
                     (rule "allRight" (formula "50") (inst "sk=o_4") (userinteraction))
                     (rule "orRight" (formula "50"))
                     (rule "orRight" (formula "50"))
                     (rule "orRight" (formula "50"))
                     (rule "orRight" (formula "51"))
                     (rule "andRight" (formula "51"))
                     (branch "Case 1"
                        (rule "andRight" (formula "52"))
                        (branch "Case 1"
                           (rule "andRight" (formula "52"))
                           (branch "Case 1"
                              (rule "notRight" (formula "52"))
                              (rule "close" (formula "52") (ifseqformula "1"))
                           )
                           (branch "Case 2"
                              (rule "notRight" (formula "52"))
                              (rule "eqSymm" (formula "53"))
                              (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=f_4_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                              (rule "eqSymm" (formula "54"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "53"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0") (ifseqformula "18") (ifseqformula "53"))
                              (rule "elementOfIntersect" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "4")))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "3")))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "elementOfSubsetOfUnion2" (formula "41") (ifseqformula "17") (ifseqformula "53"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "elementOfIntersect" (formula "41"))
                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "42")))
                              (rule "false_right" (formula "41"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "27") (inst "i=i") (inst "r=r"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "replaceKnownSelect_taclet11_0" (formula "27") (term "0,1"))
                              (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,1,1,0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "24"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,0,0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,1,1,0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1,0,0,0,1,0") (ifseqformula "13"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "exLeft" (formula "27") (inst "sk=i_14"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "inEqSimp_ltToLeq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "27"))
                              (rule "disjointDefinition" (formula "31"))
                              (rule "castedGetAny" (formula "29") (term "0"))
                              (rule "lenOfSeqConcat" (formula "28") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "getOfSeqConcat" (formula "29") (term "0"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                              (rule "getOfSeqSingleton" (formula "29") (term "2,0"))
                              (rule "castDel" (formula "29") (term "1,2,0"))
                              (rule "polySimp_sepNegMonomial" (formula "29") (term "0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "30") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_12"))
                              (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                              (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "52")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "30") (term "0,0,1,0,0") (ifseqformula "53"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "54")))
                              (rule "applyEqReverse" (formula "31") (term "1,0,0,0,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "1,0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "1,1,0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "0,1,1,0,0,0"))
                              (rule "commute_and" (formula "1") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "commuteIntersection" (formula "31") (term "0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "commute_and_2" (formula "1") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "ifthenelse_split" (formula "16") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                 (rule "applyEqReverse" (formula "41") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "40") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "17"))
                                 (rule "hideAuxiliaryEq" (formula "17"))
                                 (rule "elementOfSubsetOfUnion2" (formula "47") (ifseqformula "17") (ifseqformula "59"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "elementOfIntersect" (formula "47"))
                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "48")))
                                 (rule "false_right" (formula "47"))
                                 (rule "commuteUnion" (formula "35") (term "1"))
                                 (rule "cut_direct" (formula "46") (term "1,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.smt.ConnectionError::instance(exc_2) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "cut_direct" (formula "15") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "cut_direct" (formula "43") (term "0,0,0"))
                                       (branch "CUT: exc_2.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "62") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "48") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "62") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: exc_2.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "63") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEqRigid" (formula "64") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "64") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "cut_direct" (formula "43") (term "0,0,0"))
                                       (branch "CUT: exc_2.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: exc_2.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "65") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.smt.ConnectionError::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "cut_direct" (formula "43") (term "0,0,0"))
                                    (branch "CUT: exc_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "42"))
                                                (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "65") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: exc_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "66") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                 (rule "applyEqReverse" (formula "35") (term "0,1") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "40") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "36") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "38") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "34") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "hideAuxiliaryEq" (formula "16"))
                                 (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "cut_direct" (formula "39") (term "0,0,0"))
                                 (branch "CUT: exc_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "cut_direct" (formula "42") (term "1,0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.smt.ConnectionError::instance(exc_2) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "51") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "58") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "56") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "57"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "56") (ifseqformula "32"))
                                                (rule "false_right" (formula "56"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "51") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "58") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "59") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "59") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "57") (ifseqformula "32"))
                                                (rule "false_right" (formula "57"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.smt.ConnectionError::instance(exc_2) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "58") (ifseqformula "32"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "58") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: exc_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "cut_direct" (formula "42") (term "1,0,0"))
                                    (branch "CUT: de.uni.trier.infsec.functionalities.smt.ConnectionError::instance(exc_2) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "59") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "59") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "59") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "54") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: de.uni.trier.infsec.functionalities.smt.ConnectionError::instance(exc_2) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "61") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "59") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "58") (ifseqformula "32"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "58") (ifseqformula "32"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "58") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "58") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "59") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "54") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_14 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEqRigid" (formula "59") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "54") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "53"))
                           (branch "Case 1"
                              (rule "notRight" (formula "53"))
                              (rule "close" (formula "52") (ifseqformula "1"))
                           )
                           (branch "Case 2"
                              (rule "notRight" (formula "53"))
                              (rule "eqSymm" (formula "54"))
                              (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=f_4_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                              (rule "eqSymm" (formula "55"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                              (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0") (ifseqformula "18") (ifseqformula "53"))
                              (rule "elementOfIntersect" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "4")))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "3")))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "elementOfSubsetOfUnion2" (formula "41") (ifseqformula "17") (ifseqformula "53"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "elementOfIntersect" (formula "41"))
                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "42")))
                              (rule "false_right" (formula "41"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "27") (inst "i=i") (inst "r=r"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "replaceKnownSelect_taclet11_0" (formula "27") (term "0,1"))
                              (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,1,1,0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "24"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,0,0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,1,1,0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1,0,0,0,1,0") (ifseqformula "13"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "exLeft" (formula "27") (inst "sk=i_15"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "inEqSimp_ltToLeq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "27"))
                              (rule "disjointDefinition" (formula "31"))
                              (rule "castedGetAny" (formula "29") (term "0"))
                              (rule "lenOfSeqConcat" (formula "28") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "getOfSeqConcat" (formula "29") (term "0"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                              (rule "getOfSeqSingleton" (formula "29") (term "2,0"))
                              (rule "castDel" (formula "29") (term "1,2,0"))
                              (rule "polySimp_sepNegMonomial" (formula "29") (term "0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "30") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_13"))
                              (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                              (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "52")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "30") (term "1,0,1,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "53")))
                              (rule "applyEqReverse" (formula "31") (term "1,0,0,0,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "1,0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "1,1,0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "0,1,1,0,0,0"))
                              (rule "commute_and" (formula "1") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "commuteIntersection" (formula "31") (term "0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "commute_and_2" (formula "1") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "ifthenelse_split" (formula "16") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                 (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "41") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "40") (term "2,0,0") (ifseqformula "17"))
                                 (rule "hideAuxiliaryEq" (formula "17"))
                                 (rule "elementOfSubsetOfUnion2" (formula "47") (ifseqformula "17") (ifseqformula "59"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "elementOfIntersect" (formula "47"))
                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "48")))
                                 (rule "false_right" (formula "47"))
                                 (rule "commuteUnion" (formula "35") (term "1"))
                                 (rule "cut_direct" (formula "46") (term "1"))
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "cut_direct" (formula "43") (term "0,0,0"))
                                    (branch "CUT: exc_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "48") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEqRigid" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: exc_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "65") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEqRigid" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "65") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "66") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "false_right" (formula "65"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "cut_direct" (formula "43") (term "0,0,0"))
                                    (branch "CUT: exc_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "66") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "applyEqRigid" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "false_right" (formula "65"))
                                                (rule "applyEqRigid" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: exc_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "false_right" (formula "65"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "false_right" (formula "65"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEqRigid" (formula "67") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEqRigid" (formula "52") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "66") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEqRigid" (formula "64") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "66") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                 (rule "applyEqReverse" (formula "40") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "38") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "34") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "36") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "16"))
                                 (rule "hideAuxiliaryEq" (formula "16"))
                                 (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "cut_direct" (formula "42") (term "1,0"))
                                 (branch "CUT: java.lang.Error::instance(exc_2) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "cut_direct" (formula "39") (term "0,0,0"))
                                    (branch "CUT: exc_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "60") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "60") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "56") (ifseqformula "32"))
                                                (rule "false_right" (formula "56"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "51") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "60") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "60") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: exc_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "58") (ifseqformula "32"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "58") (ifseqformula "32"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "57") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "59") (ifseqformula "32"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "59") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.Error::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "cut_direct" (formula "39") (term "0,0,0"))
                                    (branch "CUT: exc_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "58") (ifseqformula "32"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: exc_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "false_right" (formula "61"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "58") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "58") (ifseqformula "32"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "58") (ifseqformula "32"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "63") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "54") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "62") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_15 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "54") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "62") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "52"))
                        (branch "Case 1"
                           (rule "andRight" (formula "53"))
                           (branch "Case 1"
                              (rule "notRight" (formula "53"))
                              (rule "close" (formula "53") (ifseqformula "1"))
                           )
                           (branch "Case 2"
                              (rule "notRight" (formula "53"))
                              (rule "eqSymm" (formula "54"))
                              (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=f_4_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "13"))
                              (rule "eqSymm" (formula "55"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_5"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,1,0,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0") (ifseqformula "18") (ifseqformula "53"))
                              (rule "elementOfIntersect" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "4")))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "3")))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "elementOfSubsetOfUnion2" (formula "41") (ifseqformula "17") (ifseqformula "53"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "elementOfIntersect" (formula "41"))
                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "42")))
                              (rule "false_right" (formula "41"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "27") (inst "i=i") (inst "r=r"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "replaceKnownSelect_taclet11_0" (formula "27") (term "0,1"))
                              (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,1,1,0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "24"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,0,0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,1,1,0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1,0,0,0,1,0") (ifseqformula "13"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "exLeft" (formula "27") (inst "sk=i_16"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "inEqSimp_ltToLeq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "27"))
                              (rule "disjointDefinition" (formula "31"))
                              (rule "castedGetAny" (formula "29") (term "0"))
                              (rule "lenOfSeqConcat" (formula "28") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "getOfSeqConcat" (formula "29") (term "0"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                              (rule "getOfSeqSingleton" (formula "29") (term "2,0"))
                              (rule "castDel" (formula "29") (term "1,2,0"))
                              (rule "polySimp_sepNegMonomial" (formula "29") (term "0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "30") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_14"))
                              (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                              (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "52")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "30") (term "1,0,1,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "53")))
                              (rule "applyEqReverse" (formula "31") (term "1,0,0,0,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "1,0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "1,1,0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "0,1,1,0,0,0"))
                              (rule "commute_and" (formula "1") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "commuteIntersection" (formula "31") (term "0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "commute_and_2" (formula "1") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "ifthenelse_split" (formula "16") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                 (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "40") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "41") (term "2,0,0") (ifseqformula "17"))
                                 (rule "hideAuxiliaryEq" (formula "17"))
                                 (rule "elementOfSubsetOfUnion2" (formula "47") (ifseqformula "17") (ifseqformula "59"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "elementOfIntersect" (formula "47"))
                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "48")))
                                 (rule "false_right" (formula "47"))
                                 (rule "commuteUnion" (formula "35") (term "1"))
                                 (rule "cut_direct" (formula "46") (term "1,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.smt.ConnectionError::instance(exc_2) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "cut_direct" (formula "43") (term "0,0,0"))
                                    (branch "CUT: exc_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "60") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "48") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: exc_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "63") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.smt.ConnectionError::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "cut_direct" (formula "15") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "cut_direct" (formula "43") (term "0,0,0"))
                                       (branch "CUT: exc_2.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "65") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "65") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: exc_2.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "65") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "cut_direct" (formula "43") (term "0,0,0"))
                                       (branch "CUT: exc_2.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "66") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEqRigid" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: exc_2.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "43"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "67") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "67") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "67") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "66") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "66") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                 (rule "applyEqReverse" (formula "38") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "34") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "16"))
                                 (rule "hideAuxiliaryEq" (formula "16"))
                                 (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "cut_direct" (formula "42") (term "1,0,0"))
                                 (branch "CUT: de.uni.trier.infsec.functionalities.smt.ConnectionError::instance(exc_2) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "cut_direct" (formula "39") (term "0,0,0"))
                                    (branch "CUT: exc_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "60") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "57"))
                                                (rule "false_right" (formula "57"))
                                                (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "51") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "60") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "56") (ifseqformula "32"))
                                                (rule "false_right" (formula "56"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "51") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "57") (ifseqformula "32"))
                                                (rule "false_right" (formula "57"))
                                                (rule "applyEqRigid" (formula "59") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "59") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "59"))
                                                (rule "applyEqRigid" (formula "57") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "57"))
                                                (rule "false_right" (formula "57"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: exc_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "61") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "57") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "59") (ifseqformula "32"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "54") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "58") (ifseqformula "32"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: de.uni.trier.infsec.functionalities.smt.ConnectionError::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "cut_direct" (formula "39") (term "0,0,0"))
                                    (branch "CUT: exc_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "58") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: exc_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEqRigid" (formula "58") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "63") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEqRigid" (formula "59") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "59") (ifseqformula "32"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "54") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "62") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_16 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "62") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "53"))
                           (branch "Case 1"
                              (rule "notRight" (formula "53"))
                              (rule "eqSymm" (formula "54"))
                              (rule "applyEq" (formula "51") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "1"))
                              (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=f_4_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "55"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "46"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                              (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0") (ifseqformula "17") (ifseqformula "52"))
                              (rule "elementOfIntersect" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "41"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "53"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "56")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Case 2"
                              (rule "notRight" (formula "53"))
                              (rule "eqSymm" (formula "54"))
                              (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=f_4_7"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "24"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "13"))
                              (rule "eqSymm" (formula "55"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_4_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,1,0,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0") (ifseqformula "18") (ifseqformula "53"))
                              (rule "elementOfIntersect" (formula "1") (term "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "elementOfSubsetOfUnion2" (formula "41") (ifseqformula "17") (ifseqformula "53"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "elementOfIntersect" (formula "41"))
                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "42")))
                              (rule "false_right" (formula "41"))
                              (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "27") (inst "i=i") (inst "r=r"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "replaceKnownSelect_taclet11_0" (formula "27") (term "0,1"))
                              (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,0,0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet14_0" (formula "27") (term "0,1,1,0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "24"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,0,0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "27") (term "0,1,1,0,0,0,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1,0,0,0,1,0") (ifseqformula "13"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "exLeft" (formula "27") (inst "sk=i_17"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "inEqSimp_ltToLeq" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "27"))
                              (rule "disjointDefinition" (formula "31"))
                              (rule "castedGetAny" (formula "29") (term "0"))
                              (rule "lenOfSeqConcat" (formula "28") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "getOfSeqConcat" (formula "29") (term "0"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                              (rule "getOfSeqSingleton" (formula "29") (term "2,0"))
                              (rule "castDel" (formula "29") (term "1,2,0"))
                              (rule "polySimp_sepNegMonomial" (formula "29") (term "0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,2,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
                              (rule "pullOutSelect" (formula "30") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_15"))
                              (rule "applyEq" (formula "29") (term "1") (ifseqformula "30"))
                              (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "52")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "13"))
                              (rule "replace_known_right" (formula "30") (term "1,0,1,0,0") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "53")))
                              (rule "applyEqReverse" (formula "31") (term "1,0,0,0,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "1,0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "1,1,0,0,0"))
                              (rule "nnf_notOr" (formula "30") (term "0,1,1,0,0,0"))
                              (rule "commute_and" (formula "1") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "commuteIntersection" (formula "31") (term "0"))
                              (rule "commute_or" (formula "30") (term "0,0,0"))
                              (rule "commute_or_2" (formula "30") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "castDel" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "castDel" (formula "30") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "commute_or" (formula "30") (term "0"))
                              (rule "commute_and_2" (formula "1") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "cnf_rightDist" (formula "30") (term "0"))
                              (rule "distr_forallAnd" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "commute_or_2" (formula "30") (term "0"))
                              (rule "shift_paren_or" (formula "31") (term "0"))
                              (rule "commute_or" (formula "31") (term "0,0"))
                              (rule "ifthenelse_split" (formula "16") (term "0"))
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                                 (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "35") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "41") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "37") (term "2,0,0") (ifseqformula "17"))
                                 (rule "applyEqReverse" (formula "40") (term "2,0,0") (ifseqformula "17"))
                                 (rule "hideAuxiliaryEq" (formula "17"))
                                 (rule "elementOfSubsetOfUnion2" (formula "47") (ifseqformula "17") (ifseqformula "59"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "elementOfIntersect" (formula "47"))
                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "48")))
                                 (rule "false_right" (formula "47"))
                                 (rule "commuteUnion" (formula "35") (term "1"))
                                 (rule "cut_direct" (formula "46") (term "1"))
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "cut_direct" (formula "43") (term "0,0,0"))
                                    (branch "CUT: exc_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "48") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "false_right" (formula "61"))
                                                (rule "applyEq" (formula "61") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "false_right" (formula "61"))
                                                (rule "applyEq" (formula "48") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "61") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "false_right" (formula "61"))
                                                (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: exc_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "66") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "cut_direct" (formula "43") (term "0,0,0"))
                                    (branch "CUT: exc_2.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "30") (term "0,0,0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                             (rule "leq_literals" (formula "30") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "eqSymm" (formula "30"))
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "65") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "49") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "61") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "56") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "64") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "66") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: exc_2.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "cut_direct" (formula "15") (term "0"))
                                       (branch "CUT: result_0.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "66") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "50") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "62") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEq" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "false_right" (formula "65"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "57") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "65") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: result_0.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "ifthenelse_split" (formula "29") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "28"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "leq_literals" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "31") (term "1,0,1,0") (ifseqformula "29"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEqRigid" (formula "67") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEq" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "66") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "28") (ifseqformula "47"))
                                             (rule "replace_known_left" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradEq7" (formula "47") (ifseqformula "28"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "false_right" (formula "65"))
                                                (rule "applyEq" (formula "51") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "63") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "58") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "66") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                                 (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "48") (term "2") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "36") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "40") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "35") (term "0,1") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "39") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "38") (term "2,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "applyEqReverse" (formula "33") (term "2,0,0") (ifseqformula "16"))
                                 (rule "hideAuxiliaryEq" (formula "16"))
                                 (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "45"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "true_left" (formula "33"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "cut_direct" (formula "42") (term "1"))
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "cut_direct" (formula "15") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "cut_direct" (formula "39") (term "0,0,0"))
                                       (branch "CUT: exc_2.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "60") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "60") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "56") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "56") (ifseqformula "32"))
                                                (rule "false_right" (formula "56"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "56"))
                                                (rule "false_right" (formula "56"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "51") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "60") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "57") (ifseqformula "32"))
                                                (rule "false_right" (formula "57"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: exc_2.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "61") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "61") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "cut_direct" (formula "39") (term "0,0,0"))
                                       (branch "CUT: exc_2.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "61") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "57") (term "1") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "57") (ifseqformula "32"))
                                                (rule "false_right" (formula "57"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "60") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: exc_2.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "applyEqRigid" (formula "59") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "59") (ifseqformula "32"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "59") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "59") (ifseqformula "32"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: java.lang.RuntimeException::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "cut_direct" (formula "15") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "cut_direct" (formula "39") (term "0,0,0"))
                                       (branch "CUT: exc_2.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "28") (term "0,0,0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "eqSymm" (formula "28"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "58") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "61") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "52") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: exc_2.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "38"))
                                                (rule "applyEqRigid" (formula "60") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "62") (term "2,1") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "4"))
                                                (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "38"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                (rule "disjointAllFields" (formula "59") (ifseqformula "32"))
                                                (rule "false_right" (formula "59"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "cut_direct" (formula "39") (term "0,0,0"))
                                       (branch "CUT: exc_2.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "61"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "53") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: exc_2.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "ifthenelse_split" (formula "27") (term "2,0"))
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 TRUE"
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,0"))
                                             (rule "times_zero_1" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "eqSymm" (formula "27"))
                                             (rule "applyEq" (formula "28") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "29") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "30") (term "1,0,1,0") (ifseqformula "27"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "61"))
                                                (rule "false_right" (formula "61"))
                                                (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "62") (ifseqformula "1"))
                                             )
                                          )
                                          (branch " de.uni.trier.infsec.functionalities.smt.SMT.registered_receiver_ids.length = i_17 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "26") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradEq7" (formula "43") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "false_right" (formula "43"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "eqSymm" (formula "63"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "55") (ifseqformula "3"))
                                             )
                                             (branch "f_4 = server & !f_4 = <created> & o_4 = result_1 FALSE"
                                                (rule "close" (formula "62") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "ClassCastException (!(exc_2 instanceof java.lang.Throwable))"
                  (rule "orRight" (formula "50"))
                  (builtin "One Step Simplification" (formula "52"))
                  (builtin "One Step Simplification" (formula "51"))
                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "43")))
                  (rule "false_right" (formula "51"))
                  (rule "instanceof_static_type" (formula "50") (term "0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "closeTrue" (formula "50"))
               )
            )
            (branch "if exc_2 instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
               (rule "notLeft" (formula "1"))
               (rule "instanceof_static_type" (formula "39") (term "0"))
               (builtin "One Step Simplification" (formula "39"))
               (rule "closeTrue" (formula "39"))
            )
         )
      )
      (branch "Pre (Server)"
         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "25")) (ifInst ""  (formula "33")) (ifInst ""  (formula "36")) (ifInst ""  (formula "33")) (ifInst ""  (formula "36")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,1") (ifseqformula "22"))
         (rule "wellFormedAnonEQ" (formula "39") (term "0,0,1") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,0,1") (ifseqformula "22"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,1") (ifseqformula "11"))
         (rule "replaceKnownSelect_taclet11_0" (formula "39") (term "0,1,1,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,1") (ifseqformula "11"))
         (rule "wellFormedAnonEQ" (formula "39") (term "0,0,0,1") (ifseqformula "11"))
         (rule "replace_known_left" (formula "39") (term "0,1,1") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "1")) (ifInst ""  (formula "10")) (ifInst ""  (formula "21")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "24")))
         (rule "inEqSimp_commuteLeq" (formula "39") (term "0"))
         (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "5"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "inEqSimp_commuteLeq" (formula "39") (term "0"))
         (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "disjointDefinition" (formula "39"))
         (rule "Class_invariant_axiom_for_de_uni_trier_infsec_functionalities_smt_Receiver" (formula "25") (inst "i=i") (inst "r=r"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "replaceKnownSelect_taclet11_0" (formula "25") (term "0,1"))
         (rule "replaceKnownSelect_taclet14_0" (formula "25") (term "0,1,1,0,0,0,0"))
         (rule "replaceKnownSelect_taclet14_0" (formula "25") (term "0,0,0,1,0,0,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0,0,0,1,0") (ifseqformula "22"))
         (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "25") (term "0,1,1,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet15_0" (formula "25") (term "0,0,0,1,0,0,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,1,0,0,0,1,0") (ifseqformula "11"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "25"))
         (rule "exLeft" (formula "25") (inst "sk=i_13"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "25"))
         (rule "inEqSimp_ltToLeq" (formula "26"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "26") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "25"))
         (rule "disjointDefinition" (formula "29"))
         (rule "castedGetAny" (formula "27") (term "0"))
         (rule "lenOfSeqConcat" (formula "26") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
         (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "26") (term "1,0"))
         (rule "mul_literals" (formula "26") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "26") (term "0"))
         (rule "polySimp_addComm1" (formula "26") (term "0,0"))
         (rule "add_literals" (formula "26") (term "0,0,0"))
         (rule "add_zero_left" (formula "26") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "26"))
         (rule "polySimp_mulLiterals" (formula "26") (term "0"))
         (rule "polySimp_elimOne" (formula "26") (term "0"))
         (rule "getOfSeqConcat" (formula "27") (term "0"))
         (rule "polySimp_elimSub" (formula "27") (term "1,2,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
         (rule "getOfSeqSingleton" (formula "27") (term "2,0"))
         (rule "castDel" (formula "27") (term "1,2,0"))
         (rule "polySimp_sepNegMonomial" (formula "27") (term "0,2,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,2,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,2,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
         (rule "pullOutSelect" (formula "28") (term "1,0,0,0,0") (inst "selectSK=de_uni_trier_infsec_functionalities_smt_Receiver_id_11"))
         (rule "applyEq" (formula "27") (term "1") (ifseqformula "28"))
         (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "38")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0,0") (ifseqformula "11"))
         (rule "replace_known_right" (formula "28") (term "0,0,1,0,0") (ifseqformula "39"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "40")))
         (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "28"))
         (rule "applyEqReverse" (formula "29") (term "1,0,0,0,0") (ifseqformula "28"))
         (rule "hideAuxiliaryEq" (formula "28"))
         (rule "nnf_imp2or" (formula "28") (term "0"))
         (rule "nnf_notAnd" (formula "28") (term "0,0"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
         (rule "nnf_notOr" (formula "28") (term "1,0,0,0"))
         (rule "nnf_notOr" (formula "28") (term "1,1,0,0,0"))
         (rule "nnf_notOr" (formula "28") (term "0,1,1,0,0,0"))
         (rule "commuteIntersection" (formula "43") (term "0"))
         (rule "intersectWithSingleton" (formula "43") (term "0"))
         (builtin "One Step Simplification" (formula "43"))
         (rule "notRight" (formula "43"))
         (rule "disjointNotInOtherLocset1" (formula "1") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "eqSymm" (formula "38"))
         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "32"))
         (rule "elementOfUnion" (formula "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSubsetImpliesElementOfSuperset" (formula "1") (ifseqformula "17"))
         (rule "elementOfSubsetOfUnion2" (formula "2") (ifseqformula "18") (ifseqformula "44"))
         (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "2"))
         (rule "elementOfUnion" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Exceptional Post (registerReceiver)"
      (builtin "One Step Simplification" (formula "25"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "replaceKnownSelect_taclet0_0" (formula "21") (term "0,1,0,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "21") (term "0,1,0,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet9_0" (formula "21") (term "1,0,1,1,1,0,1,1"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,1,0,1,0,1,1") (ifseqformula "10"))
      (rule "replaceKnownAuxiliaryConstant_taclet10_0" (formula "21") (term "1,0,1,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet1_0" (formula "21") (term "1,0,1,1,1,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet7_0" (formula "21") (term "0,1,0,1,1,1,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet2_0" (formula "21") (term "1,0,1,1,1,1,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet8_0" (formula "21") (term "0,1,0,1,1,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet3_0" (formula "21") (term "1,0,1,1,1,1,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet5_0" (formula "21") (term "1,0,1,1,1,1,1,1,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "21") (term "1,0,1,1,1,1,1,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "21") (term "1,0,1,1,1,1,1,1,1,0,1,1"))
      (rule "andLeft" (formula "21"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0") (ifseqformula "21"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1,0") (ifseqformula "10"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "notLeft" (formula "22"))
      (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "true_left" (formula "23"))
      (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "commute_or_2" (formula "22"))
      (rule "commute_or_2" (formula "23"))
      (rule "commute_or_2" (formula "23") (term "0"))
      (rule "commute_or_2" (formula "23"))
      (rule "commute_or_2" (formula "23") (term "0,0"))
      (rule "commute_or_2" (formula "23") (term "0"))
      (rule "commute_or_2" (formula "23"))
      (rule "commute_or" (formula "23") (term "0,0,0"))
      (rule "commute_or_2" (formula "23") (term "0,0"))
      (rule "commute_or_2" (formula "23") (term "0"))
      (rule "commuteUnion" (formula "21") (term "1,0"))
      (rule "commuteUnion" (formula "21") (term "0,1,0"))
      (rule "methodCallParamThrow" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "tryCatchThrow" (formula "28") (term "1"))
      (rule "lenNonNegative" (formula "8") (term "1"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "lenNonNegative" (formula "9") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "9"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "lenNonNegative" (formula "7") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "7"))
      (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
      (rule "ifElseUnfold" (formula "29") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "29") (term "1") (newnames "x_1"))
      (rule "equality_comparison_simple" (formula "29") (term "1"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "replace_known_right" (formula "29") (term "0,0,1,0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "ifElseSplit" (formula "29"))
      (branch "if x_1 true"
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_1 false"
         (builtin "One Step Simplification" (formula "30"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "29"))
         (branch "if exc_1 instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
            (rule "instanceof_static_type" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "29") (term "1") (newnames "e_1"))
            (rule "reference_type_cast" (formula "29"))
            (branch "Normal Execution (exc_1 instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "29"))
               (rule "assignment" (formula "29") (term "1"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "emptyModality" (formula "29") (term "1"))
               (rule "andRight" (formula "29"))
               (branch "Case 1"
                  (rule "andRight" (formula "29"))
                  (branch "Case 1"
                     (rule "impRight" (formula "29"))
                     (rule "andRight" (formula "30"))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "30"))
                        (branch "Case 1"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "30"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "30"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "30"))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "30"))
                                 (branch "Case 1"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "30"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "30"))
                                       (branch "Case 1"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "30"))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "30"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "30"))
                                                (branch "Case 1"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "30"))
                                                   (branch "Case 1"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Case 2"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "impRight" (formula "29"))
                     (rule "orRight" (formula "30"))
                     (rule "orRight" (formula "30"))
                     (rule "orRight" (formula "30"))
                     (rule "orRight" (formula "30"))
                     (rule "orRight" (formula "30"))
                     (rule "orRight" (formula "30"))
                     (rule "orRight" (formula "30"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (builtin "One Step Simplification" (formula "37"))
                     (builtin "One Step Simplification" (formula "36"))
                     (builtin "One Step Simplification" (formula "35"))
                     (builtin "One Step Simplification" (formula "34"))
                     (builtin "One Step Simplification" (formula "33"))
                     (builtin "One Step Simplification" (formula "32"))
                     (builtin "One Step Simplification" (formula "31"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "true_left" (formula "1"))
                     (rule "replace_known_right" (formula "24") (term "1,0,0,0") (ifseqformula "32"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")) (ifInst ""  (formula "31")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                     (rule "closeFalse" (formula "24"))
                  )
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "allRight" (formula "29") (inst "sk=f_2"))
                  (rule "allRight" (formula "29") (inst "sk=o_2"))
                  (rule "orRight" (formula "29"))
                  (rule "orRight" (formula "29"))
                  (rule "orRight" (formula "29"))
                  (rule "orRight" (formula "30"))
                  (rule "eqSymm" (formula "33"))
                  (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_2_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "12"))
                  (rule "eqSymm" (formula "34"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSubsetOfUnion2" (formula "1") (term "0,0,0,0") (ifseqformula "16") (ifseqformula "30"))
                  (rule "elementOfIntersect" (formula "1") (term "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                  (rule "notLeft" (formula "1"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSubsetOfUnion2" (formula "26") (ifseqformula "16") (ifseqformula "31"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "elementOfIntersect" (formula "26"))
                  (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "27")))
                  (rule "false_right" (formula "26"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "32"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "commute_and" (formula "33"))
                  (rule "commute_and" (formula "32"))
                  (rule "ifthenelse_split" (formula "15") (term "0"))
                  (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep TRUE"
                     (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "27") (term "2") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "16"))
                     (rule "hideAuxiliaryEq" (formula "16"))
                     (rule "elementOfSubsetOfUnion2" (formula "26") (ifseqformula "16") (ifseqformula "31"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "elementOfIntersect" (formula "26"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "27")))
                     (rule "false_right" (formula "26"))
                     (rule "cut_direct" (formula "25") (term "1"))
                     (branch "CUT: java.lang.RuntimeException::instance(exc_1) = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "cut_direct" (formula "34") (term "0,0"))
                        (branch "CUT: o_2 = null TRUE"
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "false_right" (formula "35"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_2 = null FALSE"
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "notRight" (formula "35"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "36")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "CUT: java.lang.RuntimeException::instance(exc_1) = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "cut_direct" (formula "35") (term "0,0"))
                        (branch "CUT: o_2 = null TRUE"
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "false_right" (formula "36"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_2 = null FALSE"
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "notRight" (formula "36"))
                           (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
                  (branch "(null, rep) in de.uni.trier.infsec.functionalities.smt.SMT.rep FALSE"
                     (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "15"))
                     (rule "applyEqReverse" (formula "26") (term "2") (ifseqformula "15"))
                     (rule "hideAuxiliaryEq" (formula "15"))
                     (rule "cut_direct" (formula "23") (term "1,0,0"))
                     (branch "CUT: de.uni.trier.infsec.functionalities.smt.SMTError::instance(exc_1) = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "cut_direct" (formula "14") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "cut_direct" (formula "32") (term "0,0"))
                           (branch "CUT: o_2 = null TRUE"
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "false_right" (formula "33"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_2 = null FALSE"
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "notRight" (formula "33"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "34")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "cut_direct" (formula "33") (term "0,0"))
                           (branch "CUT: o_2 = null TRUE"
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "false_right" (formula "34"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_2 = null FALSE"
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "notRight" (formula "34"))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                     (branch "CUT: de.uni.trier.infsec.functionalities.smt.SMTError::instance(exc_1) = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "cut_direct" (formula "22") (term "0,0"))
                        (branch "CUT: exc_1.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "cut_direct" (formula "14") (term "0"))
                           (branch "CUT: result_0.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "cut_direct" (formula "33") (term "0,0"))
                              (branch "CUT: o_2 = null TRUE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "false_right" (formula "34"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_2 = null FALSE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "notRight" (formula "34"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "35")))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "CUT: result_0.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "cut_direct" (formula "34") (term "0,0"))
                              (branch "CUT: o_2 = null TRUE"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "false_right" (formula "35"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_2 = null FALSE"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "notRight" (formula "35"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                        )
                        (branch "CUT: exc_1.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "cut_direct" (formula "14") (term "0"))
                           (branch "CUT: result_0.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "cut_direct" (formula "34") (term "0,0"))
                              (branch "CUT: o_2 = null TRUE"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "false_right" (formula "35"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_2 = null FALSE"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "notRight" (formula "35"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "CUT: result_0.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "cut_direct" (formula "35") (term "0,0"))
                              (branch "CUT: o_2 = null TRUE"
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "false_right" (formula "36"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_2 = null FALSE"
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "notRight" (formula "36"))
                                 (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "ClassCastException (!(exc_1 instanceof java.lang.Throwable))"
               (rule "orRight" (formula "29"))
               (builtin "One Step Simplification" (formula "31"))
               (builtin "One Step Simplification" (formula "30"))
               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "25")))
               (rule "false_right" (formula "30"))
               (rule "instanceof_static_type" (formula "29") (term "0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "closeTrue" (formula "29"))
            )
         )
         (branch "if exc_1 instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
            (rule "notLeft" (formula "1"))
            (rule "instanceof_static_type" (formula "25") (term "0"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "closeTrue" (formula "25"))
         )
      )
   )
   (branch "Pre (registerReceiver)"
      (builtin "One Step Simplification" (formula "23"))
      (rule "wellFormedAnonEQ" (formula "23") (term "1") (ifseqformula "10"))
      (rule "replaceKnownSelect_taclet1_0" (formula "23") (term "0,0,0,0"))
      (rule "replaceKnownSelect_taclet3_0" (formula "23") (term "0,1,0,0"))
      (rule "replaceKnownSelect_taclet1_0" (formula "23") (term "0,0,1,0"))
      (rule "replaceKnownSelect_taclet5_0" (formula "23") (term "0,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet2_0" (formula "23") (term "0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet4_0" (formula "23") (term "0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet2_0" (formula "23") (term "0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet6_0" (formula "23") (term "0,1,1,0"))
      (rule "eqSymm" (formula "23") (term "0,0"))
      (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "8")) (ifInst ""  (formula "9")))
      (rule "applyEq" (formula "23") (term "0") (ifseqformula "7"))
      (rule "eqSymm" (formula "23"))
      (rule "close" (formula "23") (ifseqformula "8"))
   )
)
(branch "Exceptional Post (registerSender)"
   (builtin "One Step Simplification" (formula "13"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0") (ifseqformula "10"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "11"))
   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "true_left" (formula "12"))
   (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "commute_or_2" (formula "12"))
   (rule "commute_or_2" (formula "12") (term "0,0"))
   (rule "commute_or_2" (formula "12") (term "0"))
   (rule "commute_or_2" (formula "12"))
   (rule "commute_or" (formula "12") (term "0,0,0"))
   (rule "commute_or_2" (formula "12") (term "0,0"))
   (rule "commute_or_2" (formula "12") (term "0"))
   (rule "commuteUnion" (formula "10") (term "1,0"))
   (rule "methodCallParamThrow" (formula "16") (term "1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "tryCatchThrow" (formula "16") (term "1"))
   (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "16") (term "1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "replace_known_right" (formula "16") (term "0,0,1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "lenNonNegative" (formula "8") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "8"))
   (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
   (rule "lenNonNegative" (formula "9") (term "1"))
   (rule "inEqSimp_commuteLeq" (formula "9"))
   (rule "lenNonNegative" (formula "7") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "7"))
   (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
   (rule "ifElseSplit" (formula "17"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "17"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
         (rule "instanceof_static_type" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "e"))
         (rule "reference_type_cast" (formula "17"))
         (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
            (builtin "One Step Simplification" (formula "17"))
            (rule "assignment" (formula "17") (term "1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "emptyModality" (formula "17") (term "1"))
            (rule "andRight" (formula "17"))
            (branch "Case 1"
               (rule "andRight" (formula "17"))
               (branch "Case 1"
                  (rule "impRight" (formula "17"))
                  (rule "andRight" (formula "18"))
                  (branch "Case 1"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "18"))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "18"))
                        (branch "Case 1"
                           (builtin "One Step Simplification" (formula "18"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "18"))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "18"))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "18"))
                                 (branch "Case 1"
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "18"))
                                    (branch "Case 1"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "18"))
                                       (branch "Case 1"
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "18"))
                                          (branch "Case 1"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "18"))
                                             (branch "Case 1"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "18"))
                                                (branch "Case 1"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Case 2"
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "impRight" (formula "17"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (rule "orRight" (formula "18"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                  (builtin "One Step Simplification" (formula "25"))
                  (builtin "One Step Simplification" (formula "24"))
                  (builtin "One Step Simplification" (formula "23"))
                  (builtin "One Step Simplification" (formula "18"))
                  (builtin "One Step Simplification" (formula "22"))
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "20"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "1"))
                  (rule "replace_known_right" (formula "13") (term "1,0,0,0") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                  (rule "closeFalse" (formula "13"))
               )
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "17"))
               (rule "allRight" (formula "17") (inst "sk=f_3"))
               (rule "allRight" (formula "17") (inst "sk=o_3"))
               (rule "orRight" (formula "17"))
               (rule "orRight" (formula "17"))
               (rule "orRight" (formula "17"))
               (rule "orRight" (formula "18"))
               (rule "eqSymm" (formula "21"))
               (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_3_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
               (rule "eqSymm" (formula "22"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
            (rule "orRight" (formula "17"))
            (rule "false_right" (formula "19"))
            (builtin "One Step Simplification" (formula "18"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "14")))
            (rule "false_right" (formula "17"))
            (rule "instanceof_static_type" (formula "17") (term "0"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "closeTrue" (formula "17"))
         )
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
         (rule "notLeft" (formula "1"))
         (rule "instanceof_static_type" (formula "14") (term "0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "closeTrue" (formula "14"))
      )
   )
)
(branch "Pre (registerSender)"
   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "11"))
)
)

}
