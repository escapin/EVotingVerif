\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Apr 14 16:57:48 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=4000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:off , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , optimisedSelectRules-optimisedSelectRules\\:on , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Apr 14 16:57:48 CEST 2014
name=de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server\\:\\:resultReady()].JML normal_behavior operation contract.0
contract=de.uni.trier.infsec.eVotingVerif.core.Server[de.uni.trier.infsec.eVotingVerif.core.Server\\:\\:resultReady()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "fc98e232541230a64a98c630ca708d63b5fc79f7"))

(autoModeTime "733")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "7") (term "0,0,1,0,1"))
(rule "eqSymm" (formula "7") (term "0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,0,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "7") (term "0,0,0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "7") (term "0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "eqSymm" (formula "12"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "disjointDefinition" (formula "10"))
(builtin "One Step Simplification" (formula "10"))
(rule "notLeft" (formula "10"))
(rule "eqSymm" (formula "14"))
(rule "disjointDefinition" (formula "9"))
(builtin "One Step Simplification" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "eqSymm" (formula "13"))
(rule "disjointDefinition" (formula "8"))
(builtin "One Step Simplification" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "eqSymm" (formula "12"))
(rule "disjointDefinition" (formula "7"))
(rule "disjointDefinition" (formula "5"))
(rule "disjointDefinition" (formula "6"))
(rule "sortsDisjointModuloNull" (formula "14"))
(rule "replace_known_right" (formula "14") (term "1") (ifseqformula "15"))
(builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")))
(rule "false_right" (formula "14"))
(rule "sortsDisjointModuloNull" (formula "13"))
(rule "replace_known_right" (formula "13") (term "1") (ifseqformula "18"))
(builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")))
(rule "false_right" (formula "13"))
(rule "sortsDisjointModuloNull" (formula "12"))
(rule "replace_known_right" (formula "12") (term "1") (ifseqformula "17"))
(builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "13")))
(rule "false_right" (formula "12"))
(rule "applyEq" (formula "10") (term "0") (ifseqformula "8"))
(rule "commuteIntersection" (formula "7") (term "0"))
(rule "commuteIntersection" (formula "5") (term "0"))
(rule "commuteIntersection" (formula "6") (term "0"))
(rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_resultReady,savedHeapBefore_resultReady"))
(builtin "One Step Simplification" (formula "17"))
(rule "for_to_while" (formula "17") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "i"))
(rule "assignment" (formula "17") (term "1"))
(builtin "One Step Simplification" (formula "17"))
(builtin "Loop Invariant" (formula "17") (newnames "heapBeforeLoop,iBeforeLoop,i_0,anon_heap_loop,o,f,variant,b"))
(branch "Invariant Initially Valid"
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
   (rule "leq_literals" (formula "17") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1"))
   (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,1"))
   (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0"))
   (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "8"))
   (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
   (rule "mul_literals" (formula "17") (term "1,1,0,0,1"))
   (rule "nnf_imp2or" (formula "17") (term "0,1"))
   (rule "nnf_notAnd" (formula "17") (term "0,0,1"))
   (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1"))
   (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1"))
   (rule "add_literals" (formula "17") (term "0,0,1,0,0,1"))
   (rule "add_zero_left" (formula "17") (term "0,1,0,0,1"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "17"))
   (rule "eqSymm" (formula "17") (term "1,0,0"))
   (rule "replace_known_left" (formula "17") (term "1,0,0,0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")) (ifInst ""  (formula "9")))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
   (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "11"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
   (rule "disjointDefinition" (formula "17") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "eqSymm" (formula "17") (term "0,1,0,0,0"))
   (rule "disjointDefinition" (formula "17") (term "1,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "eqSymm" (formula "17") (term "0,1,0"))
   (rule "disjointDefinition" (formula "17") (term "1,0,0,0,0"))
   (rule "disjointDefinition" (formula "17") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "eqSymm" (formula "17") (term "0,1,0,0"))
   (rule "disjointDefinition" (formula "17") (term "0,0,0,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "17") (term "0,1,0"))
   (rule "replace_known_right" (formula "17") (term "1,0,1,0") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")))
   (rule "sortsDisjointModuloNull" (formula "17") (term "0,1,0"))
   (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")))
   (rule "sortsDisjointModuloNull" (formula "17") (term "0,1,0"))
   (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "16")))
   (rule "disjointDefinition" (formula "17") (term "1,0,0"))
   (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "8"))
   (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "commuteIntersection" (formula "17") (term "0,1,0"))
   (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "commuteIntersection" (formula "17") (term "0,0"))
   (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "commuteIntersection" (formula "17") (term "0"))
   (rule "close" (formula "17") (ifseqformula "7"))
)
(branch "Body Preserves Invariant"
   (builtin "One Step Simplification" (formula "19"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "translateJavaSubInt" (formula "19") (term "0,1,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "19") (term "0,1,1,1,1,0,1,1"))
   (rule "andLeft" (formula "13"))
   (rule "impRight" (formula "20"))
   (rule "andLeft" (formula "14"))
   (rule "andLeft" (formula "14"))
   (rule "eqSymm" (formula "23") (term "0,0,1,0,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "23") (term "0,1,1,1,0"))
   (rule "polySimp_elimSub" (formula "23") (term "0,1,1,1,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "23") (term "0,1,1,1,0"))
   (rule "polySimp_addComm0" (formula "23") (term "0,1,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "inEqSimp_commuteLeq" (formula "15"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "rtrn"))
   (rule "assignment" (formula "23") (term "1"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "returnExpr"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "23") (term "1"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "thrownExc"))
   (rule "applyEq" (formula "15") (term "0") (ifseqformula "9"))
   (rule "applyEq" (formula "23") (term "1,0,1,1,1,0,0,0") (ifseqformula "9"))
   (rule "blockThrow" (formula "23") (term "1,0,0,1"))
   (rule "blockReturn" (formula "23") (term "1,0,1,0,1"))
   (rule "blockThrow" (formula "23") (term "1,0,0,1"))
   (rule "blockReturn" (formula "23") (term "1,0,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
   (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "nnf_imp2or" (formula "16") (term "0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0"))
   (rule "nnf_imp2or" (formula "23") (term "0,1,0,0,1,1,1,0,1"))
   (rule "nnf_notAnd" (formula "23") (term "0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1,0,0,1,1,1,0,1"))
   (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0,0,1,1,1,0,1"))
   (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "notLeft" (formula "15"))
   (rule "notLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "eqSymm" (formula "21"))
   (rule "inEqSimp_commuteLeq" (formula "22"))
   (rule "inEqSimp_commuteLeq" (formula "21"))
   (rule "disjointDefinition" (formula "20"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "eqSymm" (formula "22"))
   (rule "disjointDefinition" (formula "19"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "notLeft" (formula "19"))
   (rule "eqSymm" (formula "21"))
   (rule "disjointDefinition" (formula "18"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "notLeft" (formula "18"))
   (rule "eqSymm" (formula "20"))
   (rule "disjointDefinition" (formula "17"))
   (rule "disjointDefinition" (formula "15"))
   (rule "disjointDefinition" (formula "16"))
   (rule "sortsDisjointModuloNull" (formula "22"))
   (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "24"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "25")))
   (rule "false_right" (formula "22"))
   (rule "sortsDisjointModuloNull" (formula "21"))
   (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "24"))
   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")))
   (rule "false_right" (formula "21"))
   (rule "sortsDisjointModuloNull" (formula "20"))
   (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "26"))
   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "22")))
   (rule "false_right" (formula "20"))
   (rule "applyEq" (formula "18") (term "0") (ifseqformula "8"))
   (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_2"))
   (rule "assignment" (formula "19") (term "1"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "variableDeclarationAssign" (formula "19") (term "1"))
   (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_3"))
   (rule "assignment_read_attribute_this" (formula "19"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "8"))
   (rule "commuteIntersection" (formula "17") (term "0"))
   (rule "commuteIntersection" (formula "15") (term "0"))
   (rule "commuteIntersection" (formula "15") (term "0"))
   (rule "arrayLengthNotNegative" (formula "8") (term "1"))
   (rule "arrayLengthIsAnInt" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "less_than_comparison_simple" (formula "16") (term "1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
   (rule "methodCallEmpty" (formula "16") (term "1"))
   (rule "arrayLengthNotNegative" (formula "9") (term "0"))
   (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
   (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "emptyModality" (formula "16") (term "1"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "notRight" (formula "16"))
   (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
   (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
   (rule "add_literals" (formula "15") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0"))
   (rule "qeq_literals" (formula "15") (term "0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "true_left" (formula "15"))
   (rule "ifUnfold" (formula "21") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_4"))
   (rule "compound_less_than_comparison_2" (formula "21") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
   (rule "variableDeclarationAssign" (formula "21") (term "1"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_5"))
   (rule "assignment" (formula "21") (term "1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "variableDeclarationAssign" (formula "21") (term "1"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_6"))
   (rule "assignment_read_attribute_this" (formula "21"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "9"))
   (rule "less_than_comparison_simple" (formula "21") (term "1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,0"))
   (rule "replace_known_left" (formula "21") (term "0,0,1,0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1") (ifseqformula "2"))
   (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "ifSplit" (formula "22"))
   (branch "if x_4 true"
      (builtin "One Step Simplification" (formula "23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_7"))
      (rule "compound_assignment_2" (formula "22") (term "1") (inst "#v=x_8"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_8"))
      (rule "eval_order_array_access4" (formula "22") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "22") (term "1"))
      (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_arr"))
      (rule "assignment_read_attribute_this" (formula "22"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "assignment_array2" (formula "22"))
      (branch "Normal Execution (x_arr != null)"
         (builtin "One Step Simplification" (formula "22"))
         (rule "compound_assignment_1_new" (formula "22") (term "1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "ifSplit" (formula "25"))
         (branch "if x_7 true"
            (builtin "One Step Simplification" (formula "26"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "assignment" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "assignment" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "blockBreakNoLabel" (formula "26") (term "1"))
            (rule "blockBreakLabel" (formula "26") (term "1"))
            (rule "blockEmpty" (formula "26") (term "1"))
            (rule "tryEmpty" (formula "26") (term "1"))
            (rule "methodCallEmpty" (formula "26") (term "1"))
            (rule "emptyModality" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "methodCallReturn" (formula "26") (term "1"))
            (rule "assignment" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "methodCallEmpty" (formula "26") (term "1"))
            (rule "tryEmpty" (formula "26") (term "1"))
            (rule "emptyModality" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "applyEq" (formula "26") (term "1,1,0,0,0,0") (ifseqformula "13"))
            (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "26") (term "1"))
            (rule "eqSymm" (formula "26") (term "1,0,0,1"))
            (rule "replace_known_right" (formula "26") (term "0,1,0,0,0,0,0,0,0,1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "21")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1"))
            (rule "replace_known_left" (formula "26") (term "1,1") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "disjointDefinition" (formula "26") (term "1,0,0,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "eqSymm" (formula "26") (term "0,1,0,0,1"))
            (rule "disjointDefinition" (formula "26") (term "1,0,0,0,0,0,1"))
            (rule "disjointDefinition" (formula "26") (term "1,0,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "eqSymm" (formula "26") (term "0,1,0,1"))
            (rule "sortsDisjointModuloNull" (formula "26") (term "0,1,0,0,1"))
            (rule "replace_known_right" (formula "26") (term "0,0,1,0,0,1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
            (rule "disjointDefinition" (formula "26") (term "1,0,0,0,1"))
            (rule "sortsDisjointModuloNull" (formula "26") (term "0,1,0,1"))
            (rule "replace_known_right" (formula "26") (term "0,0,1,0,1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "21")))
            (rule "disjointDefinition" (formula "26") (term "1,0,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "eqSymm" (formula "26") (term "0,1,0,1"))
            (rule "disjointDefinition" (formula "26") (term "0,0,0,0,1"))
            (rule "sortsDisjointModuloNull" (formula "26") (term "0,1,0,1"))
            (rule "replace_known_right" (formula "26") (term "1,0,1,0,1") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "21")))
            (rule "applyEq" (formula "26") (term "0,1,1") (ifseqformula "13"))
            (rule "replace_known_left" (formula "26") (term "1,1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "commuteIntersection" (formula "26") (term "0,0,0,1"))
            (rule "replace_known_left" (formula "26") (term "0,0,1") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "commuteIntersection" (formula "26") (term "0,0,1"))
            (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "commuteIntersection" (formula "26") (term "0,1"))
            (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "notRight" (formula "26"))
            (rule "allLeft" (formula "1") (inst "t=i_0"))
            (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "leq_literals" (formula "1") (term "0,1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
            (rule "qeq_literals" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_7 false"
            (builtin "One Step Simplification" (formula "26"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "blockEmpty" (formula "26") (term "1"))
            (rule "preincrement" (formula "26") (term "1"))
            (rule "compound_int_cast_expression" (formula "26") (term "1") (inst "#v=x"))
            (rule "variableDeclarationAssign" (formula "26") (term "1"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_9"))
            (rule "remove_parentheses_right" (formula "26") (term "1"))
            (rule "assignmentAdditionInt" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "translateJavaAddInt" (formula "26") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
            (rule "unusedLabel" (formula "26") (term "1"))
            (rule "widening_identity_cast_5" (formula "26") (term "1"))
            (rule "assignment" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "tryEmpty" (formula "26") (term "1"))
            (rule "methodCallEmpty" (formula "26") (term "1"))
            (rule "emptyModality" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,0,1"))
            (rule "polySimp_rightDist" (formula "26") (term "0,0,1"))
            (rule "mul_literals" (formula "26") (term "0,0,0,1"))
            (rule "precOfInt" (formula "26") (term "1"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,1"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,1"))
            (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,1,1"))
            (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,1,1"))
            (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "26") (term "0,0,1,1"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,1,1"))
            (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1"))
            (rule "add_zero_left" (formula "26") (term "0,0,0,0,1,1"))
            (rule "polySimp_pullOutFactor1" (formula "26") (term "0,0,0,1,1"))
            (rule "add_literals" (formula "26") (term "1,0,0,0,1,1"))
            (rule "times_zero_1" (formula "26") (term "0,0,0,1,1"))
            (rule "add_zero_left" (formula "26") (term "0,0,1,1"))
            (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1"))
            (rule "times_zero_2" (formula "26") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "26") (term "0,0,1"))
            (rule "applyEq" (formula "26") (term "0,1,0,0,0") (ifseqformula "14"))
            (rule "replace_known_left" (formula "26") (term "1,0,0,0") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "applyEq" (formula "26") (term "1,0,1,1") (ifseqformula "14"))
            (rule "polySimp_pullOutFactor2" (formula "26") (term "0,1,1"))
            (rule "add_literals" (formula "26") (term "1,0,1,1"))
            (rule "times_zero_1" (formula "26") (term "0,1,1"))
            (rule "leq_literals" (formula "26") (term "1,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "applyEq" (formula "26") (term "1,0,1") (ifseqformula "14"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
            (rule "mul_literals" (formula "26") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
            (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "inEqSimp_subsumption1" (formula "26") (term "0,0") (ifseqformula "19"))
            (rule "leq_literals" (formula "26") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "26") (term "0"))
            (rule "eqSymm" (formula "26") (term "1,0,0,0"))
            (rule "replace_known_left" (formula "26") (term "1,0,0,0,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "21")) (ifInst ""  (formula "22")) (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "15")))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0"))
            (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "disjointDefinition" (formula "26") (term "0,0,0,0,0,0,0"))
            (rule "disjointDefinition" (formula "26") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "eqSymm" (formula "26") (term "0,1,0,0"))
            (rule "disjointDefinition" (formula "26") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "eqSymm" (formula "26") (term "0,1,0,0,0,0"))
            (rule "sortsDisjointModuloNull" (formula "26") (term "0,1,0,0"))
            (rule "replace_known_right" (formula "26") (term "1,0,1,0,0") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "22")))
            (rule "disjointDefinition" (formula "26") (term "1,0,0,0,0,0"))
            (rule "disjointDefinition" (formula "26") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "eqSymm" (formula "26") (term "0,1,0,0"))
            (rule "disjointDefinition" (formula "26") (term "1,0,0,0,0"))
            (rule "sortsDisjointModuloNull" (formula "26") (term "0,1,0,0,0"))
            (rule "replace_known_right" (formula "26") (term "0,0,1,0,0,0") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
            (rule "sortsDisjointModuloNull" (formula "26") (term "0,1,0,0"))
            (rule "replace_known_right" (formula "26") (term "1,0,1,0,0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "22")))
            (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "14"))
            (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "commuteIntersection" (formula "26") (term "0,1,0"))
            (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "commuteIntersection" (formula "26") (term "0,0,0"))
            (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "commuteIntersection" (formula "26") (term "0,0"))
            (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "allRight" (formula "26") (inst "sk=j_0"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "inEqSimp_leqRight" (formula "26"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "27"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
            (rule "times_zero_1" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "allLeft" (formula "22") (inst "t=j_0"))
            (rule "replace_known_right" (formula "22") (term "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "22") (term "0,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "1"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "22"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,0"))
            (rule "times_zero_1" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
            (rule "inEqSimp_homoInEq1" (formula "22"))
            (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
            (rule "add_literals" (formula "22") (term "1,0"))
            (rule "times_zero_1" (formula "22") (term "0"))
            (rule "leq_literals" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "applyEqRigid" (formula "28") (term "0,2,0") (ifseqformula "21"))
            (rule "close" (formula "28") (ifseqformula "2"))
         )
      )
      (branch "Null Reference (x_arr = null)"
         (rule "false_right" (formula "23"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (x_arr != null, but i Out of Bounds!)"
         (builtin "One Step Simplification" (formula "23"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
         (rule "false_right" (formula "23"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "16"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x_4 false"
      (builtin "One Step Simplification" (formula "23"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Use Case"
   (builtin "One Step Simplification" (formula "19"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14"))
   (rule "inEqSimp_commuteLeq" (formula "13"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "b_1"))
   (rule "applyEq" (formula "14") (term "0") (ifseqformula "8"))
   (rule "blockEmpty" (formula "22") (term "1,0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "16") (term "0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0"))
   (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "notLeft" (formula "15"))
   (rule "notLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "eqSymm" (formula "21"))
   (rule "inEqSimp_commuteLeq" (formula "22"))
   (rule "inEqSimp_commuteLeq" (formula "21"))
   (rule "disjointDefinition" (formula "20"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "eqSymm" (formula "22"))
   (rule "disjointDefinition" (formula "19"))
   (builtin "One Step Simplification" (formula "19"))
   (rule "notLeft" (formula "19"))
   (rule "eqSymm" (formula "21"))
   (rule "disjointDefinition" (formula "18"))
   (builtin "One Step Simplification" (formula "18"))
   (rule "notLeft" (formula "18"))
   (rule "eqSymm" (formula "20"))
   (rule "disjointDefinition" (formula "17"))
   (rule "disjointDefinition" (formula "15"))
   (rule "disjointDefinition" (formula "16"))
   (rule "sortsDisjointModuloNull" (formula "22"))
   (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "24"))
   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "23")))
   (rule "false_right" (formula "22"))
   (rule "sortsDisjointModuloNull" (formula "21"))
   (rule "replace_known_right" (formula "21") (term "1") (ifseqformula "26"))
   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "23")))
   (rule "false_right" (formula "21"))
   (rule "sortsDisjointModuloNull" (formula "20"))
   (rule "replace_known_right" (formula "20") (term "1") (ifseqformula "25"))
   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "21")))
   (rule "false_right" (formula "20"))
   (rule "applyEq" (formula "18") (term "0") (ifseqformula "8"))
   (rule "compound_less_than_comparison_2" (formula "24") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "24") (term "1"))
   (rule "variableDeclaration" (formula "24") (term "1") (newnames "x"))
   (rule "assignment" (formula "24") (term "1"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "variableDeclarationAssign" (formula "24") (term "1"))
   (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_1"))
   (rule "assignment_read_attribute_this" (formula "24"))
   (builtin "One Step Simplification" (formula "24"))
   (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "8"))
   (rule "commuteIntersection" (formula "17") (term "0"))
   (rule "commuteIntersection" (formula "15") (term "0"))
   (rule "commuteIntersection" (formula "15") (term "0"))
   (rule "less_than_comparison_simple" (formula "21") (term "1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,1,0"))
   (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "21") (term "0,0,0,1,0"))
   (rule "methodCallEmpty" (formula "21") (term "1"))
   (rule "emptyModality" (formula "21") (term "1"))
   (builtin "One Step Simplification" (formula "21"))
   (rule "impRight" (formula "21"))
   (rule "notLeft" (formula "1"))
   (rule "inEqSimp_geqRight" (formula "16"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
   (rule "polySimp_elimOne" (formula "1") (term "1"))
   (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
   (rule "inEqSimp_homoInEq0" (formula "1"))
   (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,0"))
   (rule "times_zero_1" (formula "1") (term "0"))
   (rule "qeq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "applyEq" (formula "10") (term "0") (ifseqformula "14"))
   (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
   (rule "inEqSimp_homoInEq1" (formula "14"))
   (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
   (rule "add_literals" (formula "14") (term "1,0"))
   (rule "times_zero_1" (formula "14") (term "0"))
   (rule "leq_literals" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "applyEq" (formula "8") (term "1") (ifseqformula "13"))
   (rule "methodCallReturn" (formula "20") (term "1"))
   (rule "assignment" (formula "20") (term "1"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "methodCallEmpty" (formula "20") (term "1"))
   (rule "tryEmpty" (formula "20") (term "1"))
   (rule "emptyModality" (formula "20") (term "1"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "applyEq" (formula "20") (term "1,1,0,0,0") (ifseqformula "8"))
   (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "Class_invariant_axiom_for_de_uni_trier_infsec_eVotingVerif_core_Server" (formula "20"))
   (rule "eqSymm" (formula "20") (term "1,0,0"))
   (rule "replace_known_right" (formula "20") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "15"))
   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "9")))
   (rule "inEqSimp_commuteLeq" (formula "20") (term "1"))
   (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "inEqSimp_commuteLeq" (formula "20") (term "1"))
   (rule "disjointDefinition" (formula "20") (term "0,0,0,0,0,0,0"))
   (rule "disjointDefinition" (formula "20") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "eqSymm" (formula "20") (term "0,1,0,0"))
   (rule "disjointDefinition" (formula "20") (term "1,0,0,0,0,0"))
   (rule "disjointDefinition" (formula "20") (term "1,0,0,0,0"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "eqSymm" (formula "20") (term "0,1,0,0,0,0"))
   (rule "disjointDefinition" (formula "20") (term "1,0,0,0,0,0,0"))
   (rule "disjointDefinition" (formula "20") (term "1,0,0,0"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "eqSymm" (formula "20") (term "0,1,0,0,0"))
   (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0,0,0,0"))
   (rule "replace_known_right" (formula "20") (term "1,0,1,0,0,0,0") (ifseqformula "19"))
   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")))
   (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "20") (term "0,0,1,0,0") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")))
   (rule "sortsDisjointModuloNull" (formula "20") (term "0,1,0,0"))
   (rule "replace_known_right" (formula "20") (term "0,0,1,0,0") (ifseqformula "16"))
   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
   (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "8"))
   (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "8"))
   (rule "eqSymm" (formula "20") (term "1"))
   (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "13"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "commuteIntersection" (formula "20") (term "0,0,0"))
   (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "5"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "commuteIntersection" (formula "20") (term "0,1"))
   (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "commuteIntersection" (formula "20") (term "0"))
   (rule "close" (formula "20") (ifseqformula "6"))
)
)

}
