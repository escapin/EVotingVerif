\settings {
"#Proof-Settings-Config-File
#Thu Oct 25 11:43:04 CEST 2012
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]RETREAT_MODE_OPTIONS_KEY=RETREAT_MODE_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[View]HideIntermediateProofsteps=false
[View]HideClosedSubtrees=false
[General]UseOCL=false
[View]ShowWholeTaclet=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[Strategy]MaximumNumberOfAutomaticApplications=10000
[View]MaxTooltipLines=40
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\javaSource "../src/de/uni/trier/infsec";

\proofObligation "#Proof Obligation Settings
#Thu Oct 25 11:43:04 CEST 2012
name=de.uni.trier.infsec.protocols.trivvoting.Server[de.uni.trier.infsec.protocols.trivvoting.Server\\:\\:collectBallot(int,[B)].JML normal_behavior operation contract.0
contract=de.uni.trier.infsec.protocols.trivvoting.Server[de.uni.trier.infsec.protocols.trivvoting.Server\\:\\:collectBallot(int,[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "daniel" ) (keyVersion "6075e802496b6a19c8d4264f67bccb80bde003e5"))

(autoModeTime "2285")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "9"))
(rule "assignment" (formula "12") (term "1"))
(builtin "One Step Simplification" (formula "12"))
(rule "eqSymm" (formula "5"))
(rule "translateJavaAddInt" (formula "12") (term "1,1,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,0,1,0,1"))
(rule "commuteUnion_2" (formula "12") (term "2,0,0,0,0,1,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,1,0,0,0,1"))
(rule "translateJavaAddInt" (formula "12") (term "0,1,0,1,0,0,0,1"))
(rule "replace_known_right" (formula "4") (term "1") (ifseqformula "9"))
(builtin "One Step Simplification" (formula "4"))
(rule "polySimp_homoEq" (formula "12") (term "1,0,1,1,0,0,0,1"))
(rule "polySimp_homoEq" (formula "12") (term "1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
(rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "12") (term "1,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "polySimp_addComm1" (formula "7") (term "0"))
(rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "12") (term "0,1,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "12") (term "0,0,1,0,1,0,0,0,1"))
(rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "5"))
(rule "polySimp_sepPosMonomial" (formula "12") (term "1,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,1,0,0,0,1"))
(rule "polySimp_sepNegMonomial" (formula "12") (term "1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "7"))
(rule "polySimp_mulLiterals" (formula "7") (term "0"))
(rule "polySimp_elimOne" (formula "7") (term "0"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,1,0,1"))
(rule "Class_invariant_axiom_for_de_uni_trier_infsec_protocols_trivvoting_Server" (formula "8") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "applyEq" (formula "8") (term "1") (ifseqformula "5"))
   (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_collectBallot"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x"))
   (rule "compound_assignment_5_nonsimple" (formula "13") (term "1"))
   (rule "ifElseUnfold" (formula "13") (term "1") (inst "#boolv=x_1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_1"))
   (rule "less_than_comparison_simple" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1,0"))
   (rule "mul_literals" (formula "13") (term "1,0,0,1,0"))
   (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0,1,0") (ifseqformula "6"))
   (rule "qeq_literals" (formula "13") (term "0,0,0,1,0"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "arrayLengthNotNegative" (formula "5") (term "1"))
   (rule "ifElseSplit" (formula "14"))
   (branch "if x_1 true"
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x_1 false"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "1"))
      (rule "compound_greater_equal_than_comparison_2" (formula "14") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_3"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_2"))
      (rule "activeUseStaticFieldReadAccess" (formula "14") (term "1"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "6"))
      (rule "greater_equal_than_comparison_simple" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "blockEmpty" (formula "14") (term "1"))
      (rule "inEqSimp_commuteGeq" (formula "14") (term "0,0,1,0"))
      (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0,1,0") (ifseqformula "8"))
      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,1,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,0,1,0"))
      (rule "leq_literals" (formula "14") (term "0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "if" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "ifUnfold" (formula "14") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_4"))
      (rule "assignment_array2" (formula "14"))
      (branch "Normal Execution (ballotCast != null)"
         (builtin "One Step Simplification" (formula "14"))
         (rule "apply_eq_boolean" (formula "14") (term "0,1,0") (ifseqformula "13"))
         (rule "arrayLengthNotNegative" (formula "9") (term "0"))
         (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
         (rule "if" (formula "14") (term "1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "assignment_to_primitive_array_component" (formula "14"))
         (branch "Normal Execution (ballotCast != null)"
            (builtin "One Step Simplification" (formula "14"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "candidate"))
            (rule "assignment_array2" (formula "14"))
            (branch "Normal Execution (_ballot != null)"
               (builtin "One Step Simplification" (formula "14"))
               (rule "selectOfStore" (formula "14") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "sortsDisjointModuloNull" (formula "14") (term "0,0,1,0"))
               (rule "replace_known_right" (formula "14") (term "1,0,0,1,0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "ifUnfold" (formula "14") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_5"))
               (rule "equality_comparison_simple" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,0") (ifseqformula "1"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "if" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "preincrement" (formula "15") (term "1,1"))
               (rule "ifUnfold" (formula "15") (term "1,2") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "15") (term "1,2") (newnames "x_6"))
               (rule "ifthenelse_split_for" (formula "15"))
               (branch "ballot[voterID] = 0 TRUE"
                  (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "1"))
                  (rule "compound_int_cast_expression" (formula "16") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_8"))
                  (rule "remove_parentheses_right" (formula "16") (term "1"))
                  (rule "assignmentAdditionInt" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                  (rule "selectOfStore" (formula "16") (term "1,0,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "widening_identity_cast_5" (formula "16") (term "1"))
                  (rule "assignment" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_9"))
                  (rule "equality_comparison_simple" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "equal_literals" (formula "16") (term "0,0,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "ifSplit" (formula "16"))
                  (branch "if x_9 true"
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_9 false"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "1"))
                     (rule "methodCallEmpty" (formula "16") (term "1"))
                     (rule "tryEmpty" (formula "16") (term "1"))
                     (rule "emptyModality" (formula "16") (term "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "eqSymm" (formula "16") (term "1,0,0,1"))
                     (rule "polySimp_homoEq" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_homoEq" (formula "16") (term "1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "16") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,1,1,0"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,1,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "castDel" (formula "16") (term "0,1,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,1,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "castDel" (formula "16") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "eqSymm" (formula "16") (term "0,0,0"))
                     (rule "selectOfStore" (formula "16") (term "0,1,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "polySimp_homoEq" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0,1,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,1,0,1,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,1,0,1,0"))
                     (rule "add_literals" (formula "16") (term "0,1,0,1,0"))
                     (rule "equal_literals" (formula "16") (term "1,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "applyEq" (formula "16") (term "2,0,0,0,1,0") (ifseqformula "1"))
                     (rule "sortsDisjointModuloNull" (formula "16") (term "0,0,0,0,1,0"))
                     (rule "replace_known_right" (formula "16") (term "0,0,0,0,0,1,0") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                     (rule "equal_literals" (formula "16") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "1,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "1,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
                     (rule "selectOfStore" (formula "16") (term "0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "castDel" (formula "16") (term "1,0,1,0,0,1"))
                     (rule "eqSymm" (formula "16") (term "1,0,0,1,0,0,1"))
                     (rule "eqSymm" (formula "16") (term "0,0,0,1,0,0,1"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "2,0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "castDel" (formula "16") (term "1,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "16") (term "1,0,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "16") (term "0,0,2,0,1,0,0,1"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_protocols_trivvoting_Server" (formula "16") (term "0") (inst "sk=sk_3") (ifseqformula "5"))
                     (branch "Use Axiom"
                        (rule "selectOfStore" (formula "16") (term "0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "1,0"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")))
                        (rule "eqSymm" (formula "16") (term "1,0"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "12")))
                        (rule "selectOfStore" (formula "16") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSymm" (formula "16") (term "0"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "11"))
                        (rule "selectOfStore" (formula "16") (term "0,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "12")) (ifInst ""  (formula "8")))
                        (rule "allRight" (formula "16") (inst "sk=f_2"))
                        (rule "allRight" (formula "16") (inst "sk=o_2"))
                        (rule "orRight" (formula "16"))
                        (rule "orRight" (formula "16"))
                        (rule "orRight" (formula "16"))
                        (rule "orRight" (formula "16"))
                        (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "16")))
                        (rule "closeTrue" (formula "20"))
                     )
                     (branch "Show Axiom Satisfiability"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
               )
               (branch "ballot[voterID] = 0 FALSE"
                  (rule "equality_comparison_simple" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "ifSplit" (formula "16"))
                  (branch "if x_6 true"
                     (builtin "One Step Simplification" (formula "17"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                     (rule "equal_literals" (formula "16"))
                     (rule "false_right" (formula "16"))
                     (rule "preincrement" (formula "16") (term "1"))
                     (rule "compound_int_cast_expression" (formula "16") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "16") (term "1"))
                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_7"))
                     (rule "remove_parentheses_right" (formula "16") (term "1"))
                     (rule "assignmentAdditionInt" (formula "16") (term "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                     (rule "selectOfStore" (formula "16") (term "1,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "widening_identity_cast_5" (formula "16") (term "1"))
                     (rule "assignment" (formula "16") (term "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "methodCallEmpty" (formula "16") (term "1"))
                     (rule "tryEmpty" (formula "16") (term "1"))
                     (rule "emptyModality" (formula "16") (term "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "eqSymm" (formula "16") (term "1,0,0,1"))
                     (rule "polySimp_homoEq" (formula "16") (term "1,0,1,1,0"))
                     (rule "polySimp_homoEq" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "16") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,1,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,1,0"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0,1,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,1,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0,1,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "applyEq" (formula "16") (term "2,0,0,0,1,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "sortsDisjointModuloNull" (formula "16") (term "0,0,0,0,1,1,0"))
                     (rule "replace_known_right" (formula "16") (term "1,0,0,0,0,1,1,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "12")))
                     (rule "selectOfStore" (formula "16") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,0,1,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "castDel" (formula "16") (term "0,0,1,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "castDel" (formula "16") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "eqSymm" (formula "16") (term "0,0,0"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "applyEq" (formula "16") (term "2,0,0,0,1,0") (ifseqformula "1"))
                     (rule "sortsDisjointModuloNull" (formula "16") (term "0,0,0,0,1,0"))
                     (rule "replace_known_right" (formula "16") (term "0,0,0,0,0,1,0") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
                     (rule "equal_literals" (formula "16") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "1,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "1,0,1,0,0"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
                     (rule "selectOfStore" (formula "16") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "selectOfStore" (formula "16") (term "0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "castDel" (formula "16") (term "1,0,1,0,0,1"))
                     (rule "eqSymm" (formula "16") (term "1,0,0,1,0,0,1"))
                     (rule "eqSymm" (formula "16") (term "0,0,0,1,0,0,1"))
                     (rule "selectOfStore" (formula "16") (term "2,0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "castDel" (formula "16") (term "1,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "16") (term "0,0,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "16") (term "1,0,2,0,1,0,0,1"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_protocols_trivvoting_Server" (formula "16") (term "0") (inst "sk=sk_2") (ifseqformula "5"))
                     (branch "Use Axiom"
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")))
                        (rule "selectOfStore" (formula "16") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "12")))
                        (rule "selectOfStore" (formula "16") (term "1,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "12")))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "8"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfStore" (formula "16") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "11")))
                        (rule "allRight" (formula "16") (inst "sk=f_1"))
                        (rule "allRight" (formula "16") (inst "sk=o_1"))
                        (rule "orRight" (formula "16"))
                        (rule "orRight" (formula "16"))
                        (rule "orRight" (formula "16"))
                        (rule "orRight" (formula "16"))
                        (rule "replace_known_right" (formula "20") (term "0,2,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "17")))
                        (rule "closeTrue" (formula "20"))
                     )
                     (branch "Show Axiom Satisfiability"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                  )
                  (branch "if x_6 false"
                     (builtin "One Step Simplification" (formula "17"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "methodCallEmpty" (formula "17") (term "1"))
                     (rule "tryEmpty" (formula "17") (term "1"))
                     (rule "emptyModality" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "eqSymm" (formula "17") (term "1,0,0,1"))
                     (rule "polySimp_homoEq" (formula "17") (term "1,0,1,1,0"))
                     (rule "polySimp_homoEq" (formula "17") (term "1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "17") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "17") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,0"))
                     (rule "selectOfStore" (formula "17") (term "0,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "sortsDisjointModuloNull" (formula "17") (term "0,0,0,0,1,0"))
                     (rule "replace_known_right" (formula "17") (term "1,0,0,0,0,1,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "12")) (ifInst ""  (formula "16")))
                     (rule "selectOfStore" (formula "17") (term "0,1,0,1,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "polySimp_homoEq" (formula "17") (term "1,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,0,1,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,1,0,1,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "17") (term "0,1,0,1,0"))
                     (rule "equal_literals" (formula "17") (term "1,0,1,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "selectOfStore" (formula "17") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "selectOfStore" (formula "17") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "castDel" (formula "17") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "selectOfStore" (formula "17") (term "0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "castDel" (formula "17") (term "0,1,1,0,0,1"))
                     (rule "eqSymm" (formula "17") (term "1,0,0,1,0,0,1"))
                     (rule "eqSymm" (formula "17") (term "0,0,0,1,0,0,1"))
                     (rule "eqSymm" (formula "17") (term "1,1,0,0,1"))
                     (rule "selectOfStore" (formula "17") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "sortsDisjointModuloNull" (formula "17") (term "0,0,0,0,0"))
                     (rule "replace_known_right" (formula "17") (term "1,0,0,0,0,0") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "12")) (ifInst ""  (formula "11")))
                     (rule "nnf_notAnd" (formula "17") (term "0,1,0,0,1"))
                     (rule "Class_invariant_axiom_for_de_uni_trier_infsec_protocols_trivvoting_Server" (formula "17") (term "0") (inst "sk=sk_1") (ifseqformula "4"))
                     (branch "Use Axiom"
                        (rule "selectOfStore" (formula "17") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "12")))
                        (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "7"))
                        (rule "selectOfStore" (formula "17") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "12")))
                        (rule "selectOfStore" (formula "17") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "10")))
                        (rule "allRight" (formula "17") (inst "sk=f_0"))
                        (rule "allRight" (formula "17") (inst "sk=o_0"))
                        (rule "orRight" (formula "17"))
                        (rule "orRight" (formula "18"))
                        (rule "orRight" (formula "17"))
                        (rule "orRight" (formula "19"))
                        (rule "orRight" (formula "17"))
                        (rule "notRight" (formula "21"))
                        (rule "notRight" (formula "21"))
                        (rule "orRight" (formula "19"))
                        (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
                        (rule "closeTrue" (formula "19"))
                     )
                     (branch "Show Axiom Satisfiability"
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "closeTrue" (formula "17"))
                     )
                  )
               )
            )
            (branch "Null Reference (_ballot = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (_ballot != null, but _voterID Out of Bounds!)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
               (builtin "One Step Simplification" (formula "15"))
               (rule "false_right" (formula "15"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
               (rule "qeq_literals" (formula "8") (term "0"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "closeFalse" (formula "8"))
            )
         )
         (branch "Null Reference (ballotCast = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (ballotCast != null, but _voterID Out of Bounds!)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (builtin "One Step Simplification" (formula "15"))
            (rule "false_right" (formula "15"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "10"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "8"))
            (rule "qeq_literals" (formula "1") (term "0,1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
            (rule "andLeft" (formula "9"))
            (rule "inEqSimp_homoInEq1" (formula "9"))
            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
            (rule "add_literals" (formula "9") (term "1,1,0"))
            (rule "times_zero_1" (formula "9") (term "1,0"))
            (rule "add_literals" (formula "9") (term "0"))
            (rule "leq_literals" (formula "9"))
            (rule "closeFalse" (formula "9"))
         )
      )
      (branch "Null Reference (ballotCast = null)"
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (ballotCast != null, but _voterID Out of Bounds!)"
         (builtin "One Step Simplification" (formula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "false_right" (formula "15"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "10"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "9"))
         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "8"))
         (rule "qeq_literals" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "9"))
   (rule "closeTrue" (formula "9"))
)
)

}
