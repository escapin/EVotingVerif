\settings {
"#Proof-Settings-Config-File
#Fri Oct 19 11:00:32 CEST 2012
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]RETREAT_MODE_OPTIONS_KEY=RETREAT_MODE_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , assertions-assertions\\:on , programRules-programRules\\:Java , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[View]HideIntermediateProofsteps=true
[View]HideClosedSubtrees=true
[General]UseOCL=false
[View]ShowWholeTaclet=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[Strategy]MaximumNumberOfAutomaticApplications=1000
[View]MaxTooltipLines=40
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\bootclasspath "../stubs";

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Oct 19 11:00:32 CEST 2012
name=de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment\\:\\:untrustedInputMessage()].JML normal_behavior operation contract.0
contract=de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment\\:\\:untrustedInputMessage()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "christoph" ) (keyVersion "5fe247a5e3ac10114c6c162945c17f94008d90d9"))

(autoModeTime "11782")

(branch "dummy ID"
(rule "impRight" (formula "1"))
(rule "assignment" (formula "2") (term "1"))
(builtin "One Step Simplification" (formula "2"))
(rule "eqSymm" (formula "2") (term "1,0,0,1,0,1"))
(rule "commuteUnion" (formula "2") (term "1,0,1,0,0,0,1"))
(rule "disjointToElementOf" (formula "2") (term "0,0,0,0,1") (inst "ov=ov") (inst "fv=fv"))
(builtin "One Step Simplification" (formula "2"))
(rule "subsetToElementOf" (formula "2") (term "0,1,0,0,0,1") (inst "ov=ov") (inst "fv=fv"))
(rule "elementOfUnion" (formula "2") (term "1,0,0,0,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "2"))
(rule "nnf_imp2or" (formula "2") (term "0,0,0,1,0,0,0,1"))
(rule "swapQuantifiersAll" (formula "2") (term "0,0,0,0,1"))
(rule "methodBodyExpand" (formula "2") (term "1") (newnames "heapBefore_untrustedInputMessage"))
(builtin "One Step Simplification" (formula "2"))
(rule "variableDeclarationAssign" (formula "2") (term "1"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "len"))
(builtin "Use Operation Contract" (formula "2") (newnames "heapBefore_untrustedInput,result_0,exc_0,heapAfter_untrustedInput,anon_heap_untrustedInput") (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::untrustedInput()].JML normal_behavior operation contract.0"))
(branch "Post (untrustedInput)"
   (builtin "One Step Simplification" (formula "3"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "andLeft" (formula "3"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "5"))
   (rule "assignment" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "commuteUnion" (formula "5") (term "1"))
   (rule "subsetToElementOf" (formula "5") (inst "ov=ov") (inst "fv=fv"))
   (rule "elementOfUnion" (formula "5") (term "1,0,0"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "nnf_imp2or" (formula "5") (term "0,0"))
   (rule "commute_or" (formula "5") (term "1,0,0"))
   (rule "cnf_rightDist" (formula "5") (term "1,0,0"))
   (rule "commute_or" (formula "5") (term "1,1,0,0"))
   (rule "cnf_rightDist" (formula "5") (term "0,0"))
   (rule "distr_forallAnd" (formula "5") (term "0"))
   (rule "distr_forallAnd" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "commute_or_2" (formula "6") (term "0,0"))
   (rule "shift_paren_or" (formula "5") (term "0,0"))
   (rule "swapQuantifiersAll" (formula "5"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "typeEqDerived2" (formula "5") (term "0,0,1,0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "castDel" (formula "5") (term "0,0,0,0"))
   (rule "castDel" (formula "5") (term "0,1,0"))
   (rule "commute_or" (formula "5") (term "0"))
   (rule "ifUnfold" (formula "7") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x"))
   (rule "less_than_comparison_simple" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
   (rule "add_literals" (formula "7") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,1,0"))
   (rule "mul_literals" (formula "7") (term "1,0,0,1,0"))
   (rule "if" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "variableDeclarationAssign" (formula "7") (term "1,2"))
   (rule "variableDeclaration" (formula "7") (term "1,2") (newnames "returnval"))
   (rule "ifthenelse_split_for" (formula "7"))
   (branch "result_0 <= -1 TRUE"
      (rule "returnUnfold" (formula "8") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr_4"))
      (rule "arrayCreation" (formula "8") (term "1") (inst "#v0=x_arr_5"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr_5"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "dim0_1"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "ifUnfold" (formula "8") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_2"))
      (rule "less_than_comparison_simple" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "less_literals" (formula "8") (term "0,0,1,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "ifSplit" (formula "8"))
      (branch "if x_2 true"
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_2 false"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "1"))
         (builtin "Use Dependency Contract" (formula "7") (term "2,0,1,0,0,0") (ifInst ""  (formula "8") (term "2,0,0,0,0,0,1,0,0,0,1")) (ifInst ""  (formula "4")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "8") (term "1") (inst "#v0=x_arr_6"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr_6"))
         (rule "variableDeclarationAssign" (formula "8") (term "1"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "length_3"))
         (rule "assignment" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<createArray>"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "newObject_1"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "8") (term "1") (inst "#v0=x_arr_7"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr_7"))
         (rule "variableDeclarationAssign" (formula "8") (term "1"))
         (rule "variableDeclaration" (formula "8") (term "1") (newnames "length_4"))
         (rule "assignment" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "allocateInstanceWithLength" (formula "8"))
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "5"))
         (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,0,1,1,0") (ifseqformula "5"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "orRight" (formula "10"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthIsAShort" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "methodCall" (formula "13"))
         (branch "Normal Execution (newObject_1 != null )"
            (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createArrayHelper>"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "assignment" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "methodCallWithinClass" (formula "13") (term "1"))
            (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepare>"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "arrayInitialisation" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "applyEq" (formula "13") (term "2,1,0,1,0") (ifseqformula "1"))
            (rule "methodCallEmpty" (formula "13") (term "1"))
            (rule "blockEmpty" (formula "13") (term "1"))
            (rule "assignment" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "methodCallReturnIgnoreResult" (formula "13") (term "1"))
            (rule "blockEmpty" (formula "13") (term "1"))
            (rule "methodCallReturn" (formula "13") (term "1"))
            (rule "assignment" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "methodCallEmpty" (formula "13") (term "1"))
            (rule "blockEmpty" (formula "13") (term "1"))
            (rule "assignment" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "blockEmpty" (formula "13") (term "1"))
            (rule "assignment" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "methodCallReturn" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "assignment" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "methodCallEmpty" (formula "13") (term "1"))
            (rule "tryEmpty" (formula "13") (term "1"))
            (rule "emptyModality" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
            (rule "eqSymm" (formula "13") (term "1,0,0,1"))
            (rule "selectOfStore" (formula "13") (term "0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "castDel" (formula "13") (term "1,0,1,0,0,1"))
            (rule "eqSymm" (formula "13") (term "1,0,0,1,0,0,1"))
            (rule "eqSymm" (formula "13") (term "0,0,0,1,0,0,1"))
            (rule "selectOfMemset" (formula "13") (term "2,0,1,0,0,1"))
            (rule "elementOfArrayRange" (formula "13") (term "0,0,2,0,1,0,0,1") (inst "iv=iv"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,1,0,0,2,0,1,0,0,1"))
            (rule "selectOfStore" (formula "13") (term "2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "castDel" (formula "13") (term "1,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "13") (term "0,0,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "13") (term "1,0,2,2,0,1,0,0,1"))
            (rule "selectOfStore" (formula "13") (term "2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "castDel" (formula "13") (term "1,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "13") (term "1,0,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "13") (term "0,0,2,2,2,0,1,0,0,1"))
            (rule "selectOfStore" (formula "13") (term "2,2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "castDel" (formula "13") (term "1,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "13") (term "0,0,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "13") (term "1,0,2,2,2,2,0,1,0,0,1"))
            (rule "selectOfCreate" (formula "13") (term "2,2,2,2,2,0,1,0,0,1"))
            (rule "castDel" (formula "13") (term "1,2,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "13") (term "0,0,0,2,2,2,2,2,0,1,0,0,1"))
            (rule "replace_known_right" (formula "13") (term "0,1,0,0,2,2,2,2,2,0,1,0,0,1") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfAnonEQ" (formula "13") (term "2,2,2,2,2,2,0,1,0,0,1") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "andRight" (formula "13"))
            (branch
               (rule "andRight" (formula "13"))
               (branch
                  (rule "allRight" (formula "13") (inst "sk=fv_28"))
                  (rule "allRight" (formula "13") (inst "sk=ov_28"))
                  (rule "orRight" (formula "13"))
                  (rule "notRight" (formula "13"))
                  (rule "notRight" (formula "14"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                  (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectOfStore" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectOfMemset" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectOfStore" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectOfStore" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectOfStore" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectOfCreate" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                  (rule "castDel" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (builtin "Use Dependency Contract" (formula "1") (term "2") (ifInst ""  (formula "11") (term "2,0,1,0,0,0")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                  (rule "wellFormedStorePrimitive" (formula "12") (term "1,0,0"))
                  (rule "wellFormedAnonEQ" (formula "12") (term "0,0,0") (ifseqformula "8"))
                  (rule "commuteUnion" (formula "12") (term "1,1,1,0,1,0"))
                  (rule "commuteUnion" (formula "12") (term "1,1,0,1,0"))
                  (rule "commuteUnion" (formula "12") (term "0,1,0"))
                  (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "7")))
                  (rule "disjointToElementOf" (formula "12") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                  (rule "associativeLawUnion" (formula "12") (term "0,2,0,0,0,0,1,0"))
                  (rule "associativeLawUnion" (formula "12") (term "0,0,2,0,0,0,0,1,0"))
                  (rule "wellFormedMemsetArrayPrimitive" (formula "12") (term "0,0"))
                  (rule "wellFormedStorePrimitive" (formula "12") (term "0,0"))
                  (rule "wellFormedStorePrimitive" (formula "12") (term "0,0"))
                  (rule "wellFormedStorePrimitive" (formula "12") (term "0,0"))
                  (rule "wellFormedCreate" (formula "12") (term "0,0"))
                  (rule "wellFormedAnonEQ" (formula "12") (term "0,0") (ifseqformula "8"))
                  (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "7")))
                  (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,0"))
                  (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,0,0"))
                  (rule "elementOfArrayRange" (formula "12") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "12") (term "0,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "1,0,0,0,0"))
                  (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0"))
                  (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "1,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0,0,0,0,0,0"))
                  (rule "nnf_notEx" (formula "12") (term "1,0,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,1,0,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_or_antiSymm1" (formula "12") (term "0,1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "typeEqDerived2" (formula "12") (term "0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "castDel" (formula "12") (term "0,1,0,1,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,1,0,1,0,0,0,0,0,0,0"))
                  (rule "cut_direct" (formula "12") (term "1"))
                  (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_7), x_arr_7, <transient>, 0), x_arr_7, <transactionConditionallyUpdated>, FALSE), x_arr_7, <initialized>, FALSE), arrayRange(x_arr_7, 0, 0), 0), x_arr_7, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "true_left" (formula "13"))
                     (rule "applyEq" (formula "1") (term "2") (ifseqformula "12"))
                     (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                     (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,1") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_7), x_arr_7, <transient>, 0), x_arr_7, <transactionConditionallyUpdated>, FALSE), x_arr_7, <initialized>, FALSE), arrayRange(x_arr_7, 0, 0), 0), x_arr_7, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "allRight" (formula "12") (inst "sk=ov_29"))
                     (rule "allRight" (formula "12") (inst "sk=fv_29"))
                     (rule "orRight" (formula "12"))
                     (rule "notRight" (formula "13"))
                     (rule "andRight" (formula "13"))
                     (branch
                        (rule "andRight" (formula "13"))
                        (branch
                           (rule "andRight" (formula "13"))
                           (branch
                              (rule "orRight" (formula "13"))
                              (rule "notRight" (formula "14"))
                              (rule "notRight" (formula "14"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch
                              (rule "orRight" (formula "13"))
                              (rule "notRight" (formula "13"))
                              (rule "notRight" (formula "14"))
                              (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch
                           (rule "orRight" (formula "13"))
                           (rule "notRight" (formula "13"))
                           (rule "notRight" (formula "14"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                     (branch
                        (rule "orRight" (formula "13"))
                        (rule "notRight" (formula "14"))
                        (rule "notRight" (formula "14"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                        (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
               )
               (branch
                  (rule "allRight" (formula "13") (inst "sk=ov_25"))
                  (rule "allRight" (formula "13") (inst "sk=fv_25"))
                  (rule "orRight" (formula "13"))
                  (rule "notRight" (formula "13"))
                  (rule "orRight" (formula "14"))
                  (rule "cut_direct" (formula "14") (term "0,0"))
                  (branch "CUT: ov_25 = null TRUE"
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "false_right" (formula "15"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "1"))
                     (rule "allLeft" (formula "10") (inst "t=fv_25"))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "notLeft" (formula "10"))
                     (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (builtin "Use Dependency Contract" (formula "2") (term "2") (ifInst ""  (formula "12") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                     (rule "wellFormedStorePrimitive" (formula "12") (term "1,0,0"))
                     (rule "wellFormedAnonEQ" (formula "12") (term "0,0,0") (ifseqformula "8"))
                     (rule "commuteUnion" (formula "12") (term "0,1,0"))
                     (rule "commuteUnion" (formula "12") (term "1,0,0,1,0"))
                     (rule "commuteUnion" (formula "12") (term "0,1,0,0,1,0"))
                     (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "7")))
                     (rule "disjointToElementOf" (formula "12") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                     (rule "associativeLawUnion" (formula "12") (term "0,2,0,0,0,0,1,0"))
                     (rule "associativeLawUnion" (formula "12") (term "0,0,2,0,0,0,0,1,0"))
                     (rule "wellFormedMemsetArrayPrimitive" (formula "12") (term "0,0"))
                     (rule "wellFormedStorePrimitive" (formula "12") (term "0,0"))
                     (rule "wellFormedStorePrimitive" (formula "12") (term "0,0"))
                     (rule "wellFormedStorePrimitive" (formula "12") (term "0,0"))
                     (rule "wellFormedCreate" (formula "12") (term "0,0"))
                     (rule "wellFormedAnonEQ" (formula "12") (term "0,0") (ifseqformula "8"))
                     (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "7")))
                     (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,0"))
                     (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,0,0"))
                     (rule "elementOfArrayRange" (formula "12") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "nnf_notOr" (formula "12") (term "0,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "1,0,0,0,0"))
                     (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0"))
                     (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "1,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0,0,0,0,0,0"))
                     (rule "nnf_notEx" (formula "12") (term "1,0,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,1,0,1,0,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_or_antiSymm1" (formula "12") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                     (rule "typeEqDerived2" (formula "12") (term "0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "add_literals" (formula "12") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                     (rule "castDel" (formula "12") (term "0,1,0,1,0,0,0,0,0,0,0"))
                     (rule "cut_direct" (formula "12") (term "1"))
                     (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_7), x_arr_7, <transient>, 0), x_arr_7, <transactionConditionallyUpdated>, FALSE), x_arr_7, <initialized>, FALSE), arrayRange(x_arr_7, 0, 0), 0), x_arr_7, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "applyEq" (formula "2") (term "2") (ifseqformula "12"))
                        (rule "close" (formula "13") (ifseqformula "2"))
                     )
                     (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_7), x_arr_7, <transient>, 0), x_arr_7, <transactionConditionallyUpdated>, FALSE), x_arr_7, <initialized>, FALSE), arrayRange(x_arr_7, 0, 0), 0), x_arr_7, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "allRight" (formula "12") (inst "sk=ov_27"))
                        (rule "allRight" (formula "12") (inst "sk=fv_27"))
                        (rule "orRight" (formula "12"))
                        (rule "notRight" (formula "13"))
                        (rule "andRight" (formula "13"))
                        (branch
                           (rule "andRight" (formula "13"))
                           (branch
                              (rule "andRight" (formula "13"))
                              (branch
                                 (rule "orRight" (formula "13"))
                                 (rule "notRight" (formula "13"))
                                 (rule "notRight" (formula "14"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch
                                 (rule "orRight" (formula "13"))
                                 (rule "notRight" (formula "14"))
                                 (rule "notRight" (formula "14"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch
                              (rule "orRight" (formula "13"))
                              (rule "notRight" (formula "14"))
                              (rule "notRight" (formula "14"))
                              (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch
                           (rule "orRight" (formula "13"))
                           (rule "notRight" (formula "14"))
                           (rule "notRight" (formula "14"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                  )
                  (branch "CUT: ov_25 = null FALSE"
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "notRight" (formula "15"))
                     (rule "allLeft" (formula "11") (inst "t=ov_25"))
                     (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "allLeft" (formula "11") (inst "t=fv_25"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                     (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "selectOfStore" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "selectOfMemset" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "selectOfStore" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "selectOfStore" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "selectOfStore" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "selectOfCreate" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")))
                     (rule "selectCreatedOfAnonEQ" (formula "2") (term "2,0") (ifseqformula "9"))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                     (rule "true_left" (formula "2"))
                     (builtin "Use Dependency Contract" (formula "2") (term "2") (ifInst ""  (formula "13") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                     (rule "wellFormedStorePrimitive" (formula "13") (term "1,0,0"))
                     (rule "wellFormedAnonEQ" (formula "13") (term "0,0,0") (ifseqformula "8"))
                     (rule "commuteUnion" (formula "13") (term "1,1,0,1,0"))
                     (rule "commuteUnion" (formula "13") (term "0,1,0"))
                     (rule "commuteUnion" (formula "13") (term "0,1,0,0,1,0"))
                     (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "7")))
                     (rule "associativeLawUnion" (formula "13") (term "0,0,1,0"))
                     (rule "associativeLawUnion" (formula "13") (term "0,0,0,1,0"))
                     (rule "disjointToElementOf" (formula "13") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                     (rule "wellFormedMemsetArrayPrimitive" (formula "13") (term "0,0"))
                     (rule "wellFormedStorePrimitive" (formula "13") (term "0,0"))
                     (rule "wellFormedStorePrimitive" (formula "13") (term "0,0"))
                     (rule "wellFormedStorePrimitive" (formula "13") (term "0,0"))
                     (rule "wellFormedCreate" (formula "13") (term "0,0"))
                     (rule "wellFormedAnonEQ" (formula "13") (term "0,0") (ifseqformula "8"))
                     (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "6")))
                     (rule "elementOfUnion" (formula "13") (term "0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "elementOfUnion" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "13") (term "1,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "elementOfUnion" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "13") (term "1,0,0,0,0,0,0"))
                     (rule "elementOfUnion" (formula "13") (term "0,0,0,0,0,0,0"))
                     (rule "elementOfArrayRange" (formula "13") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "13") (term "1,0,0,0,0,0,0,0"))
                     (rule "nnf_notOr" (formula "13") (term "0,0,0,0"))
                     (rule "nnf_notOr" (formula "13") (term "0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "1,0,0,0,0"))
                     (rule "nnf_notOr" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "1,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,0,0"))
                     (rule "nnf_notEx" (formula "13") (term "1,0,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,1,0,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,1,0,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_or_antiSymm1" (formula "13") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,1,0,1,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "typeEqDerived2" (formula "13") (term "0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "castDel" (formula "13") (term "0,1,0,1,0,0,0,0,0,0,0"))
                     (rule "cut_direct" (formula "13") (term "1"))
                     (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_7), x_arr_7, <transient>, 0), x_arr_7, <transactionConditionallyUpdated>, FALSE), x_arr_7, <initialized>, FALSE), arrayRange(x_arr_7, 0, 0), 0), x_arr_7, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "2") (term "2") (ifseqformula "13"))
                        (rule "close" (formula "14") (ifseqformula "2"))
                     )
                     (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_7), x_arr_7, <transient>, 0), x_arr_7, <transactionConditionallyUpdated>, FALSE), x_arr_7, <initialized>, FALSE), arrayRange(x_arr_7, 0, 0), 0), x_arr_7, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "allRight" (formula "13") (inst "sk=ov_26"))
                        (rule "allRight" (formula "13") (inst "sk=fv_26"))
                        (rule "orRight" (formula "13"))
                        (rule "notRight" (formula "14"))
                        (rule "andRight" (formula "14"))
                        (branch
                           (rule "andRight" (formula "14"))
                           (branch
                              (rule "andRight" (formula "14"))
                              (branch
                                 (rule "orRight" (formula "14"))
                                 (rule "notRight" (formula "15"))
                                 (rule "notRight" (formula "15"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "21")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch
                                 (rule "orRight" (formula "14"))
                                 (rule "notRight" (formula "14"))
                                 (rule "notRight" (formula "15"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "21")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch
                              (rule "orRight" (formula "14"))
                              (rule "notRight" (formula "14"))
                              (rule "notRight" (formula "15"))
                              (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "21")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch
                           (rule "orRight" (formula "14"))
                           (rule "notRight" (formula "14"))
                           (rule "notRight" (formula "15"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "21")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                  )
               )
            )
            (branch
               (rule "allRight" (formula "13") (inst "sk=f_1"))
               (rule "allRight" (formula "13") (inst "sk=o_1"))
               (rule "orRight" (formula "13"))
               (rule "orRight" (formula "13"))
               (rule "eqSymm" (formula "15") (term "0,0,0,1,0,0,2,0"))
               (rule "replace_known_right" (formula "15") (term "1,0,2,2,2,2,2,2,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "13")))
               (rule "commute_and" (formula "15") (term "0,0"))
               (rule "commute_and" (formula "15") (term "0,2,2,2,0"))
               (rule "commute_and" (formula "15") (term "0,2,2,0"))
               (rule "commute_and" (formula "15") (term "0,2,2,2,2,2,0"))
               (rule "commute_and" (formula "15") (term "0,2,2,2,2,0"))
               (rule "commute_and" (formula "15") (term "0,0,1,0,0,2,0"))
               (rule "commute_and_2" (formula "15") (term "0,1,0,0,2,0"))
               (rule "commute_and" (formula "15") (term "0,0,1,0,0,2,0"))
               (rule "inEqSimp_and_antiSymm0" (formula "15") (term "0,0,1,0,0,2,0"))
               (rule "commute_and" (formula "15") (term "0,1,0,0,2,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "typeEqDerived2" (formula "15") (term "0,1,1,0,0,2,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "castDel" (formula "15") (term "0,0,1,0,0,2,0"))
               (rule "eqSymm" (formula "15") (term "1,0,0,2,0"))
               (rule "commute_and" (formula "15") (term "0,0,2,0"))
               (rule "commute_and_2" (formula "15") (term "0,2,0"))
               (rule "commute_and" (formula "15") (term "0,0,2,0"))
               (rule "applyEq_and_gen2" (formula "15") (term "0,0,2,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "cut_direct" (formula "14") (term "0,0"))
               (branch "CUT: o_1 = null TRUE"
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "false_right" (formula "15"))
                  (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "1"))
                  (rule "applyEqRigid" (formula "15") (term "0,1,0,2,2,2,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "15") (term "1,0,2,2,2,0"))
                  (rule "replace_known_right" (formula "15") (term "1,0,2,2,2,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEqRigid" (formula "15") (term "0,1,0,2,2,2,2,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "15") (term "1,0,2,2,2,2,0"))
                  (rule "replace_known_right" (formula "15") (term "1,0,2,2,2,2,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEq" (formula "15") (term "0,1,0,2,2,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "15") (term "1,0,2,2,0"))
                  (rule "replace_known_right" (formula "15") (term "1,0,2,2,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEqRigid" (formula "15") (term "1,1") (ifseqformula "1"))
                  (rule "applyEq" (formula "15") (term "0,1,0,2,2,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "15") (term "1,0,2,2,0"))
                  (rule "replace_known_right" (formula "15") (term "1,0,2,2,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEq" (formula "15") (term "0,1,0,2,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "15") (term "1,0,2,0"))
                  (rule "replace_known_right" (formula "15") (term "1,0,2,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEqRigid" (formula "15") (term "0,1,0,0") (ifseqformula "1"))
                  (rule "eqSymm" (formula "15") (term "1,0,0"))
                  (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "applyEqRigid" (formula "15") (term "1,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "closeTrue" (formula "15"))
               )
               (branch "CUT: o_1 = null FALSE"
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "notRight" (formula "15"))
                  (rule "ifthenelse_split" (formula "16") (term "0"))
                  (branch "f_1 = <initialized> & o_1 = x_arr_7 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "18"))
                     (rule "applyEq" (formula "18") (term "2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                     (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                     (rule "close" (formula "13") (ifseqformula "3"))
                  )
                  (branch "f_1 = <initialized> & o_1 = x_arr_7 FALSE"
                     (rule "replace_known_right" (formula "17") (term "0,2,0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "allLeft" (formula "10") (inst "t=o_1"))
                     (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "ifthenelse_split" (formula "18") (term "0"))
                     (branch "f_1 = arr(0) & o_1 = x_arr_7 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "20"))
                        (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "false_right" (formula "18"))
                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                        (rule "close" (formula "14") (ifseqformula "3"))
                     )
                     (branch "f_1 = arr(0) & o_1 = x_arr_7 FALSE"
                        (rule "allLeft" (formula "10") (inst "t=f_1"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "ifthenelse_split" (formula "20") (term "2,0"))
                        (branch "f_1 = <transient> & o_1 = x_arr_7 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "false_right" (formula "21"))
                           (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "2"))
                           (rule "applyEqRigid" (formula "21") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "eqSymm" (formula "21"))
                           (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                           (rule "close" (formula "15") (ifseqformula "3"))
                        )
                        (branch "f_1 = <transient> & o_1 = x_arr_7 FALSE"
                           (rule "cut_direct" (formula "18") (term "1"))
                           (branch "CUT: o_1 = x_arr_7 TRUE"
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "replace_known_left" (formula "22") (term "1,0,2,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")))
                              (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "22") (term "1,2,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                              (rule "close" (formula "14") (ifseqformula "2"))
                           )
                           (branch "CUT: o_1 = x_arr_7 FALSE"
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "false_right" (formula "19"))
                              (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")))
                              (rule "closeTrue" (formula "21"))
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Null Reference (newObject_1 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "result_0 <= -1 FALSE"
      (rule "inEqSimp_leqRight" (formula "7"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "arrayCreation" (formula "8") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "dim0"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "ifUnfold" (formula "8") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1"))
      (rule "less_than_comparison_simple" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,1,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,1,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,1,0"))
      (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0,1,0") (ifseqformula "1"))
      (rule "qeq_literals" (formula "8") (term "0,0,0,1,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "if" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (builtin "Use Dependency Contract" (formula "7") (term "2,0,1,0,0,0") (ifInst ""  (formula "8") (term "2,0,0,0,0,0,1,0,0,0,1")) (ifInst ""  (formula "4")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "8") (term "1") (inst "#v0=x_arr_1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr_1"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "length_1"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_<createArray>"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "newObject"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "8") (term "1") (inst "#v0=x_arr_2"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_arr_2"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "length_2"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "allocateInstanceWithLength" (formula "8"))
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "5"))
      (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,0,0,1,1,0") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "orRight" (formula "10"))
      (rule "blockEmpty" (formula "13") (term "1"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "arrayLengthIsAShort" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
      (rule "methodCall" (formula "13"))
      (branch "Normal Execution (newObject != null )"
         (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createArrayHelper>"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallWithinClass" (formula "13") (term "1"))
         (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "arrayInitialisation" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "applyEq" (formula "13") (term "2,1,0,1,0") (ifseqformula "1"))
         (rule "methodCallEmpty" (formula "13") (term "1"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallReturnIgnoreResult" (formula "13") (term "1"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "methodCallReturn" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "methodCallEmpty" (formula "13") (term "1"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "blockEmpty" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "returnUnfold" (formula "13") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_3"))
         (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_untrustedInputMessage_helper,result_1,exc_1,heapAfter_untrustedInputMessage_helper,anon_heap_untrustedInputMessage_helper") (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::untrustedInputMessage_helper([B)].JML normal_behavior operation contract.0"))
         (branch "Post (untrustedInputMessage_helper)"
            (builtin "One Step Simplification" (formula "11"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "andLeft" (formula "11"))
            (rule "selectCreatedOfAnonEQ" (formula "12") (term "0,0,1,0") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "14"))
            (rule "notLeft" (formula "15"))
            (rule "assignment" (formula "20") (term "1"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "commuteUnion" (formula "14") (term "1"))
            (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "disjointToElementOf" (formula "13") (inst "ov=ov") (inst "fv=fv"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "subsetToElementOf" (formula "14") (inst "ov=ov") (inst "fv=fv"))
            (rule "selectOfStore" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "elementOfUnion" (formula "14") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "selectOfMemset" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "14") (term "0,0,1,0,1,0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "selectOfStore" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfMemset" (formula "14") (term "0,0,1,0,1,0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "selectOfStore" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "14") (term "0,0,1,0,1,0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "selectOfStore" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "14") (term "0,0,1,0,1,0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "selectOfCreate" (formula "12") (term "0,0"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "19")))
            (rule "selectCreatedOfAnonEQ" (formula "12") (term "2,0,0") (ifseqformula "6"))
            (rule "castDel" (formula "12") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "selectOfStore" (formula "14") (term "0,0,1,0,1,0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "selectOfCreate" (formula "14") (term "0,0,1,0,1,0,0"))
            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "19")))
            (rule "selectCreatedOfAnonEQ" (formula "14") (term "2,0,0,1,0,1,0,0") (ifseqformula "6"))
            (rule "castDel" (formula "14") (term "1,0,0,1,0,1,0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "eqSymm" (formula "14") (term "0,0,1,0,1,0,0"))
            (rule "nnf_imp2or" (formula "14") (term "0,0"))
            (rule "nnf_notOr" (formula "14") (term "1,0,1,0,0"))
            (rule "nnf_notOr" (formula "14") (term "1,1,0,1,0,0"))
            (rule "swapQuantifiersAll" (formula "13"))
            (rule "commute_or" (formula "14") (term "1,0,0"))
            (rule "commute_or" (formula "13") (term "0,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "castDel" (formula "13") (term "0,0,0,0"))
            (rule "instanceof_static_type" (formula "13") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "shift_paren_and" (formula "14") (term "1,1,1,0,0"))
            (rule "cnf_rightDist" (formula "14") (term "1,0,0"))
            (rule "commute_or" (formula "14") (term "1,1,0,0"))
            (rule "cnf_rightDist" (formula "14") (term "1,1,0,0"))
            (rule "commute_or" (formula "14") (term "1,1,1,0,0"))
            (rule "cnf_rightDist" (formula "14") (term "0,1,1,0,0"))
            (rule "commute_or" (formula "14") (term "1,0,1,1,0,0"))
            (rule "cnf_rightDist" (formula "14") (term "0,0"))
            (rule "distr_forallAnd" (formula "14") (term "0"))
            (rule "distr_forallAnd" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "commute_or" (formula "15") (term "0,0"))
            (rule "shift_paren_or" (formula "14") (term "0,0"))
            (rule "swapQuantifiersAll" (formula "14"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "typeEqDerived2" (formula "14") (term "0,0,1,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "castDel" (formula "14") (term "0,0,0,0"))
            (rule "castDel" (formula "14") (term "0,1,0"))
            (rule "cnf_rightDist" (formula "15") (term "0,0"))
            (rule "distr_forallAnd" (formula "15") (term "0"))
            (rule "distr_forallAnd" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "commute_or_2" (formula "16") (term "0,0"))
            (rule "commute_or" (formula "16") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "15") (term "0,0"))
            (rule "distr_forallAnd" (formula "15") (term "0"))
            (rule "distr_forallAnd" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "commute_or_2" (formula "16") (term "0,0"))
            (rule "commute_or" (formula "16") (term "0,0,0"))
            (rule "shift_paren_or" (formula "15") (term "0,0"))
            (rule "swapQuantifiersAll" (formula "15"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "castDel" (formula "15") (term "0,0,0,0,0"))
            (rule "castDel" (formula "15") (term "0,1,0,0"))
            (rule "instanceof_static_type" (formula "15") (term "0,0,1,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "methodCallReturn" (formula "23") (term "1"))
            (rule "assignment" (formula "23") (term "1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "methodCallEmpty" (formula "23") (term "1"))
            (rule "tryEmpty" (formula "23") (term "1"))
            (rule "emptyModality" (formula "23") (term "1"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "19")))
            (rule "eqSymm" (formula "23") (term "1,0,0,1"))
            (rule "selectOfAnonEQ" (formula "23") (term "0,1,0,0,1") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "selectOfStore" (formula "23") (term "2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "castDel" (formula "23") (term "1,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "23") (term "0,0,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "23") (term "1,0,2,0,1,0,0,1"))
            (rule "selectOfMemset" (formula "23") (term "2,2,0,1,0,0,1"))
            (rule "elementOfArrayRange" (formula "23") (term "0,0,2,2,0,1,0,0,1") (inst "iv=iv"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1,0,0,2,2,0,1,0,0,1"))
            (rule "elementOfUnion" (formula "23") (term "0,0,0,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "selectOfStore" (formula "23") (term "2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "castDel" (formula "23") (term "1,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "23") (term "1,0,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "23") (term "0,0,2,2,2,0,1,0,0,1"))
            (rule "selectOfStore" (formula "23") (term "0,0,1,1,0,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "selectOfStore" (formula "23") (term "2,2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "castDel" (formula "23") (term "1,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "23") (term "1,0,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "23") (term "0,0,2,2,2,2,0,1,0,0,1"))
            (rule "selectOfStore" (formula "23") (term "2,2,2,2,2,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "castDel" (formula "23") (term "1,2,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "23") (term "0,0,2,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "23") (term "1,0,2,2,2,2,2,0,1,0,0,1"))
            (rule "selectOfMemset" (formula "23") (term "0,0,1,1,0,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "selectOfStore" (formula "23") (term "0,0,1,1,0,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "selectOfCreate" (formula "23") (term "2,2,2,2,2,2,0,1,0,0,1"))
            (rule "castDel" (formula "23") (term "1,2,2,2,2,2,2,0,1,0,0,1"))
            (rule "eqSymm" (formula "23") (term "0,0,0,2,2,2,2,2,2,0,1,0,0,1"))
            (rule "replace_known_right" (formula "23") (term "0,1,0,0,2,2,2,2,2,2,0,1,0,0,1") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "selectOfStore" (formula "23") (term "0,0,1,1,0,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "selectOfStore" (formula "23") (term "0,0,1,1,0,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "selectOfCreate" (formula "23") (term "0,0,1,1,0,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "22")))
            (rule "selectCreatedOfAnonEQ" (formula "23") (term "2,0,0,1,1,0,0,1,0,0,1") (ifseqformula "6"))
            (rule "castDel" (formula "23") (term "1,0,0,1,1,0,0,1,0,0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "eqSymm" (formula "23") (term "0,0,1,1,0,0,1,0,0,1"))
            (rule "selectOfAnonEQ" (formula "23") (term "2,2,2,2,2,2,2,0,1,0,0,1") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "nnf_notOr" (formula "23") (term "1,1,0,0,1,0,0,1"))
            (rule "nnf_notOr" (formula "23") (term "1,1,1,0,0,1,0,0,1"))
            (rule "andRight" (formula "23"))
            (branch "Case 1"
               (rule "andRight" (formula "23"))
               (branch "Case 1"
                  (rule "allRight" (formula "23") (inst "sk=fv_24"))
                  (rule "allRight" (formula "23") (inst "sk=ov_24"))
                  (rule "orRight" (formula "23"))
                  (rule "notRight" (formula "24"))
                  (rule "notRight" (formula "24"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "allLeft" (formula "15") (inst "t=fv_24"))
                  (rule "notLeft" (formula "15"))
                  (rule "close" (formula "21") (ifseqformula "2"))
               )
               (branch "Case 2"
                  (rule "allRight" (formula "23") (inst "sk=ov_11"))
                  (rule "allRight" (formula "23") (inst "sk=fv_11"))
                  (rule "orRight" (formula "23"))
                  (rule "orRight" (formula "24"))
                  (rule "notRight" (formula "23"))
                  (rule "cut_direct" (formula "13") (term "0,0"))
                  (branch "CUT: x_arr_2 = result_1 TRUE"
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "applyEq" (formula "16") (term "1,0,0,0,0,0,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "15") (term "1,0,0,0,0,0,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "15") (term "1,0,0,0,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                     (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "17") (term "1,0,0,0,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "15") (term "1,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "16") (term "1,0,0,0,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "16") (term "1,0,0,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "15") (term "1,0,0,0,0,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "18") (term "1,0,0,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "15") (term "0,1,0,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "1,0,0,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "18") (term "1,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "1,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "18") (term "1,0,0,0,0,0,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "1,0,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "16") (term "1,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "17") (term "1,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "1,0,0,0,0,0,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "16") (term "1,0,0,0,0,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "18") (term "1,0,0,0,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "1,0,0,0,0,0,0,0,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "1,0,0,0,0,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "0,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "17") (term "1,0,0,0,2,1,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "1,0,0,0,0,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "12") (term "1,0,0,0,0,0,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "15") (term "1,0,0,0,2,1,0") (ifseqformula "13"))
                     (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "13"))
                     (rule "cut_direct" (formula "23") (term "0,0"))
                     (branch "CUT: ov_11 = null TRUE"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "false_right" (formula "24"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "allLeft" (formula "16") (inst "t=fv_11"))
                        (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "allLeft" (formula "10") (inst "t=fv_11"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                        (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "16"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (builtin "Use Dependency Contract" (formula "20") (term "2,1,0,0,0") (ifInst ""  (formula "22") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                        (rule "wellFormedStorePrimitive" (formula "22") (term "1,0,0"))
                        (rule "wellFormedAnonEQ" (formula "22") (term "0,0,0") (ifseqformula "8"))
                        (rule "commuteUnion" (formula "22") (term "1,1,1,0,1,0"))
                        (rule "commuteUnion" (formula "22") (term "1,1,0,1,0"))
                        (rule "commuteUnion" (formula "22") (term "0,1,0"))
                        (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                        (rule "disjointToElementOf" (formula "22") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                        (rule "associativeLawUnion" (formula "22") (term "0,2,0,0,0,0,1,0"))
                        (rule "associativeLawUnion" (formula "22") (term "0,0,2,0,0,0,0,1,0"))
                        (rule "wellFormedMemsetArrayPrimitive" (formula "22") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                        (rule "wellFormedCreate" (formula "22") (term "0,0"))
                        (rule "wellFormedAnonEQ" (formula "22") (term "0,0") (ifseqformula "8"))
                        (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                        (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0"))
                        (rule "elementOfArrayRange" (formula "22") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0,0"))
                        (rule "nnf_notOr" (formula "22") (term "0,0,0,0"))
                        (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0,0"))
                        (rule "nnf_notEx" (formula "22") (term "1,0,0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "cut_direct" (formula "22") (term "1"))
                        (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "22"))
                           (rule "applyEq" (formula "16") (term "2") (ifseqformula "22"))
                           (rule "close" (formula "23") (ifseqformula "16"))
                        )
                        (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "notLeft" (formula "22"))
                           (rule "allRight" (formula "22") (inst "sk=ov_23"))
                           (rule "allRight" (formula "22") (inst "sk=fv_23"))
                           (rule "orRight" (formula "22"))
                           (rule "notRight" (formula "23"))
                           (rule "eqSymm" (formula "23") (term "0,0,0,0,1,0,0,0"))
                           (rule "andRight" (formula "23"))
                           (branch
                              (rule "andRight" (formula "23"))
                              (branch
                                 (rule "andRight" (formula "23"))
                                 (branch
                                    (rule "orRight" (formula "23"))
                                    (rule "notRight" (formula "23"))
                                    (rule "allRight" (formula "24") (inst "sk=iv_22"))
                                    (rule "orRight" (formula "24"))
                                    (rule "orRight" (formula "24"))
                                    (rule "notRight" (formula "24"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "inEqSimp_geqRight" (formula "26"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                    (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch
                                    (rule "orRight" (formula "23"))
                                    (rule "notRight" (formula "24"))
                                    (rule "notRight" (formula "24"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch
                                 (rule "orRight" (formula "23"))
                                 (rule "notRight" (formula "23"))
                                 (rule "notRight" (formula "24"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch
                              (rule "orRight" (formula "23"))
                              (rule "notRight" (formula "24"))
                              (rule "notRight" (formula "24"))
                              (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                     (branch "CUT: ov_11 = null FALSE"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "notRight" (formula "24"))
                        (rule "allLeft" (formula "11") (inst "t=ov_11"))
                        (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "allLeft" (formula "19") (inst "t=ov_11"))
                        (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allLeft" (formula "19") (inst "t=fv_11"))
                        (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allLeft" (formula "11") (inst "t=fv_11"))
                        (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "notLeft" (formula "11"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "19"))
                        (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "selectOfStore" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "selectOfMemset" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "selectOfStore" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "selectOfStore" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "selectOfStore" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "selectOfCreate" (formula "19") (term "0"))
                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "26")))
                        (rule "selectCreatedOfAnonEQ" (formula "19") (term "2,0") (ifseqformula "8"))
                        (rule "castDel" (formula "19") (term "1,0"))
                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
                        (rule "true_left" (formula "19"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                        (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,1") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "29")))
                        (rule "selectOfStore" (formula "2") (term "0,0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "selectOfMemset" (formula "2") (term "0,0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "selectOfStore" (formula "2") (term "0,0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "selectOfStore" (formula "2") (term "0,0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "selectOfStore" (formula "2") (term "0,0"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "selectOfCreate" (formula "2") (term "0,0"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                        (rule "selectCreatedOfAnonEQ" (formula "2") (term "2,0,0") (ifseqformula "9"))
                        (rule "castDel" (formula "2") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                        (rule "true_left" (formula "2"))
                        (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                        (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (builtin "Use Dependency Contract" (formula "22") (term "2,1,0,0,0") (ifInst ""  (formula "24") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                        (rule "wellFormedStorePrimitive" (formula "24") (term "1,0,0"))
                        (rule "wellFormedAnonEQ" (formula "24") (term "0,0,0") (ifseqformula "8"))
                        (rule "commuteUnion" (formula "24") (term "0,1,0"))
                        (rule "commuteUnion" (formula "24") (term "1,0,0,1,0"))
                        (rule "commuteUnion" (formula "24") (term "0,1,0,0,1,0"))
                        (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "7")))
                        (rule "disjointToElementOf" (formula "24") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                        (rule "associativeLawUnion" (formula "24") (term "0,2,0,0,0,0,1,0"))
                        (rule "associativeLawUnion" (formula "24") (term "0,0,2,0,0,0,0,1,0"))
                        (rule "wellFormedMemsetArrayPrimitive" (formula "24") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                        (rule "wellFormedCreate" (formula "24") (term "0,0"))
                        (rule "wellFormedAnonEQ" (formula "24") (term "0,0") (ifseqformula "8"))
                        (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "6")))
                        (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0,0"))
                        (rule "elementOfArrayRange" (formula "24") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                        (rule "nnf_notOr" (formula "24") (term "0,0,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0"))
                        (rule "nnf_notOr" (formula "24") (term "0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0,0"))
                        (rule "nnf_notOr" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0,0,0"))
                        (rule "nnf_notEx" (formula "24") (term "1,0,0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "24") (term "1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "cut_direct" (formula "24") (term "1"))
                        (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "21") (term "2,1,0,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "22") (term "2,1,0,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "20") (term "2,1,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "19") (term "2") (ifseqformula "24"))
                           (rule "close" (formula "25") (ifseqformula "19"))
                        )
                        (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "notLeft" (formula "24"))
                           (rule "allRight" (formula "24") (inst "sk=ov_22"))
                           (rule "allRight" (formula "24") (inst "sk=fv_22"))
                           (rule "orRight" (formula "24"))
                           (rule "notRight" (formula "25"))
                           (rule "eqSymm" (formula "25") (term "0,0,0,0,1,0,0,0"))
                           (rule "andRight" (formula "25"))
                           (branch
                              (rule "andRight" (formula "25"))
                              (branch
                                 (rule "andRight" (formula "25"))
                                 (branch
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "25"))
                                    (rule "allRight" (formula "26") (inst "sk=iv_21"))
                                    (rule "orRight" (formula "26"))
                                    (rule "orRight" (formula "26"))
                                    (rule "notRight" (formula "26"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "inEqSimp_geqRight" (formula "28"))
                                    (rule "inEqSimp_leqRight" (formula "28"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                    (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "32")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "26"))
                                    (rule "notRight" (formula "26"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch
                                 (rule "orRight" (formula "25"))
                                 (rule "notRight" (formula "26"))
                                 (rule "notRight" (formula "26"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch
                              (rule "orRight" (formula "25"))
                              (rule "notRight" (formula "26"))
                              (rule "notRight" (formula "26"))
                              (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                  )
                  (branch "CUT: x_arr_2 = result_1 FALSE"
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "cut_direct" (formula "25") (term "0,0"))
                     (branch "CUT: ov_11 = null TRUE"
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "false_right" (formula "26"))
                        (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "allLeft" (formula "16") (inst "t=fv_11"))
                        (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "allLeft" (formula "10") (inst "t=fv_11"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "cut_direct" (formula "14") (term "1,0"))
                        (branch "CUT: boolean::select(anon_heap_untrustedInput, result_1, <created>) = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "16"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (builtin "Use Dependency Contract" (formula "18") (term "2,0,0,0") (ifInst ""  (formula "20") (term "2,1,0,0,0")) (ifInst ""  (formula "13")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                           (builtin "Use Dependency Contract" (formula "20") (term "2,1,0,0,0") (ifInst ""  (formula "22") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                           (rule "wellFormedStorePrimitive" (formula "22") (term "1,0,0"))
                           (rule "wellFormedAnonEQ" (formula "22") (term "0,0,0") (ifseqformula "8"))
                           (rule "commuteUnion" (formula "22") (term "1,1,1,0,1,0"))
                           (rule "commuteUnion" (formula "22") (term "1,1,0,1,0"))
                           (rule "commuteUnion" (formula "22") (term "0,1,0"))
                           (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                           (rule "associativeLawUnion" (formula "22") (term "0,0,1,0"))
                           (rule "associativeLawUnion" (formula "22") (term "0,0,0,1,0"))
                           (rule "disjointToElementOf" (formula "22") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                           (rule "wellFormedMemsetArrayPrimitive" (formula "22") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                           (rule "wellFormedCreate" (formula "22") (term "0,0"))
                           (rule "wellFormedAnonEQ" (formula "22") (term "0,0") (ifseqformula "8"))
                           (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                           (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0,0"))
                           (rule "elementOfArrayRange" (formula "22") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                           (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "22") (term "0,0,0,0"))
                           (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0,0"))
                           (rule "nnf_notEx" (formula "22") (term "1,0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "cut_direct" (formula "22") (term "1"))
                           (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "19") (term "2,1,0,0,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "16") (term "2") (ifseqformula "22"))
                              (rule "close" (formula "23") (ifseqformula "16"))
                           )
                           (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "notLeft" (formula "22"))
                              (rule "allRight" (formula "22") (inst "sk=ov_21"))
                              (rule "allRight" (formula "22") (inst "sk=fv_21"))
                              (rule "orRight" (formula "22"))
                              (rule "notRight" (formula "23"))
                              (rule "eqSymm" (formula "23") (term "0,0,0,0,1,0,0,0"))
                              (rule "andRight" (formula "23"))
                              (branch
                                 (rule "andRight" (formula "23"))
                                 (branch
                                    (rule "andRight" (formula "23"))
                                    (branch
                                       (rule "orRight" (formula "23"))
                                       (rule "notRight" (formula "23"))
                                       (rule "allRight" (formula "24") (inst "sk=iv_20"))
                                       (rule "orRight" (formula "24"))
                                       (rule "orRight" (formula "24"))
                                       (rule "notRight" (formula "24"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "26"))
                                       (rule "inEqSimp_leqRight" (formula "26"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                       (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                    (branch
                                       (rule "orRight" (formula "23"))
                                       (rule "notRight" (formula "23"))
                                       (rule "notRight" (formula "24"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                       (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "23"))
                                    (rule "notRight" (formula "23"))
                                    (rule "notRight" (formula "24"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch
                                 (rule "orRight" (formula "23"))
                                 (rule "notRight" (formula "24"))
                                 (rule "notRight" (formula "24"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                        )
                        (branch "CUT: boolean::select(anon_heap_untrustedInput, result_1, <created>) = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "cut_direct" (formula "14") (term "0"))
                           (branch "CUT: result_1.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "16"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (builtin "Use Dependency Contract" (formula "19") (term "2,0,0,0,0,0") (ifInst ""  (formula "20") (term "2,1,0,0,0")) (ifInst ""  (formula "13")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (builtin "Use Dependency Contract" (formula "2") (term "2") (ifInst ""  (formula "23") (term "2")) (ifInst ""  (formula "13")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (rule "wellFormedAnonEQ" (formula "22") (term "0,0,0") (ifseqformula "8"))
                              (rule "wellFormedAnonEQ" (formula "22") (term "1,0,0") (ifseqformula "13"))
                              (rule "wellFormedStorePrimitive" (formula "22") (term "0,1,0,0"))
                              (rule "commuteUnion" (formula "22") (term "1,0,1,0"))
                              (rule "commuteUnion" (formula "22") (term "1,1,0,1,0,1,0"))
                              (rule "commuteUnion_2" (formula "22") (term "0,1,0"))
                              (rule "commuteUnion" (formula "22") (term "1,0,1,0,0,1,0"))
                              (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")) (ifInst ""  (formula "12")))
                              (rule "associativeLawUnion" (formula "22") (term "0,0,1,0"))
                              (rule "associativeLawUnion" (formula "22") (term "1,0,0,0,1,0"))
                              (rule "associativeLawUnion" (formula "22") (term "0,0,0,1,0"))
                              (rule "disjointToElementOf" (formula "22") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                              (rule "associativeLawUnion" (formula "22") (term "1,0,0,0,2,0,0,0,0,1,0"))
                              (rule "associativeLawUnion" (formula "22") (term "0,0,0,2,0,0,0,0,1,0"))
                              (rule "associativeLawUnion" (formula "22") (term "0,0,0,0,2,0,0,0,0,1,0"))
                              (rule "wellFormedMemsetArrayPrimitive" (formula "22") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                              (rule "wellFormedCreate" (formula "22") (term "0,0"))
                              (rule "wellFormedAnonEQ" (formula "22") (term "0,0") (ifseqformula "8"))
                              (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                              (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                              (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0,0"))
                              (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0,0,0"))
                              (rule "elementOfArrayRange" (formula "22") (term "1,0,0,0,0,0,0,0,0,0") (inst "iv=iv"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                              (rule "nnf_notOr" (formula "22") (term "0,0,0,0"))
                              (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0"))
                              (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0,0"))
                              (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0,0,0"))
                              (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0,0,0,0"))
                              (rule "nnf_notEx" (formula "22") (term "1,1,0,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                              (rule "cut_direct" (formula "22") (term "1"))
                              (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInputMessage_helper) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "17") (term "2,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "2") (term "2") (ifseqformula "22"))
                                 (rule "close" (formula "24") (ifseqformula "2"))
                              )
                              (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInputMessage_helper) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "allRight" (formula "22") (inst "sk=ov_16"))
                                 (rule "allRight" (formula "22") (inst "sk=fv_16"))
                                 (rule "orRight" (formula "22"))
                                 (rule "notRight" (formula "23"))
                                 (rule "eqSymm" (formula "23") (term "0,0,0,0,1,1,0,0,0,0"))
                                 (rule "cut_direct" (formula "23") (term "0,1"))
                                 (branch "CUT: ov_16 = x_arr_2 TRUE"
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "false_right" (formula "24"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                                    (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,1") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: ov_16 = x_arr_2 FALSE"
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
                                    (rule "notRight" (formula "24"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                                    (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,1") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "cut_direct" (formula "2") (term "0"))
                                    (branch "CUT: ov_16 = null TRUE"
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "25"))
                                       (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "allLeft" (formula "13") (inst "t=fv_16"))
                                       (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "13"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (builtin "Use Dependency Contract" (formula "24") (term "2,1,0,0,0") (ifInst ""  (formula "28") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                       (rule "wellFormedStorePrimitive" (formula "26") (term "1,0,0"))
                                       (rule "wellFormedAnonEQ" (formula "26") (term "0,0,0") (ifseqformula "11"))
                                       (rule "commuteUnion" (formula "26") (term "1,1,0,1,0"))
                                       (rule "commuteUnion" (formula "26") (term "0,1,0"))
                                       (rule "commuteUnion" (formula "26") (term "0,1,0,0,1,0"))
                                       (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "10")))
                                       (rule "disjointToElementOf" (formula "26") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                                       (rule "associativeLawUnion" (formula "26") (term "0,2,0,0,0,0,1,0"))
                                       (rule "associativeLawUnion" (formula "26") (term "0,0,2,0,0,0,0,1,0"))
                                       (rule "wellFormedMemsetArrayPrimitive" (formula "26") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "26") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "26") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "26") (term "0,0"))
                                       (rule "wellFormedCreate" (formula "26") (term "0,0"))
                                       (rule "wellFormedAnonEQ" (formula "26") (term "0,0") (ifseqformula "11"))
                                       (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "9"))
                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "10")))
                                       (rule "elementOfUnion" (formula "26") (term "0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,0,0"))
                                       (rule "elementOfUnion" (formula "26") (term "0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "elementOfUnion" (formula "26") (term "0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,0,0,0"))
                                       (rule "elementOfUnion" (formula "26") (term "0,0,0,0,0,0,0"))
                                       (rule "elementOfArrayRange" (formula "26") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                                       (rule "inEqSimp_commuteLeq" (formula "26") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "26") (term "1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "26") (term "0,0,0,0"))
                                       (rule "nnf_notOr" (formula "26") (term "0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "26") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "26") (term "0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "26") (term "1,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "26") (term "0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "26") (term "1,0,0,0,0,0,0"))
                                       (rule "nnf_notEx" (formula "26") (term "1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "26") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "26") (term "1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "26") (term "0,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "cut_direct" (formula "26") (term "1"))
                                       (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "applyEq" (formula "21") (term "2,1,0") (ifseqformula "26"))
                                          (rule "applyEq" (formula "1") (term "2") (ifseqformula "26"))
                                          (rule "applyEq" (formula "21") (term "2,1,0") (ifseqformula "25"))
                                          (rule "applyEq" (formula "23") (term "2,1,0,0,0") (ifseqformula "25"))
                                          (rule "applyEq" (formula "22") (term "2,1,0,0,0") (ifseqformula "25"))
                                          (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "25"))
                                          (rule "applyEq" (formula "19") (term "2") (ifseqformula "25"))
                                          (rule "close" (formula "28") (ifseqformula "19"))
                                       )
                                       (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "notLeft" (formula "26"))
                                          (rule "allRight" (formula "26") (inst "sk=ov_20"))
                                          (rule "allRight" (formula "26") (inst "sk=fv_20"))
                                          (rule "orRight" (formula "26"))
                                          (rule "notRight" (formula "27"))
                                          (rule "eqSymm" (formula "27") (term "0,0,0,0,1,0,0,0"))
                                          (rule "andRight" (formula "27"))
                                          (branch
                                             (rule "andRight" (formula "27"))
                                             (branch
                                                (rule "andRight" (formula "27"))
                                                (branch
                                                   (rule "orRight" (formula "27"))
                                                   (rule "notRight" (formula "27"))
                                                   (rule "allRight" (formula "28") (inst "sk=iv_19"))
                                                   (rule "orRight" (formula "28"))
                                                   (rule "orRight" (formula "28"))
                                                   (rule "notRight" (formula "28"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "30"))
                                                   (rule "inEqSimp_leqRight" (formula "30"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                   (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "40")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch
                                                   (rule "orRight" (formula "27"))
                                                   (rule "notRight" (formula "27"))
                                                   (rule "notRight" (formula "28"))
                                                   (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch
                                                (rule "orRight" (formula "27"))
                                                (rule "notRight" (formula "27"))
                                                (rule "notRight" (formula "28"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                                (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                          (branch
                                             (rule "orRight" (formula "27"))
                                             (rule "notRight" (formula "28"))
                                             (rule "notRight" (formula "28"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                             (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                             (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                    )
                                    (branch "CUT: ov_16 = null FALSE"
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "cut_direct" (formula "2") (term "1"))
                                       (branch "CUT: boolean::select(anon_heap_untrustedInput, ov_16, <created>) = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfStore" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfMemset" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfStore" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfStore" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfStore" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfCreate" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                          (rule "selectCreatedOfAnonEQ" (formula "1") (term "2,0") (ifseqformula "12"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                          (rule "true_left" (formula "1"))
                                          (rule "allLeft" (formula "14") (inst "t=ov_16"))
                                          (rule "cut_direct" (formula "14") (term "0,1,0"))
                                          (branch "CUT: ov_16.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "allLeft" (formula "15") (inst "t=fv_16"))
                                             (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "15"))
                                             (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "14"))
                                             (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "29")))
                                             (rule "true_left" (formula "15"))
                                             (builtin "Use Dependency Contract" (formula "26") (term "2,1,0,0,0") (ifInst ""  (formula "32") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                             (rule "wellFormedStorePrimitive" (formula "28") (term "1,0,0"))
                                             (rule "wellFormedAnonEQ" (formula "28") (term "0,0,0") (ifseqformula "11"))
                                             (rule "commuteUnion" (formula "28") (term "1,1,1,0,1,0"))
                                             (rule "commuteUnion" (formula "28") (term "0,1,0"))
                                             (rule "commuteUnion" (formula "28") (term "1,0,0,1,0"))
                                             (rule "replace_known_left" (formula "28") (term "1,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "9")))
                                             (rule "associativeLawUnion" (formula "28") (term "0,0,1,0"))
                                             (rule "disjointToElementOf" (formula "28") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                                             (rule "associativeLawUnion" (formula "28") (term "0,0,2,0,0,0,0,1,0"))
                                             (rule "wellFormedMemsetArrayPrimitive" (formula "28") (term "0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "28") (term "0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "28") (term "0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "28") (term "0,0"))
                                             (rule "wellFormedCreate" (formula "28") (term "0,0"))
                                             (rule "wellFormedAnonEQ" (formula "28") (term "0,0") (ifseqformula "11"))
                                             (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "10")))
                                             (rule "elementOfUnion" (formula "28") (term "0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "28") (term "0,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "elementOfUnion" (formula "28") (term "0,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "28") (term "0,0,0,0,0,0,0"))
                                             (rule "elementOfArrayRange" (formula "28") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                                             (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "28") (term "1,0,0,0,0,0,0,0"))
                                             (rule "nnf_notOr" (formula "28") (term "0,0,0,0"))
                                             (rule "nnf_notOr" (formula "28") (term "0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "28") (term "1,0,0,0,0"))
                                             (rule "nnf_notOr" (formula "28") (term "0,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "28") (term "1,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "28") (term "1,0,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "28") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_notEx" (formula "28") (term "1,0,0,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "28") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "28") (term "1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "28") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "cut_direct" (formula "28") (term "1"))
                                             (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "applyEq" (formula "26") (term "2,1,0,0,0") (ifseqformula "28"))
                                                (rule "applyEq" (formula "23") (term "2,1,0") (ifseqformula "28"))
                                                (rule "applyEq" (formula "25") (term "2,1,0,0,0") (ifseqformula "28"))
                                                (rule "applyEq" (formula "1") (term "2") (ifseqformula "28"))
                                                (rule "applyEq" (formula "21") (term "2") (ifseqformula "27"))
                                                (rule "close" (formula "32") (ifseqformula "21"))
                                             )
                                             (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "notLeft" (formula "28"))
                                                (rule "allRight" (formula "28") (inst "sk=ov_19"))
                                                (rule "allRight" (formula "28") (inst "sk=fv_19"))
                                                (rule "orRight" (formula "28"))
                                                (rule "notRight" (formula "29"))
                                                (rule "eqSymm" (formula "29") (term "0,0,0,0,1,0,0,0"))
                                                (rule "andRight" (formula "29"))
                                                (branch
                                                   (rule "andRight" (formula "29"))
                                                   (branch
                                                      (rule "andRight" (formula "29"))
                                                      (branch
                                                         (rule "orRight" (formula "29"))
                                                         (rule "notRight" (formula "29"))
                                                         (rule "allRight" (formula "30") (inst "sk=iv_18"))
                                                         (rule "orRight" (formula "30"))
                                                         (rule "orRight" (formula "30"))
                                                         (rule "notRight" (formula "30"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "inEqSimp_geqRight" (formula "32"))
                                                         (rule "inEqSimp_leqRight" (formula "32"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                         (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                                         (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "17"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "44")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                      (branch
                                                         (rule "orRight" (formula "29"))
                                                         (rule "notRight" (formula "30"))
                                                         (rule "notRight" (formula "30"))
                                                         (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                         (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "29"))
                                                      (rule "notRight" (formula "30"))
                                                      (rule "notRight" (formula "30"))
                                                      (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                      (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch
                                                   (rule "orRight" (formula "29"))
                                                   (rule "notRight" (formula "29"))
                                                   (rule "notRight" (formula "30"))
                                                   (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                          (branch "CUT: ov_16.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (builtin "Use Dependency Contract" (formula "23") (term "2,1,0,0,0") (ifInst ""  (formula "30") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                             (rule "wellFormedStorePrimitive" (formula "25") (term "1,0,0"))
                                             (rule "wellFormedAnonEQ" (formula "25") (term "0,0,0") (ifseqformula "11"))
                                             (rule "commuteUnion" (formula "25") (term "1,1,1,0,1,0"))
                                             (rule "commuteUnion" (formula "25") (term "1,1,0,1,0"))
                                             (rule "commuteUnion" (formula "25") (term "0,1,0"))
                                             (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "10")))
                                             (rule "disjointToElementOf" (formula "25") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                                             (rule "associativeLawUnion" (formula "25") (term "0,2,0,0,0,0,1,0"))
                                             (rule "associativeLawUnion" (formula "25") (term "0,0,2,0,0,0,0,1,0"))
                                             (rule "wellFormedMemsetArrayPrimitive" (formula "25") (term "0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "25") (term "0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "25") (term "0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "25") (term "0,0"))
                                             (rule "wellFormedCreate" (formula "25") (term "0,0"))
                                             (rule "wellFormedAnonEQ" (formula "25") (term "0,0") (ifseqformula "11"))
                                             (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "10")))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,0,0"))
                                             (rule "elementOfUnion" (formula "25") (term "0,0,0,0,0,0,0"))
                                             (rule "elementOfSingleton" (formula "25") (term "1,0,0,0,0,0,0,0"))
                                             (rule "elementOfArrayRange" (formula "25") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                                             (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                             (rule "nnf_notOr" (formula "25") (term "0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "25") (term "1,0,0,0,0"))
                                             (rule "nnf_notOr" (formula "25") (term "0,0,0,0,0"))
                                             (rule "nnf_notOr" (formula "25") (term "0,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "25") (term "1,0,0,0,0,0,0"))
                                             (rule "nnf_notEx" (formula "25") (term "1,0,0,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "25") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "25") (term "1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "25") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "cut_direct" (formula "25") (term "1"))
                                             (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "applyEq" (formula "23") (term "2,1,0,0,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "21") (term "2,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "20") (term "2,1,0") (ifseqformula "25"))
                                                (rule "applyEq" (formula "1") (term "2") (ifseqformula "25"))
                                                (rule "applyEq" (formula "18") (term "2") (ifseqformula "24"))
                                                (rule "close" (formula "30") (ifseqformula "18"))
                                             )
                                             (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "notLeft" (formula "25"))
                                                (rule "allRight" (formula "25") (inst "sk=ov_18"))
                                                (rule "allRight" (formula "25") (inst "sk=fv_18"))
                                                (rule "orRight" (formula "25"))
                                                (rule "notRight" (formula "26"))
                                                (rule "eqSymm" (formula "26") (term "0,0,0,0,1,0,0,0"))
                                                (rule "andRight" (formula "26"))
                                                (branch
                                                   (rule "andRight" (formula "26"))
                                                   (branch
                                                      (rule "andRight" (formula "26"))
                                                      (branch
                                                         (rule "orRight" (formula "26"))
                                                         (rule "notRight" (formula "26"))
                                                         (rule "allRight" (formula "27") (inst "sk=iv_17"))
                                                         (rule "orRight" (formula "27"))
                                                         (rule "orRight" (formula "27"))
                                                         (rule "notRight" (formula "27"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "inEqSimp_geqRight" (formula "29"))
                                                         (rule "inEqSimp_leqRight" (formula "29"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                         (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                                         (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "17"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "42")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                      (branch
                                                         (rule "orRight" (formula "26"))
                                                         (rule "notRight" (formula "26"))
                                                         (rule "notRight" (formula "27"))
                                                         (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                         (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                         (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "26"))
                                                      (rule "notRight" (formula "26"))
                                                      (rule "notRight" (formula "27"))
                                                      (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                      (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch
                                                   (rule "orRight" (formula "26"))
                                                   (rule "notRight" (formula "26"))
                                                   (rule "notRight" (formula "27"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "40")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: boolean::select(anon_heap_untrustedInput, ov_16, <created>) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "allLeft" (formula "14") (inst "t=ov_16"))
                                          (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "allLeft" (formula "14") (inst "t=fv_16"))
                                          (rule "replace_known_left" (formula "14") (term "0,1") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfStore" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfMemset" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfStore" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfStore" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfStore" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectOfCreate" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                                          (rule "selectCreatedOfAnonEQ" (formula "1") (term "2,0") (ifseqformula "12"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")) (ifInst ""  (formula "28")))
                                          (rule "true_left" (formula "1"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "14"))
                                          (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "29")))
                                          (rule "true_left" (formula "14"))
                                          (builtin "Use Dependency Contract" (formula "25") (term "2,1,0,0,0") (ifInst ""  (formula "32") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                          (rule "wellFormedStorePrimitive" (formula "27") (term "1,0,0"))
                                          (rule "wellFormedAnonEQ" (formula "27") (term "0,0,0") (ifseqformula "11"))
                                          (rule "commuteUnion" (formula "27") (term "1,1,1,0,1,0"))
                                          (rule "commuteUnion" (formula "27") (term "1,1,0,1,0"))
                                          (rule "commuteUnion" (formula "27") (term "0,1,0"))
                                          (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "10")))
                                          (rule "disjointToElementOf" (formula "27") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                                          (rule "associativeLawUnion" (formula "27") (term "0,2,0,0,0,0,1,0"))
                                          (rule "associativeLawUnion" (formula "27") (term "0,0,2,0,0,0,0,1,0"))
                                          (rule "wellFormedMemsetArrayPrimitive" (formula "27") (term "0,0"))
                                          (rule "wellFormedStorePrimitive" (formula "27") (term "0,0"))
                                          (rule "wellFormedStorePrimitive" (formula "27") (term "0,0"))
                                          (rule "wellFormedStorePrimitive" (formula "27") (term "0,0"))
                                          (rule "wellFormedCreate" (formula "27") (term "0,0"))
                                          (rule "wellFormedAnonEQ" (formula "27") (term "0,0") (ifseqformula "11"))
                                          (rule "replace_known_left" (formula "27") (term "1,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "9")))
                                          (rule "elementOfUnion" (formula "27") (term "0,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "elementOfUnion" (formula "27") (term "0,0,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "27") (term "1,0,0,0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "elementOfUnion" (formula "27") (term "0,0,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "27") (term "1,0,0,0,0,0,0"))
                                          (rule "elementOfUnion" (formula "27") (term "0,0,0,0,0,0,0"))
                                          (rule "elementOfArrayRange" (formula "27") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                                          (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                          (rule "elementOfSingleton" (formula "27") (term "1,0,0,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "27") (term "0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "1,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "27") (term "0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "nnf_notOr" (formula "27") (term "0,0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "1,0,0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0,0,0,0,0,0"))
                                          (rule "nnf_notEx" (formula "27") (term "1,0,0,0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "1,0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0,1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                          (rule "cut_direct" (formula "27") (term "1"))
                                          (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "1") (term "2") (ifseqformula "27"))
                                             (rule "applyEq" (formula "22") (term "2,1,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "23") (term "2,1,0,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "24") (term "2,1,0,0,0") (ifseqformula "26"))
                                             (rule "applyEq" (formula "20") (term "2") (ifseqformula "26"))
                                             (rule "close" (formula "32") (ifseqformula "20"))
                                          )
                                          (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "notLeft" (formula "27"))
                                             (rule "allRight" (formula "27") (inst "sk=ov_17"))
                                             (rule "allRight" (formula "27") (inst "sk=fv_17"))
                                             (rule "orRight" (formula "27"))
                                             (rule "notRight" (formula "28"))
                                             (rule "eqSymm" (formula "28") (term "0,0,0,0,1,0,0,0"))
                                             (rule "andRight" (formula "28"))
                                             (branch
                                                (rule "andRight" (formula "28"))
                                                (branch
                                                   (rule "andRight" (formula "28"))
                                                   (branch
                                                      (rule "orRight" (formula "28"))
                                                      (rule "notRight" (formula "28"))
                                                      (rule "allRight" (formula "29") (inst "sk=iv_16"))
                                                      (rule "orRight" (formula "29"))
                                                      (rule "orRight" (formula "29"))
                                                      (rule "notRight" (formula "29"))
                                                      (rule "eqSymm" (formula "1"))
                                                      (rule "inEqSimp_geqRight" (formula "31"))
                                                      (rule "inEqSimp_leqRight" (formula "31"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                      (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "17"))
                                                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "44")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                   (branch
                                                      (rule "orRight" (formula "28"))
                                                      (rule "notRight" (formula "29"))
                                                      (rule "notRight" (formula "29"))
                                                      (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                      (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                      (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch
                                                   (rule "orRight" (formula "28"))
                                                   (rule "notRight" (formula "28"))
                                                   (rule "notRight" (formula "29"))
                                                   (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch
                                                (rule "orRight" (formula "28"))
                                                (rule "notRight" (formula "28"))
                                                (rule "notRight" (formula "29"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                                (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")) (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: result_1.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "16"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (builtin "Use Dependency Contract" (formula "20") (term "2,0,0,0,0,0") (ifInst ""  (formula "20") (term "2,1,0,0,0")) (ifInst ""  (formula "13")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (builtin "Use Dependency Contract" (formula "11") (term "2,0,1,0,0,0") (ifInst ""  (formula "30") (term "2")) (ifInst ""  (formula "8")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (builtin "Use Dependency Contract" (formula "17") (term "2,1,0") (ifInst ""  (formula "24") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (rule "wellFormedStorePrimitive" (formula "22") (term "1,0,0"))
                              (rule "wellFormedAnonEQ" (formula "22") (term "0,0,0") (ifseqformula "8"))
                              (rule "commuteUnion" (formula "22") (term "1,1,0,1,0"))
                              (rule "commuteUnion" (formula "22") (term "0,1,0"))
                              (rule "commuteUnion" (formula "22") (term "0,1,0,0,1,0"))
                              (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                              (rule "disjointToElementOf" (formula "22") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                              (rule "associativeLawUnion" (formula "22") (term "0,2,0,0,0,0,1,0"))
                              (rule "associativeLawUnion" (formula "22") (term "0,0,2,0,0,0,0,1,0"))
                              (rule "wellFormedMemsetArrayPrimitive" (formula "22") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                              (rule "wellFormedCreate" (formula "22") (term "0,0"))
                              (rule "wellFormedAnonEQ" (formula "22") (term "0,0") (ifseqformula "8"))
                              (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "7")))
                              (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                              (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0"))
                              (rule "elementOfArrayRange" (formula "22") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0,0"))
                              (rule "nnf_notOr" (formula "22") (term "0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0"))
                              (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0"))
                              (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0,0"))
                              (rule "nnf_notEx" (formula "22") (term "1,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "cut_direct" (formula "22") (term "1"))
                              (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "19") (term "2,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "16") (term "2") (ifseqformula "22"))
                                 (rule "close" (formula "25") (ifseqformula "16"))
                              )
                              (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "allRight" (formula "22") (inst "sk=ov_15"))
                                 (rule "allRight" (formula "22") (inst "sk=fv_15"))
                                 (rule "orRight" (formula "22"))
                                 (rule "notRight" (formula "23"))
                                 (rule "eqSymm" (formula "23") (term "0,0,0,0,1,0,0,0"))
                                 (rule "andRight" (formula "23"))
                                 (branch
                                    (rule "andRight" (formula "23"))
                                    (branch
                                       (rule "andRight" (formula "23"))
                                       (branch
                                          (rule "orRight" (formula "23"))
                                          (rule "notRight" (formula "23"))
                                          (rule "allRight" (formula "24") (inst "sk=iv_15"))
                                          (rule "orRight" (formula "24"))
                                          (rule "orRight" (formula "24"))
                                          (rule "notRight" (formula "24"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "inEqSimp_geqRight" (formula "26"))
                                          (rule "inEqSimp_leqRight" (formula "26"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                          (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "36")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                       (branch
                                          (rule "orRight" (formula "23"))
                                          (rule "notRight" (formula "23"))
                                          (rule "notRight" (formula "24"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                          (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch
                                       (rule "orRight" (formula "23"))
                                       (rule "notRight" (formula "23"))
                                       (rule "notRight" (formula "24"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                       (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "23"))
                                    (rule "notRight" (formula "24"))
                                    (rule "notRight" (formula "24"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "CUT: ov_11 = null FALSE"
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "notRight" (formula "26"))
                        (rule "allLeft" (formula "11") (inst "t=ov_11"))
                        (rule "replace_known_left" (formula "11") (term "0,1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "allLeft" (formula "19") (inst "t=ov_11"))
                        (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allLeft" (formula "19") (inst "t=fv_11"))
                        (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allLeft" (formula "11") (inst "t=fv_11"))
                        (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "notLeft" (formula "11"))
                        (rule "cut_direct" (formula "15") (term "1,0"))
                        (branch "CUT: boolean::select(anon_heap_untrustedInput, result_1, <created>) = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                           (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,1") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                           (rule "selectOfStore" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "selectOfMemset" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "selectOfStore" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "selectOfStore" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "selectOfStore" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "selectOfCreate" (formula "2") (term "0,0"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "30")))
                           (rule "selectCreatedOfAnonEQ" (formula "2") (term "2,0,0") (ifseqformula "9"))
                           (rule "castDel" (formula "2") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                           (rule "true_left" (formula "2"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "19"))
                           (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "selectOfStore" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "selectOfMemset" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "selectOfStore" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "selectOfStore" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "selectOfStore" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "selectOfCreate" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "30")))
                           (rule "selectCreatedOfAnonEQ" (formula "19") (term "2,0") (ifseqformula "8"))
                           (rule "castDel" (formula "19") (term "1,0"))
                           (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
                           (rule "true_left" (formula "19"))
                           (builtin "Use Dependency Contract" (formula "22") (term "2,0,0,0,0,0") (ifInst ""  (formula "22") (term "2,1,0,0,0")) (ifInst ""  (formula "14")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                           (builtin "Use Dependency Contract" (formula "12") (term "2,0,1,0,0,0") (ifInst ""  (formula "31") (term "2")) (ifInst ""  (formula "8")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                           (builtin "Use Dependency Contract" (formula "17") (term "2,1,0") (ifInst ""  (formula "24") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                           (rule "wellFormedStorePrimitive" (formula "24") (term "1,0,0"))
                           (rule "wellFormedAnonEQ" (formula "24") (term "0,0,0") (ifseqformula "8"))
                           (rule "commuteUnion" (formula "24") (term "1,1,1,0,1,0"))
                           (rule "commuteUnion" (formula "24") (term "0,1,0"))
                           (rule "commuteUnion" (formula "24") (term "1,0,0,1,0"))
                           (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "6")))
                           (rule "associativeLawUnion" (formula "24") (term "0,0,1,0"))
                           (rule "disjointToElementOf" (formula "24") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                           (rule "associativeLawUnion" (formula "24") (term "0,0,2,0,0,0,0,1,0"))
                           (rule "wellFormedMemsetArrayPrimitive" (formula "24") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                           (rule "wellFormedCreate" (formula "24") (term "0,0"))
                           (rule "wellFormedAnonEQ" (formula "24") (term "0,0") (ifseqformula "8"))
                           (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "6")))
                           (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0,0"))
                           (rule "elementOfArrayRange" (formula "24") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                           (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "24") (term "0,0,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "24") (term "0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0,0,0"))
                           (rule "nnf_notEx" (formula "24") (term "1,0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "cut_direct" (formula "24") (term "1"))
                           (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "true_left" (formula "25"))
                              (rule "applyEq" (formula "19") (term "2") (ifseqformula "24"))
                              (rule "close" (formula "25") (ifseqformula "19"))
                           )
                           (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "notLeft" (formula "24"))
                              (rule "allRight" (formula "24") (inst "sk=ov_14"))
                              (rule "allRight" (formula "24") (inst "sk=fv_14"))
                              (rule "orRight" (formula "24"))
                              (rule "notRight" (formula "25"))
                              (rule "eqSymm" (formula "25") (term "0,0,0,0,1,0,0,0"))
                              (rule "andRight" (formula "25"))
                              (branch
                                 (rule "andRight" (formula "25"))
                                 (branch
                                    (rule "andRight" (formula "25"))
                                    (branch
                                       (rule "orRight" (formula "25"))
                                       (rule "notRight" (formula "25"))
                                       (rule "allRight" (formula "26") (inst "sk=iv_14"))
                                       (rule "orRight" (formula "26"))
                                       (rule "orRight" (formula "26"))
                                       (rule "notRight" (formula "26"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "28"))
                                       (rule "inEqSimp_leqRight" (formula "28"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                       (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "36")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                    (branch
                                       (rule "orRight" (formula "25"))
                                       (rule "notRight" (formula "26"))
                                       (rule "notRight" (formula "26"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                       (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "26"))
                                    (rule "notRight" (formula "26"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch
                                 (rule "orRight" (formula "25"))
                                 (rule "notRight" (formula "25"))
                                 (rule "notRight" (formula "26"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                        )
                        (branch "CUT: boolean::select(anon_heap_untrustedInput, result_1, <created>) = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "cut_direct" (formula "15") (term "1"))
                           (branch "CUT: boolean::select(anon_heap_untrustedInputMessage_helper, result_1, <created>) = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                              (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                              (rule "selectOfStore" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfMemset" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfCreate" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "31")))
                              (rule "selectCreatedOfAnonEQ" (formula "2") (term "2,0,0") (ifseqformula "9"))
                              (rule "castDel" (formula "2") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "2"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "19"))
                              (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfStore" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfMemset" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfStore" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfStore" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfStore" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfCreate" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "31")))
                              (rule "selectCreatedOfAnonEQ" (formula "19") (term "2,0") (ifseqformula "8"))
                              (rule "castDel" (formula "19") (term "1,0"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "19"))
                              (builtin "Use Dependency Contract" (formula "22") (term "2,0,0,0,0,0") (ifInst ""  (formula "22") (term "2,1,0,0,0")) (ifInst ""  (formula "14")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (builtin "Use Dependency Contract" (formula "12") (term "2,0,1,0,0,0") (ifInst ""  (formula "32") (term "2")) (ifInst ""  (formula "8")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (builtin "Use Dependency Contract" (formula "17") (term "2,1,0") (ifInst ""  (formula "25") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (rule "wellFormedStorePrimitive" (formula "24") (term "1,0,0"))
                              (rule "wellFormedAnonEQ" (formula "24") (term "0,0,0") (ifseqformula "8"))
                              (rule "commuteUnion" (formula "24") (term "1,1,0,1,0"))
                              (rule "commuteUnion" (formula "24") (term "0,1,1,0,1,0"))
                              (rule "commuteUnion" (formula "24") (term "0,1,0"))
                              (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "7")))
                              (rule "disjointToElementOf" (formula "24") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                              (rule "associativeLawUnion" (formula "24") (term "0,2,0,0,0,0,1,0"))
                              (rule "associativeLawUnion" (formula "24") (term "0,0,2,0,0,0,0,1,0"))
                              (rule "wellFormedMemsetArrayPrimitive" (formula "24") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                              (rule "wellFormedCreate" (formula "24") (term "0,0"))
                              (rule "wellFormedAnonEQ" (formula "24") (term "0,0") (ifseqformula "8"))
                              (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "7")))
                              (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0"))
                              (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0,0"))
                              (rule "elementOfArrayRange" (formula "24") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                              (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                              (rule "nnf_notOr" (formula "24") (term "0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0"))
                              (rule "nnf_notOr" (formula "24") (term "0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0,0"))
                              (rule "nnf_notOr" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "nnf_notEx" (formula "24") (term "1,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "24") (term "1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "cut_direct" (formula "24") (term "1"))
                              (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "19") (term "2") (ifseqformula "24"))
                                 (rule "close" (formula "26") (ifseqformula "19"))
                              )
                              (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "allRight" (formula "24") (inst "sk=ov_13"))
                                 (rule "allRight" (formula "24") (inst "sk=fv_13"))
                                 (rule "orRight" (formula "24"))
                                 (rule "notRight" (formula "25"))
                                 (rule "eqSymm" (formula "25") (term "0,0,0,0,1,0,0,0"))
                                 (rule "andRight" (formula "25"))
                                 (branch
                                    (rule "andRight" (formula "25"))
                                    (branch
                                       (rule "andRight" (formula "25"))
                                       (branch
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "allRight" (formula "26") (inst "sk=iv_13"))
                                          (rule "orRight" (formula "26"))
                                          (rule "orRight" (formula "26"))
                                          (rule "notRight" (formula "26"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "inEqSimp_geqRight" (formula "28"))
                                          (rule "inEqSimp_leqRight" (formula "28"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0"))
                                          (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                          (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "37")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                       (branch
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "26"))
                                          (rule "notRight" (formula "26"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                          (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch
                                       (rule "orRight" (formula "25"))
                                       (rule "notRight" (formula "26"))
                                       (rule "notRight" (formula "26"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                       (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "25"))
                                    (rule "notRight" (formula "26"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                           )
                           (branch "CUT: boolean::select(anon_heap_untrustedInputMessage_helper, result_1, <created>) = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "2"))
                              (rule "selectCreatedOfAnonEQ" (formula "2") (term "0,1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                              (rule "selectOfStore" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfMemset" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfCreate" (formula "2") (term "0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "32")))
                              (rule "selectCreatedOfAnonEQ" (formula "2") (term "2,0,0") (ifseqformula "9"))
                              (rule "castDel" (formula "2") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "2"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "19"))
                              (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfStore" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfMemset" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfStore" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfStore" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfStore" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "selectOfCreate" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "32")))
                              (rule "selectCreatedOfAnonEQ" (formula "19") (term "2,0") (ifseqformula "8"))
                              (rule "castDel" (formula "19") (term "1,0"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
                              (rule "true_left" (formula "19"))
                              (builtin "Use Dependency Contract" (formula "22") (term "2,0,0,0,0,0") (ifInst ""  (formula "22") (term "2,1,0,0,0")) (ifInst ""  (formula "14")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (builtin "Use Dependency Contract" (formula "12") (term "2,0,1,0,0,0") (ifInst ""  (formula "33") (term "2")) (ifInst ""  (formula "8")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (builtin "Use Dependency Contract" (formula "17") (term "2,1,0") (ifInst ""  (formula "26") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                              (rule "wellFormedStorePrimitive" (formula "24") (term "1,0,0"))
                              (rule "wellFormedAnonEQ" (formula "24") (term "0,0,0") (ifseqformula "8"))
                              (rule "commuteUnion" (formula "24") (term "1,1,1,0,1,0"))
                              (rule "commuteUnion" (formula "24") (term "0,1,0"))
                              (rule "commuteUnion" (formula "24") (term "1,0,0,1,0"))
                              (rule "replace_known_left" (formula "24") (term "1,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "6")))
                              (rule "associativeLawUnion" (formula "24") (term "0,0,1,0"))
                              (rule "disjointToElementOf" (formula "24") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                              (rule "associativeLawUnion" (formula "24") (term "0,0,2,0,0,0,0,1,0"))
                              (rule "wellFormedMemsetArrayPrimitive" (formula "24") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "24") (term "0,0"))
                              (rule "wellFormedCreate" (formula "24") (term "0,0"))
                              (rule "wellFormedAnonEQ" (formula "24") (term "0,0") (ifseqformula "8"))
                              (rule "replace_known_left" (formula "24") (term "1,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "6")))
                              (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0"))
                              (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "elementOfUnion" (formula "24") (term "0,0,0,0,0,0,0"))
                              (rule "elementOfArrayRange" (formula "24") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                              (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "24") (term "1,0,0,0,0,0,0,0"))
                              (rule "nnf_notOr" (formula "24") (term "0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0"))
                              (rule "nnf_notOr" (formula "24") (term "0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0,0"))
                              (rule "nnf_notOr" (formula "24") (term "0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "1,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0,0,0"))
                              (rule "nnf_notEx" (formula "24") (term "1,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "24") (term "1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                              (rule "cut_direct" (formula "24") (term "1"))
                              (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "22") (term "2,1,0,0,0") (ifseqformula "24"))
                                 (rule "applyEq" (formula "19") (term "2") (ifseqformula "24"))
                                 (rule "close" (formula "27") (ifseqformula "19"))
                              )
                              (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "allRight" (formula "24") (inst "sk=ov_12"))
                                 (rule "allRight" (formula "24") (inst "sk=fv_12"))
                                 (rule "orRight" (formula "24"))
                                 (rule "notRight" (formula "25"))
                                 (rule "eqSymm" (formula "25") (term "0,0,0,0,1,0,0,0"))
                                 (rule "andRight" (formula "25"))
                                 (branch
                                    (rule "andRight" (formula "25"))
                                    (branch
                                       (rule "andRight" (formula "25"))
                                       (branch
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "allRight" (formula "26") (inst "sk=iv_12"))
                                          (rule "orRight" (formula "26"))
                                          (rule "orRight" (formula "26"))
                                          (rule "notRight" (formula "26"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "inEqSimp_geqRight" (formula "28"))
                                          (rule "inEqSimp_leqRight" (formula "28"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0"))
                                          (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                          (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "38")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                       (branch
                                          (rule "orRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "notRight" (formula "26"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                          (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch
                                       (rule "orRight" (formula "25"))
                                       (rule "notRight" (formula "25"))
                                       (rule "notRight" (formula "26"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                       (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "25"))
                                    (rule "notRight" (formula "25"))
                                    (rule "notRight" (formula "26"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "23") (inst "sk=f_0"))
               (rule "allRight" (formula "23") (inst "sk=o_0"))
               (rule "orRight" (formula "23"))
               (rule "orRight" (formula "23"))
               (rule "eqSymm" (formula "25") (term "0,0,0,1,0,0,2,2,0"))
               (rule "replace_known_right" (formula "25") (term "1,0,2,2,2,2,2,2,2,0") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
               (rule "commute_and" (formula "25") (term "0,2,2,2,2,2,2,0"))
               (rule "commute_and" (formula "25") (term "0,0,0"))
               (rule "commute_and" (formula "25") (term "0,2,2,2,2,0"))
               (rule "commute_and" (formula "25") (term "0,0,1,0,0,2,2,0"))
               (rule "commute_and" (formula "25") (term "0,2,2,2,0"))
               (rule "commute_and" (formula "25") (term "0,2,0"))
               (rule "commute_and" (formula "25") (term "0,2,2,2,2,2,0"))
               (rule "commute_and_2" (formula "25") (term "0,1,0,0,2,2,0"))
               (rule "shift_paren_and" (formula "25") (term "1,1,0,0"))
               (rule "cnf_rightDist" (formula "25") (term "0,0"))
               (rule "commute_or" (formula "25") (term "0,0,0"))
               (rule "cnf_rightDist" (formula "25") (term "0,0,0"))
               (rule "commute_or" (formula "25") (term "0,0,0,0"))
               (rule "commute_or_2" (formula "25") (term "1,0,0,0"))
               (rule "cnf_rightDist" (formula "25") (term "1,0,0"))
               (rule "commute_or" (formula "25") (term "0,1,0,0"))
               (rule "cnf_rightDist" (formula "25") (term "1,1,0,0"))
               (rule "commute_or" (formula "25") (term "1,1,1,0,0"))
               (rule "cnf_rightDist" (formula "25") (term "0,1,0,0"))
               (rule "commute_or" (formula "25") (term "1,0,1,0,0"))
               (rule "cnf_rightDist" (formula "25") (term "0,1,1,0,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "commute_or" (formula "25") (term "0,1,1,0,0"))
               (rule "cnf_rightDist" (formula "25") (term "0,0,1,0,0"))
               (rule "commute_or" (formula "25") (term "1,0,0,1,0,0"))
               (rule "shift_paren_and" (formula "25") (term "1,0,0"))
               (rule "shift_paren_and" (formula "25") (term "0,0"))
               (rule "shift_paren_and" (formula "25") (term "0,0,0"))
               (rule "shift_paren_and" (formula "25") (term "0,0,0,0"))
               (rule "shift_paren_and" (formula "25") (term "0,0,0,0,0"))
               (rule "cut_direct" (formula "12") (term "0,0"))
               (branch "CUT: x_arr_2 = result_1 TRUE"
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "25") (term "1,0,0,0,0,2,0,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "1,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "15") (term "1,0,0,0,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "1,0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,0,0,0,2,0,0,1,0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,0,2,0,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "16") (term "1,0,0,0,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,1,0,2,2,2,2,2,2,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "0,1,0,0,2,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,0,0,0,0,0,0,2,0,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "16") (term "1,0,0,0,0,0,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,0,0,0,2,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "1,0,0,0,0,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "15") (term "1,0,0,0,0,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,0,0,0,0,0,2,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,0,0,0,2,0,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "0,1,0,0,2,0,0,1,0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "0,1,0,0,2,0,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,0,1,1,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "16") (term "0,1,0,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "0,1,0,0,0,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "16") (term "1,0,0,0,0,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,0,0,0,0,0,0,2,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "15") (term "1,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,0,2,0,0,1,0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "16") (term "1,0,0,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "1,0,0,0,0,0,0,0,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,1,0,2,2,2,2,2,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "1,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "17") (term "1,0,0,0,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "16") (term "1,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "15") (term "1,0,0,0,0,0,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "1,0,0,0,0,0,0,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "17") (term "1,0,0,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "25") (term "1,1,0,2,2,2,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "1,0,0,0,0,0,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "12"))
                  (rule "applyEq" (formula "24") (term "1,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "24") (term "1,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "24") (term "1,0,0,0,0,0,2,0,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "24") (term "1,0,2,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "24") (term "1,1,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "24") (term "1,0,0,0,2,2,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "0,1,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "1,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "24") (term "1,1,0,2,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "24") (term "1,0,0,0,0,2,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "14") (term "1,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "15") (term "0,1,0,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "24") (term "1,1,0,2,2,2,2,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "15") (term "1,0,0,0,2,1,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "17") (term "1,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,0,2,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "1,0,0,1,0") (ifseqformula "12"))
                  (rule "commute_and_2" (formula "24") (term "0,0,0,0,0,0"))
                  (rule "cut_direct" (formula "23") (term "0,0"))
                  (branch "CUT: o_0 = null TRUE"
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "false_right" (formula "24"))
                     (rule "replace_known_left" (formula "24") (term "0,1,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")))
                     (rule "applyEq" (formula "23") (term "0") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "0,1,0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24") (term "1,0,1,0,0"))
                     (rule "replace_known_right" (formula "24") (term "1,0,1,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEq" (formula "24") (term "0,1,0,2,2,2,2,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24") (term "1,0,2,2,2,2,2,0"))
                     (rule "replace_known_right" (formula "24") (term "1,0,2,2,2,2,2,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEq" (formula "24") (term "0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24") (term "0,1,1,0,0,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "24") (term "0,1,1,0,0,0,0,0,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEqRigid" (formula "24") (term "0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24") (term "1,1,0,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "24") (term "1,1,0,0,0,0,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEqRigid" (formula "24") (term "0,1,0,1,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24") (term "1,0,1,0,0,0"))
                     (rule "replace_known_right" (formula "24") (term "1,0,1,0,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEq" (formula "24") (term "0,1,0,2,2,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24") (term "1,0,2,2,2,0"))
                     (rule "replace_known_right" (formula "24") (term "1,0,2,2,2,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEq" (formula "24") (term "0,1,0,2,2,2,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24") (term "1,0,2,2,2,2,0"))
                     (rule "replace_known_right" (formula "24") (term "1,0,2,2,2,2,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEq" (formula "24") (term "0,0,0,0,2,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24") (term "0,0,0,2,2,0"))
                     (rule "replace_known_right" (formula "24") (term "0,0,0,2,2,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEqRigid" (formula "24") (term "1,1") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "24") (term "0,1,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "24") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "24") (term "0,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "1,0,0,1,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "0,1,0,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24") (term "1,0,2,0"))
                     (rule "replace_known_right" (formula "24") (term "1,0,2,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEqRigid" (formula "24") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "1,2,2,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "24") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "24") (term "0,1,0,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "24") (term "1,0,2,0"))
                     (rule "replace_known_right" (formula "24") (term "1,0,2,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "orRight" (formula "24"))
                     (rule "notRight" (formula "24"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "allLeft" (formula "10") (inst "t=f_0"))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "notLeft" (formula "10"))
                     (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                     (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (builtin "Use Dependency Contract" (formula "10") (term "2,0,1,0") (ifInst ""  (formula "26") (term "2")) (ifInst ""  (formula "8")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                     (builtin "Use Dependency Contract" (formula "13") (term "0,1,0") (ifInst ""  (formula "21") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                     (rule "wellFormedStorePrimitive" (formula "21") (term "1,0,0"))
                     (rule "wellFormedAnonEQ" (formula "21") (term "0,0,0") (ifseqformula "8"))
                     (rule "commuteUnion" (formula "21") (term "1,1,1,0,1,0"))
                     (rule "commuteUnion" (formula "21") (term "0,1,0"))
                     (rule "commuteUnion" (formula "21") (term "1,0,0,1,0"))
                     (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "6")))
                     (rule "associativeLawUnion" (formula "21") (term "0,0,1,0"))
                     (rule "associativeLawUnion" (formula "21") (term "0,0,0,1,0"))
                     (rule "disjointToElementOf" (formula "21") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                     (rule "wellFormedMemsetArrayPrimitive" (formula "21") (term "0,0"))
                     (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                     (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                     (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                     (rule "wellFormedCreate" (formula "21") (term "0,0"))
                     (rule "wellFormedAnonEQ" (formula "21") (term "0,0") (ifseqformula "8"))
                     (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "7")))
                     (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0"))
                     (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0"))
                     (rule "elementOfArrayRange" (formula "21") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0,0"))
                     (rule "nnf_notOr" (formula "21") (term "0,0,0,0"))
                     (rule "nnf_notOr" (formula "21") (term "0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "nnf_notOr" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0,0,0"))
                     (rule "nnf_notEx" (formula "21") (term "1,0,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "1,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                     (rule "cut_direct" (formula "21") (term "1"))
                     (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "applyEq" (formula "19") (term "2,1,0,0,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "1") (term "2") (ifseqformula "21"))
                        (rule "close" (formula "22") (ifseqformula "1"))
                     )
                     (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "notLeft" (formula "21"))
                        (rule "allRight" (formula "21") (inst "sk=ov_10"))
                        (rule "allRight" (formula "21") (inst "sk=fv_10"))
                        (rule "orRight" (formula "21"))
                        (rule "notRight" (formula "22"))
                        (rule "eqSymm" (formula "22") (term "0,0,0,0,1,0,0,0"))
                        (rule "andRight" (formula "22"))
                        (branch
                           (rule "andRight" (formula "22"))
                           (branch
                              (rule "andRight" (formula "22"))
                              (branch
                                 (rule "orRight" (formula "22"))
                                 (rule "notRight" (formula "22"))
                                 (rule "allRight" (formula "23") (inst "sk=iv_11"))
                                 (rule "orRight" (formula "23"))
                                 (rule "orRight" (formula "23"))
                                 (rule "notRight" (formula "23"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "inEqSimp_geqRight" (formula "25"))
                                 (rule "inEqSimp_leqRight" (formula "25"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                 (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                 (rule "closeFalse" (formula "5"))
                              )
                              (branch
                                 (rule "orRight" (formula "22"))
                                 (rule "notRight" (formula "22"))
                                 (rule "notRight" (formula "23"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch
                              (rule "orRight" (formula "22"))
                              (rule "notRight" (formula "22"))
                              (rule "notRight" (formula "23"))
                              (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                        (branch
                           (rule "orRight" (formula "22"))
                           (rule "notRight" (formula "22"))
                           (rule "notRight" (formula "23"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                           (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                  )
                  (branch "CUT: o_0 = null FALSE"
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "notRight" (formula "24"))
                     (rule "replace_known_right" (formula "25") (term "0,1,0,0,0,0,0,0,0,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                     (rule "commute_and" (formula "25") (term "0,0,0,0,0"))
                     (rule "ifthenelse_split" (formula "25") (term "2,2,2,0"))
                     (branch "f_0 = <initialized> & o_0 = result_1 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "replace_known_left" (formula "27") (term "1,1,0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                        (rule "applyEq" (formula "27") (term "2,1") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "25") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                        (rule "close" (formula "23") (ifseqformula "3"))
                     )
                     (branch "f_0 = <initialized> & o_0 = result_1 FALSE"
                        (rule "replace_known_right" (formula "26") (term "0,2,0") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "allLeft" (formula "10") (inst "t=o_0"))
                        (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "ifthenelse_split" (formula "27") (term "2,2,2,0"))
                        (branch "f_0 = <transient> & o_0 = result_1 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "replace_known_left" (formula "29") (term "0,1,1,0,0,0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                           (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "applyEqRigid" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "29"))
                           (rule "applyEq" (formula "26") (term "1") (ifseqformula "1"))
                           (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                           (rule "close" (formula "24") (ifseqformula "3"))
                        )
                        (branch "f_0 = <transient> & o_0 = result_1 FALSE"
                           (rule "allLeft" (formula "10") (inst "t=f_0"))
                           (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "notLeft" (formula "10"))
                           (rule "ifthenelse_split" (formula "29") (term "2,0"))
                           (branch " o_0 = result_1 & exists int iv; (iv >= 0 & iv <= result_0 & arr(iv) = f_0) & !f_0 = <created> TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "3"))
                              (rule "exLeft" (formula "2") (inst "sk=iv_10"))
                              (rule "andLeft" (formula "2"))
                              (rule "andLeft" (formula "2"))
                              (rule "eqSymm" (formula "4"))
                              (rule "replace_known_right" (formula "34") (term "0,0,1,0,0,0,0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "applyEq" (formula "30") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "34") (term "2,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "34") (term "2,1") (ifseqformula "4"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "4"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "false_right" (formula "32"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "false_right" (formula "31"))
                              (rule "applyEq" (formula "14") (term "0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                              (rule "close" (formula "28") (ifseqformula "5"))
                           )
                           (branch " o_0 = result_1 & exists int iv; (iv >= 0 & iv <= result_0 & arr(iv) = f_0) & !f_0 = <created> FALSE"
                              (rule "cut_direct" (formula "27") (term "0"))
                              (branch "CUT: f_0 = <initialized> TRUE"
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "replace_known_right" (formula "31") (term "1,0,2,2,0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                                 (rule "orRight" (formula "31"))
                                 (rule "notRight" (formula "31"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "false_right" (formula "32"))
                                 (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                                 (rule "false_right" (formula "31"))
                                 (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "31") (term "2,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "31") (term "2,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "28") (term "1") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "false_right" (formula "23"))
                                 (rule "narrowSelectType" (formula "30") (term "0") (ifseqformula "14"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "narrowSelectType" (formula "30") (term "0") (ifseqformula "7"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectOfStore" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectOfMemset" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectOfStore" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectOfStore" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectOfStore" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectOfCreate" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                 (rule "selectCreatedOfAnonEQ" (formula "1") (term "2,0") (ifseqformula "10"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                                 (rule "true_left" (formula "1"))
                                 (builtin "Use Dependency Contract" (formula "13") (term "2,0,1,0,0,0") (ifInst ""  (formula "27") (term "2")) (ifInst ""  (formula "9")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                 (builtin "Use Dependency Contract" (formula "18") (term "2,1,0") (ifInst ""  (formula "23") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                 (rule "wellFormedStorePrimitive" (formula "23") (term "1,0,0"))
                                 (rule "wellFormedAnonEQ" (formula "23") (term "0,0,0") (ifseqformula "9"))
                                 (rule "commuteUnion" (formula "23") (term "0,1,0"))
                                 (rule "commuteUnion" (formula "23") (term "1,0,0,1,0"))
                                 (rule "commuteUnion" (formula "23") (term "0,1,0,0,1,0"))
                                 (rule "replace_known_left" (formula "23") (term "1,0,0,0") (ifseqformula "8"))
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "7")))
                                 (rule "associativeLawUnion" (formula "23") (term "0,0,1,0"))
                                 (rule "disjointToElementOf" (formula "23") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                                 (rule "associativeLawUnion" (formula "23") (term "0,0,2,0,0,0,0,1,0"))
                                 (rule "wellFormedMemsetArrayPrimitive" (formula "23") (term "0,0"))
                                 (rule "wellFormedStorePrimitive" (formula "23") (term "0,0"))
                                 (rule "wellFormedStorePrimitive" (formula "23") (term "0,0"))
                                 (rule "wellFormedStorePrimitive" (formula "23") (term "0,0"))
                                 (rule "wellFormedCreate" (formula "23") (term "0,0"))
                                 (rule "wellFormedAnonEQ" (formula "23") (term "0,0") (ifseqformula "9"))
                                 (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "8"))
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "7")))
                                 (rule "elementOfUnion" (formula "23") (term "0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "elementOfUnion" (formula "23") (term "0,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "elementOfUnion" (formula "23") (term "0,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,0,0,0"))
                                 (rule "elementOfUnion" (formula "23") (term "0,0,0,0,0,0,0"))
                                 (rule "elementOfArrayRange" (formula "23") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                                 (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                 (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "23") (term "0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "1,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "23") (term "0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "nnf_notOr" (formula "23") (term "0,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "1,0,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,0,0,0"))
                                 (rule "nnf_notEx" (formula "23") (term "1,0,0,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "23") (term "1,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                 (rule "cut_direct" (formula "23") (term "1"))
                                 (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "applyEq" (formula "19") (term "2,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "21") (term "2,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "20") (term "2,1,0,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "1") (term "2") (ifseqformula "23"))
                                    (rule "close" (formula "24") (ifseqformula "1"))
                                 )
                                 (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "allRight" (formula "23") (inst "sk=ov_9"))
                                    (rule "allRight" (formula "23") (inst "sk=fv_9"))
                                    (rule "orRight" (formula "23"))
                                    (rule "notRight" (formula "24"))
                                    (rule "eqSymm" (formula "24") (term "0,0,0,0,1,0,0,0"))
                                    (rule "andRight" (formula "24"))
                                    (branch
                                       (rule "andRight" (formula "24"))
                                       (branch
                                          (rule "andRight" (formula "24"))
                                          (branch
                                             (rule "orRight" (formula "24"))
                                             (rule "notRight" (formula "24"))
                                             (rule "allRight" (formula "25") (inst "sk=iv_9"))
                                             (rule "orRight" (formula "25"))
                                             (rule "orRight" (formula "25"))
                                             (rule "notRight" (formula "25"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "inEqSimp_leqRight" (formula "27"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "2") (term "0"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                             (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                             (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                          (branch
                                             (rule "orRight" (formula "24"))
                                             (rule "notRight" (formula "25"))
                                             (rule "notRight" (formula "25"))
                                             (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                             (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "13"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch
                                          (rule "orRight" (formula "24"))
                                          (rule "notRight" (formula "25"))
                                          (rule "notRight" (formula "25"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                          (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                    (branch
                                       (rule "orRight" (formula "24"))
                                       (rule "notRight" (formula "25"))
                                       (rule "notRight" (formula "25"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                       (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "13"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                              )
                              (branch "CUT: f_0 = <initialized> FALSE"
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "false_right" (formula "28"))
                                 (rule "ifthenelse_split" (formula "30") (term "0"))
                                 (branch " !f_0 = <created> & (!f_0 = <created> | !o_0 = result_1) & ( !f_0 = <created> | ! boolean::select(anon_heap_untrustedInput, o_0, <created>) = TRUE) & ( (o_0, f_0) in de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) | o_0 = result_1) & ( (o_0, f_0) in de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) | o_0 = result_1 | ! boolean::select(anon_heap_untrustedInput, o_0, <created>) = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replace_known_right" (formula "32") (term "0,1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "cut_direct" (formula "30") (term "1"))
                                    (branch "CUT: o_0 = result_1 TRUE"
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "close" (formula "25") (ifseqformula "2"))
                                    )
                                    (branch "CUT: o_0 = result_1 FALSE"
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "false_right" (formula "31"))
                                       (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "false_right" (formula "31"))
                                       (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                                       (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfMemset" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfCreate" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                                       (rule "selectCreatedOfAnonEQ" (formula "1") (term "2,0") (ifseqformula "9"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                       (rule "true_left" (formula "1"))
                                       (builtin "Use Dependency Contract" (formula "10") (term "2,0,1,0") (ifInst ""  (formula "27") (term "2")) (ifInst ""  (formula "8")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                       (builtin "Use Dependency Contract" (formula "16") (term "2,0,0") (ifInst ""  (formula "20") (term "2,1,0,0,0")) (ifInst ""  (formula "14")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                       (builtin "Use Dependency Contract" (formula "19") (term "2,1,0,0,0") (ifInst ""  (formula "23") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "1,0,0"))
                                       (rule "wellFormedAnonEQ" (formula "22") (term "0,0,0") (ifseqformula "8"))
                                       (rule "commuteUnion" (formula "22") (term "1,1,0,1,0"))
                                       (rule "commuteUnion" (formula "22") (term "0,1,1,0,1,0"))
                                       (rule "commuteUnion" (formula "22") (term "0,1,0"))
                                       (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "7")))
                                       (rule "disjointToElementOf" (formula "22") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                                       (rule "associativeLawUnion" (formula "22") (term "0,2,0,0,0,0,1,0"))
                                       (rule "associativeLawUnion" (formula "22") (term "0,0,2,0,0,0,0,1,0"))
                                       (rule "wellFormedMemsetArrayPrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedCreate" (formula "22") (term "0,0"))
                                       (rule "wellFormedAnonEQ" (formula "22") (term "0,0") (ifseqformula "8"))
                                       (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "7")))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0"))
                                       (rule "elementOfArrayRange" (formula "22") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                                       (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "22") (term "0,0,0,0"))
                                       (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (rule "nnf_notEx" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "cut_direct" (formula "22") (term "1"))
                                       (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "20") (term "2,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "19") (term "2,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "1") (term "2") (ifseqformula "22"))
                                          (rule "close" (formula "24") (ifseqformula "1"))
                                       )
                                       (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "notLeft" (formula "22"))
                                          (rule "allRight" (formula "22") (inst "sk=ov_8"))
                                          (rule "allRight" (formula "22") (inst "sk=fv_8"))
                                          (rule "orRight" (formula "22"))
                                          (rule "notRight" (formula "23"))
                                          (rule "eqSymm" (formula "23") (term "0,0,0,0,1,0,0,0"))
                                          (rule "andRight" (formula "23"))
                                          (branch
                                             (rule "andRight" (formula "23"))
                                             (branch
                                                (rule "andRight" (formula "23"))
                                                (branch
                                                   (rule "orRight" (formula "23"))
                                                   (rule "notRight" (formula "23"))
                                                   (rule "allRight" (formula "24") (inst "sk=iv_8"))
                                                   (rule "orRight" (formula "24"))
                                                   (rule "orRight" (formula "24"))
                                                   (rule "notRight" (formula "24"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "26"))
                                                   (rule "inEqSimp_leqRight" (formula "26"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch
                                                   (rule "orRight" (formula "23"))
                                                   (rule "notRight" (formula "24"))
                                                   (rule "notRight" (formula "24"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch
                                                (rule "orRight" (formula "23"))
                                                (rule "notRight" (formula "24"))
                                                (rule "notRight" (formula "24"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                                (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                          (branch
                                             (rule "orRight" (formula "23"))
                                             (rule "notRight" (formula "24"))
                                             (rule "notRight" (formula "24"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                             (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                             (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                    )
                                 )
                                 (branch " !f_0 = <created> & (!f_0 = <created> | !o_0 = result_1) & ( !f_0 = <created> | ! boolean::select(anon_heap_untrustedInput, o_0, <created>) = TRUE) & ( (o_0, f_0) in de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) | o_0 = result_1) & ( (o_0, f_0) in de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, result_1), result_1, <transient>, 0), result_1, <transactionConditionallyUpdated>, FALSE), result_1, <initialized>, FALSE), arrayRange(result_1, 0, result_0), 0), result_1, <initialized>, TRUE)) | o_0 = result_1 | ! boolean::select(anon_heap_untrustedInput, o_0, <created>) = TRUE) FALSE"
                                    (rule "ifthenelse_split" (formula "31") (term "0"))
                                    (branch " f_0 = <transactionConditionallyUpdated> & o_0 = result_1 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "33"))
                                       (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "replace_known_left" (formula "32") (term "1,0,1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                       (rule "applyEqRigid" (formula "32") (term "0,0,0,1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "notRight" (formula "32"))
                                       (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "false_right" (formula "32"))
                                       (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "false_right" (formula "31"))
                                       (rule "applyEqRigid" (formula "28") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "31") (term "2,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "false_right" (formula "30"))
                                       (rule "applyEq" (formula "24") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "24") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "13") (term "0,0,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "26") (ifseqformula "4"))
                                    )
                                    (branch " f_0 = <transactionConditionallyUpdated> & o_0 = result_1 FALSE"
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "orRight" (formula "32"))
                                       (rule "notRight" (formula "32"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "replace_known_left" (formula "31") (term "0,1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "2")))
                                       (rule "false_right" (formula "31"))
                                       (rule "replace_known_left" (formula "31") (term "0,0,1,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                                       (rule "false_right" (formula "31"))
                                       (rule "applyEq" (formula "32") (term "2,0") (ifseqformula "1"))
                                       (rule "castTrueImpliesOriginalTrue" (formula "32") (ifseqformula "3"))
                                       (rule "closeTrue" (formula "32"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "CUT: x_arr_2 = result_1 FALSE"
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "commute_and_2" (formula "26") (term "0,0,0,0,0,0"))
                  (rule "commute_and_2" (formula "26") (term "0,0,0,0,0"))
                  (rule "commute_and_2" (formula "26") (term "0,0,0,0"))
                  (rule "cut_direct" (formula "25") (term "0,0"))
                  (branch "CUT: o_0 = null TRUE"
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "false_right" (formula "26"))
                     (rule "replace_known_left" (formula "26") (term "0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")))
                     (rule "applyEq" (formula "26") (term "0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "26") (term "0,1,1,0,0,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "26") (term "0,1,1,0,0,0,0,0,0,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "26") (term "1,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "0,1,0,1,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "26") (term "1,0,1,0,0,0"))
                     (rule "replace_known_right" (formula "26") (term "1,0,1,0,0,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "26") (term "0,1,1,0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "26") (term "1,1,0,0,0,0"))
                     (rule "replace_known_right" (formula "26") (term "1,1,0,0,0,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "26") (term "0,1,0,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "26") (term "1,0,2,0"))
                     (rule "replace_known_right" (formula "26") (term "1,0,2,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "26") (term "0,1,0,2,2,2,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "26") (term "1,0,2,2,2,2,0"))
                     (rule "replace_known_right" (formula "26") (term "1,0,2,2,2,2,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEqRigid" (formula "26") (term "0,1,0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "26") (term "1,0,1,0,0"))
                     (rule "replace_known_right" (formula "26") (term "1,0,1,0,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEqRigid" (formula "26") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "0,0,0,0,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "26") (term "0,0,0,2,0"))
                     (rule "replace_known_right" (formula "26") (term "0,0,0,2,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEqRigid" (formula "26") (term "1,2,2,2,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "26") (term "0,1,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "26") (term "0,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "26") (term "0,1,0,2,2,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "26") (term "1,0,2,2,2,0"))
                     (rule "replace_known_right" (formula "26") (term "1,0,2,2,2,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "26") (term "0,1,0,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "26") (term "1,0,2,0"))
                     (rule "replace_known_right" (formula "26") (term "1,0,2,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "applyEq" (formula "26") (term "0,1,0,2,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "26") (term "1,0,2,0"))
                     (rule "replace_known_right" (formula "26") (term "1,0,2,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "orRight" (formula "26"))
                     (rule "notRight" (formula "26"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "cut_direct" (formula "14") (term "0,0"))
                     (branch "CUT: result_1.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "allLeft" (formula "10") (inst "t=f_0"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (builtin "Use Dependency Contract" (formula "19") (term "2,1,0,0,0") (ifInst ""  (formula "21") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                        (rule "wellFormedStorePrimitive" (formula "21") (term "1,0,0"))
                        (rule "wellFormedAnonEQ" (formula "21") (term "0,0,0") (ifseqformula "8"))
                        (rule "commuteUnion" (formula "21") (term "1,1,0,1,0"))
                        (rule "commuteUnion" (formula "21") (term "0,1,0"))
                        (rule "commuteUnion" (formula "21") (term "0,1,0,0,1,0"))
                        (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "7")))
                        (rule "disjointToElementOf" (formula "21") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                        (rule "associativeLawUnion" (formula "21") (term "0,2,0,0,0,0,1,0"))
                        (rule "associativeLawUnion" (formula "21") (term "0,0,2,0,0,0,0,1,0"))
                        (rule "wellFormedMemsetArrayPrimitive" (formula "21") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                        (rule "wellFormedCreate" (formula "21") (term "0,0"))
                        (rule "wellFormedAnonEQ" (formula "21") (term "0,0") (ifseqformula "8"))
                        (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "7")))
                        (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0"))
                        (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0"))
                        (rule "elementOfArrayRange" (formula "21") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                        (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0,0"))
                        (rule "nnf_notOr" (formula "21") (term "0,0,0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0"))
                        (rule "nnf_notOr" (formula "21") (term "0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "nnf_notOr" (formula "21") (term "0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "0,0,0,0,0,0,0"))
                        (rule "nnf_notEx" (formula "21") (term "1,0,0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "21") (term "1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "0,0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                        (rule "cut_direct" (formula "21") (term "1"))
                        (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "16") (term "2,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "19") (term "2,1,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "18") (term "2,1,0,0,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "1") (term "2") (ifseqformula "21"))
                           (rule "close" (formula "22") (ifseqformula "1"))
                        )
                        (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "notLeft" (formula "21"))
                           (rule "allRight" (formula "21") (inst "sk=ov_7"))
                           (rule "allRight" (formula "21") (inst "sk=fv_7"))
                           (rule "orRight" (formula "21"))
                           (rule "notRight" (formula "22"))
                           (rule "eqSymm" (formula "22") (term "0,0,0,0,1,0,0,0"))
                           (rule "andRight" (formula "22"))
                           (branch
                              (rule "andRight" (formula "22"))
                              (branch
                                 (rule "andRight" (formula "22"))
                                 (branch
                                    (rule "orRight" (formula "22"))
                                    (rule "notRight" (formula "22"))
                                    (rule "allRight" (formula "23") (inst "sk=iv_7"))
                                    (rule "orRight" (formula "23"))
                                    (rule "orRight" (formula "23"))
                                    (rule "notRight" (formula "23"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "inEqSimp_geqRight" (formula "25"))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                    (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch
                                    (rule "orRight" (formula "22"))
                                    (rule "notRight" (formula "23"))
                                    (rule "notRight" (formula "23"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch
                                 (rule "orRight" (formula "22"))
                                 (rule "notRight" (formula "22"))
                                 (rule "notRight" (formula "23"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                           (branch
                              (rule "orRight" (formula "22"))
                              (rule "notRight" (formula "23"))
                              (rule "notRight" (formula "23"))
                              (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                              (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                              (rule "closeFalse" (formula "3"))
                           )
                        )
                     )
                     (branch "CUT: result_1.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "allLeft" (formula "10") (inst "t=f_0"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "cut_direct" (formula "14") (term "1"))
                        (branch "CUT: boolean::select(anon_heap_untrustedInputMessage_helper, result_1, <created>) = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (builtin "Use Dependency Contract" (formula "10") (term "2,0,1,0") (ifInst ""  (formula "29") (term "2")) (ifInst ""  (formula "8")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                           (builtin "Use Dependency Contract" (formula "13") (term "0,1,0") (ifInst ""  (formula "21") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                           (rule "wellFormedStorePrimitive" (formula "21") (term "1,0,0"))
                           (rule "wellFormedAnonEQ" (formula "21") (term "0,0,0") (ifseqformula "8"))
                           (rule "commuteUnion" (formula "21") (term "1,1,1,0,1,0"))
                           (rule "commuteUnion" (formula "21") (term "1,1,0,1,0"))
                           (rule "commuteUnion" (formula "21") (term "0,1,0"))
                           (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "6")))
                           (rule "associativeLawUnion" (formula "21") (term "0,0,1,0"))
                           (rule "disjointToElementOf" (formula "21") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                           (rule "associativeLawUnion" (formula "21") (term "0,0,2,0,0,0,0,1,0"))
                           (rule "wellFormedMemsetArrayPrimitive" (formula "21") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                           (rule "wellFormedCreate" (formula "21") (term "0,0"))
                           (rule "wellFormedAnonEQ" (formula "21") (term "0,0") (ifseqformula "8"))
                           (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "6")))
                           (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0"))
                           (rule "elementOfArrayRange" (formula "21") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                           (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "21") (term "0,0,0,0"))
                           (rule "nnf_notOr" (formula "21") (term "0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0,0,0"))
                           (rule "nnf_notEx" (formula "21") (term "1,0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "21") (term "1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "cut_direct" (formula "21") (term "1"))
                           (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "applyEq" (formula "18") (term "2,1,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "19") (term "2,1,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "16") (term "2,1,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "1") (term "2") (ifseqformula "21"))
                              (rule "close" (formula "22") (ifseqformula "1"))
                           )
                           (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "allRight" (formula "21") (inst "sk=ov_6"))
                              (rule "allRight" (formula "21") (inst "sk=fv_6"))
                              (rule "orRight" (formula "21"))
                              (rule "notRight" (formula "22"))
                              (rule "eqSymm" (formula "22") (term "0,0,0,0,1,0,0,0"))
                              (rule "andRight" (formula "22"))
                              (branch
                                 (rule "andRight" (formula "22"))
                                 (branch
                                    (rule "andRight" (formula "22"))
                                    (branch
                                       (rule "orRight" (formula "22"))
                                       (rule "notRight" (formula "22"))
                                       (rule "allRight" (formula "23") (inst "sk=iv_6"))
                                       (rule "orRight" (formula "23"))
                                       (rule "orRight" (formula "23"))
                                       (rule "notRight" (formula "23"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "25"))
                                       (rule "inEqSimp_leqRight" (formula "25"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                       (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                    (branch
                                       (rule "orRight" (formula "22"))
                                       (rule "notRight" (formula "23"))
                                       (rule "notRight" (formula "23"))
                                       (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                       (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "22"))
                                    (rule "notRight" (formula "23"))
                                    (rule "notRight" (formula "23"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch
                                 (rule "orRight" (formula "22"))
                                 (rule "notRight" (formula "23"))
                                 (rule "notRight" (formula "23"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                        )
                        (branch "CUT: boolean::select(anon_heap_untrustedInputMessage_helper, result_1, <created>) = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (builtin "Use Dependency Contract" (formula "10") (term "2,0,1,0") (ifInst ""  (formula "30") (term "2")) (ifInst ""  (formula "8")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                           (builtin "Use Dependency Contract" (formula "13") (term "0,1,0") (ifInst ""  (formula "22") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                           (rule "wellFormedStorePrimitive" (formula "21") (term "1,0,0"))
                           (rule "wellFormedAnonEQ" (formula "21") (term "0,0,0") (ifseqformula "8"))
                           (rule "commuteUnion" (formula "21") (term "1,1,1,0,1,0"))
                           (rule "commuteUnion" (formula "21") (term "1,1,0,1,0"))
                           (rule "commuteUnion" (formula "21") (term "0,1,0"))
                           (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "6")))
                           (rule "disjointToElementOf" (formula "21") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                           (rule "associativeLawUnion" (formula "21") (term "0,2,0,0,0,0,1,0"))
                           (rule "associativeLawUnion" (formula "21") (term "0,0,2,0,0,0,0,1,0"))
                           (rule "wellFormedMemsetArrayPrimitive" (formula "21") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                           (rule "wellFormedStorePrimitive" (formula "21") (term "0,0"))
                           (rule "wellFormedCreate" (formula "21") (term "0,0"))
                           (rule "wellFormedAnonEQ" (formula "21") (term "0,0") (ifseqformula "8"))
                           (rule "replace_known_left" (formula "21") (term "1,0,0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "6")))
                           (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0"))
                           (rule "elementOfUnion" (formula "21") (term "0,0,0,0,0,0,0"))
                           (rule "elementOfSingleton" (formula "21") (term "1,0,0,0,0,0,0,0"))
                           (rule "elementOfArrayRange" (formula "21") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                           (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "nnf_notOr" (formula "21") (term "0,0,0,0"))
                           (rule "nnf_notOr" (formula "21") (term "0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0"))
                           (rule "nnf_notOr" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "1,0,0,0,0,0,0"))
                           (rule "nnf_notEx" (formula "21") (term "1,0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "21") (term "1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                           (rule "cut_direct" (formula "21") (term "1"))
                           (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "applyEq" (formula "18") (term "2,1,0,0,0") (ifseqformula "21"))
                              (rule "applyEq" (formula "1") (term "2") (ifseqformula "21"))
                              (rule "close" (formula "23") (ifseqformula "1"))
                           )
                           (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "allRight" (formula "21") (inst "sk=ov_5"))
                              (rule "allRight" (formula "21") (inst "sk=fv_5"))
                              (rule "orRight" (formula "21"))
                              (rule "notRight" (formula "22"))
                              (rule "eqSymm" (formula "22") (term "0,0,0,0,1,0,0,0"))
                              (rule "andRight" (formula "22"))
                              (branch
                                 (rule "andRight" (formula "22"))
                                 (branch
                                    (rule "andRight" (formula "22"))
                                    (branch
                                       (rule "orRight" (formula "22"))
                                       (rule "notRight" (formula "22"))
                                       (rule "allRight" (formula "23") (inst "sk=iv_5"))
                                       (rule "orRight" (formula "23"))
                                       (rule "orRight" (formula "23"))
                                       (rule "notRight" (formula "23"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "25"))
                                       (rule "inEqSimp_leqRight" (formula "25"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                       (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "36")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                    (branch
                                       (rule "orRight" (formula "22"))
                                       (rule "notRight" (formula "22"))
                                       (rule "notRight" (formula "23"))
                                       (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                       (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "22"))
                                    (rule "notRight" (formula "22"))
                                    (rule "notRight" (formula "23"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                    (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch
                                 (rule "orRight" (formula "22"))
                                 (rule "notRight" (formula "23"))
                                 (rule "notRight" (formula "23"))
                                 (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                 (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: o_0 = null FALSE"
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "notRight" (formula "26"))
                     (rule "replace_known_left" (formula "27") (term "0,1,1,0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")) (ifInst ""  (formula "1")) (ifInst ""  (formula "26")))
                     (rule "commute_and" (formula "27") (term "0,0,0,0,0"))
                     (rule "ifthenelse_split" (formula "27") (term "2,2,2,2,0"))
                     (branch "f_0 = <transactionConditionallyUpdated> & o_0 = x_arr_2 TRUE"
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "andLeft" (formula "1"))
                        (rule "replace_known_left" (formula "29") (term "0,0,0,2,2,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                        (rule "applyEq" (formula "29") (term "2,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "28") (term "0") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "28") (term "0,0,0,1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                        (rule "close" (formula "24") (ifseqformula "3"))
                     )
                     (branch "f_0 = <transactionConditionallyUpdated> & o_0 = x_arr_2 FALSE"
                        (rule "allLeft" (formula "10") (inst "t=o_0"))
                        (rule "replace_known_left" (formula "10") (term "0,1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "cut_direct" (formula "14") (term "0,0"))
                        (branch "CUT: result_1.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "ifthenelse_split" (formula "29") (term "2,2,2,2,2,0"))
                           (branch "f_0 = <created> & o_0 = x_arr_2 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "31") (term "1,0,2,2,2,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                              (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "31") (term "0,0,2,2,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "eqSymm" (formula "31"))
                              (rule "applyEqRigid" (formula "28") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                              (rule "close" (formula "25") (ifseqformula "3"))
                           )
                           (branch "f_0 = <created> & o_0 = x_arr_2 FALSE"
                              (rule "allLeft" (formula "10") (inst "t=f_0"))
                              (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "notLeft" (formula "10"))
                              (rule "ifthenelse_split" (formula "31") (term "2,2,2,0"))
                              (branch "f_0 = <initialized> & o_0 = x_arr_2 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "replace_known_left" (formula "33") (term "1,0,2,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                                 (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "replace_known_right" (formula "33") (term "0,0,1,0,0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "32")))
                                 (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "false_right" (formula "31"))
                                 (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "false_right" (formula "31"))
                                 (rule "applyEq" (formula "31") (term "2,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                 (rule "close" (formula "26") (ifseqformula "3"))
                              )
                              (branch "f_0 = <initialized> & o_0 = x_arr_2 FALSE"
                                 (rule "replace_known_right" (formula "32") (term "0,2,0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "cut_direct" (formula "29") (term "1"))
                                 (branch "CUT: o_0 = x_arr_2 TRUE"
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "replace_known_left" (formula "33") (term "1,0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "replace_known_right" (formula "33") (term "0,0,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "31")) (ifInst ""  (formula "31")))
                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "close" (formula "25") (ifseqformula "2"))
                                 )
                                 (branch "CUT: o_0 = x_arr_2 FALSE"
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "false_right" (formula "30"))
                                    (rule "replace_known_right" (formula "32") (term "1,0,1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "29")) (ifInst ""  (formula "29")) (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
                                    (rule "orRight" (formula "32"))
                                    (rule "notRight" (formula "32"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "replace_known_right" (formula "35") (term "1") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "false_right" (formula "35"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
                                    (rule "false_right" (formula "32"))
                                    (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectOfStore" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectOfMemset" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectOfStore" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectOfStore" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectOfStore" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectOfCreate" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                    (rule "selectCreatedOfAnonEQ" (formula "1") (term "2,0") (ifseqformula "9"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                    (rule "true_left" (formula "1"))
                                    (builtin "Use Dependency Contract" (formula "14") (term "0,1,0") (ifInst ""  (formula "23") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                    (rule "wellFormedStorePrimitive" (formula "22") (term "1,0,0"))
                                    (rule "wellFormedAnonEQ" (formula "22") (term "0,0,0") (ifseqformula "8"))
                                    (rule "commuteUnion" (formula "22") (term "1,1,0,1,0"))
                                    (rule "commuteUnion" (formula "22") (term "0,1,1,0,1,0"))
                                    (rule "commuteUnion" (formula "22") (term "0,1,0"))
                                    (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                                    (rule "disjointToElementOf" (formula "22") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                                    (rule "associativeLawUnion" (formula "22") (term "0,2,0,0,0,0,1,0"))
                                    (rule "associativeLawUnion" (formula "22") (term "0,0,2,0,0,0,0,1,0"))
                                    (rule "wellFormedMemsetArrayPrimitive" (formula "22") (term "0,0"))
                                    (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                    (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                    (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                    (rule "wellFormedCreate" (formula "22") (term "0,0"))
                                    (rule "wellFormedAnonEQ" (formula "22") (term "0,0") (ifseqformula "8"))
                                    (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "7")))
                                    (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                                    (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0"))
                                    (rule "elementOfArrayRange" (formula "22") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                    (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "22") (term "0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,0,0,0"))
                                    (rule "nnf_notEx" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                    (rule "cut_direct" (formula "22") (term "1"))
                                    (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "19") (term "2,1,0,0,0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "1") (term "2") (ifseqformula "22"))
                                       (rule "close" (formula "24") (ifseqformula "1"))
                                    )
                                    (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "notLeft" (formula "22"))
                                       (rule "allRight" (formula "22") (inst "sk=ov_4"))
                                       (rule "allRight" (formula "22") (inst "sk=fv_4"))
                                       (rule "orRight" (formula "22"))
                                       (rule "notRight" (formula "23"))
                                       (rule "eqSymm" (formula "23") (term "0,0,0,0,1,0,0,0"))
                                       (rule "andRight" (formula "23"))
                                       (branch
                                          (rule "andRight" (formula "23"))
                                          (branch
                                             (rule "andRight" (formula "23"))
                                             (branch
                                                (rule "orRight" (formula "23"))
                                                (rule "notRight" (formula "23"))
                                                (rule "allRight" (formula "24") (inst "sk=iv_4"))
                                                (rule "orRight" (formula "24"))
                                                (rule "orRight" (formula "24"))
                                                (rule "notRight" (formula "24"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "inEqSimp_geqRight" (formula "26"))
                                                (rule "inEqSimp_leqRight" (formula "26"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                                (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                             (branch
                                                (rule "orRight" (formula "23"))
                                                (rule "notRight" (formula "23"))
                                                (rule "notRight" (formula "24"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                          (branch
                                             (rule "orRight" (formula "23"))
                                             (rule "notRight" (formula "23"))
                                             (rule "notRight" (formula "24"))
                                             (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                             (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                             (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                       (branch
                                          (rule "orRight" (formula "23"))
                                          (rule "notRight" (formula "24"))
                                          (rule "notRight" (formula "24"))
                                          (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                          (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "CUT: result_1.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "ifthenelse_split" (formula "30") (term "2,2,2,2,2,0"))
                           (branch "f_0 = <created> & o_0 = x_arr_2 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "32") (term "1,1,0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                              (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "applyEq" (formula "32") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "false_right" (formula "30"))
                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                              (rule "close" (formula "26") (ifseqformula "3"))
                           )
                           (branch "f_0 = <created> & o_0 = x_arr_2 FALSE"
                              (rule "allLeft" (formula "10") (inst "t=f_0"))
                              (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "notLeft" (formula "10"))
                              (rule "ifthenelse_split" (formula "32") (term "2,2,0"))
                              (branch " o_0 = x_arr_2 & exists int iv; (iv >= 0 & iv <= result_0 & arr(iv) = f_0) & !f_0 = <created> TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "3"))
                                 (rule "exLeft" (formula "2") (inst "sk=iv_3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "replace_known_left" (formula "37") (term "0,1,1,0,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                 (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "25")))
                                 (rule "false_right" (formula "36"))
                                 (rule "inEqSimp_commuteLeq" (formula "3"))
                                 (rule "applyEq" (formula "36") (term "2,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "26") (term "1") (ifseqformula "4"))
                                 (rule "applyEqRigid" (formula "36") (term "2,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "34") (term "0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "false_right" (formula "34"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "false_right" (formula "25"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "32") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                                 (rule "close" (formula "29") (ifseqformula "5"))
                              )
                              (branch " o_0 = x_arr_2 & exists int iv; (iv >= 0 & iv <= result_0 & arr(iv) = f_0) & !f_0 = <created> FALSE"
                                 (rule "cut_direct" (formula "30") (term "1"))
                                 (branch "CUT: o_0 = x_arr_2 TRUE"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "replace_known_left" (formula "34") (term "1,0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                    (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                                    (rule "replace_known_right" (formula "33") (term "0,1") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "1")))
                                    (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "11") (term "0,0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "close" (formula "26") (ifseqformula "2"))
                                 )
                                 (branch "CUT: o_0 = x_arr_2 FALSE"
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "false_right" (formula "31"))
                                    (rule "replace_known_right" (formula "33") (term "1,0,2,2,2,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                                    (rule "orRight" (formula "33"))
                                    (rule "notRight" (formula "33"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "34")))
                                    (rule "false_right" (formula "35"))
                                    (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "22")))
                                    (rule "false_right" (formula "33"))
                                    (rule "cut_direct" (formula "15") (term "1"))
                                    (branch "CUT: boolean::select(anon_heap_untrustedInputMessage_helper, result_1, <created>) = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfMemset" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfCreate" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                       (rule "selectCreatedOfAnonEQ" (formula "1") (term "2,0") (ifseqformula "9"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                       (rule "true_left" (formula "1"))
                                       (builtin "Use Dependency Contract" (formula "14") (term "0,1,0") (ifInst ""  (formula "23") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "1,0,0"))
                                       (rule "wellFormedAnonEQ" (formula "22") (term "0,0,0") (ifseqformula "8"))
                                       (rule "commuteUnion" (formula "22") (term "0,1,0"))
                                       (rule "commuteUnion" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "commuteUnion" (formula "22") (term "1,0,0,1,0"))
                                       (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "7")))
                                       (rule "associativeLawUnion" (formula "22") (term "0,0,1,0"))
                                       (rule "associativeLawUnion" (formula "22") (term "0,0,0,1,0"))
                                       (rule "disjointToElementOf" (formula "22") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                                       (rule "wellFormedMemsetArrayPrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedCreate" (formula "22") (term "0,0"))
                                       (rule "wellFormedAnonEQ" (formula "22") (term "0,0") (ifseqformula "8"))
                                       (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0"))
                                       (rule "elementOfArrayRange" (formula "22") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                                       (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "22") (term "0,0,0,0"))
                                       (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (rule "nnf_notEx" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "cut_direct" (formula "22") (term "1"))
                                       (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "20") (term "2,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "19") (term "2,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "1") (term "2") (ifseqformula "22"))
                                          (rule "close" (formula "24") (ifseqformula "1"))
                                       )
                                       (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "notLeft" (formula "22"))
                                          (rule "allRight" (formula "22") (inst "sk=ov_3"))
                                          (rule "allRight" (formula "22") (inst "sk=fv_3"))
                                          (rule "orRight" (formula "22"))
                                          (rule "notRight" (formula "23"))
                                          (rule "eqSymm" (formula "23") (term "0,0,0,0,1,0,0,0"))
                                          (rule "andRight" (formula "23"))
                                          (branch
                                             (rule "andRight" (formula "23"))
                                             (branch
                                                (rule "andRight" (formula "23"))
                                                (branch
                                                   (rule "orRight" (formula "23"))
                                                   (rule "notRight" (formula "23"))
                                                   (rule "allRight" (formula "24") (inst "sk=iv_2"))
                                                   (rule "orRight" (formula "24"))
                                                   (rule "orRight" (formula "24"))
                                                   (rule "notRight" (formula "24"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "26"))
                                                   (rule "inEqSimp_leqRight" (formula "26"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                   (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "36")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch
                                                   (rule "orRight" (formula "23"))
                                                   (rule "notRight" (formula "23"))
                                                   (rule "notRight" (formula "24"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch
                                                (rule "orRight" (formula "23"))
                                                (rule "notRight" (formula "23"))
                                                (rule "notRight" (formula "24"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                          (branch
                                             (rule "orRight" (formula "23"))
                                             (rule "notRight" (formula "24"))
                                             (rule "notRight" (formula "24"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                             (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                             (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                    )
                                    (branch "CUT: boolean::select(anon_heap_untrustedInputMessage_helper, result_1, <created>) = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfMemset" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfStore" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectOfCreate" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                       (rule "selectCreatedOfAnonEQ" (formula "1") (term "2,0") (ifseqformula "9"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                       (rule "true_left" (formula "1"))
                                       (builtin "Use Dependency Contract" (formula "14") (term "0,1,0") (ifInst ""  (formula "24") (term "2")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "1,0,0"))
                                       (rule "wellFormedAnonEQ" (formula "22") (term "0,0,0") (ifseqformula "8"))
                                       (rule "commuteUnion" (formula "22") (term "0,1,0"))
                                       (rule "commuteUnion" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "commuteUnion" (formula "22") (term "1,0,0,1,0"))
                                       (rule "replace_known_left" (formula "22") (term "1,0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                                       (rule "disjointToElementOf" (formula "22") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
                                       (rule "associativeLawUnion" (formula "22") (term "0,2,0,0,0,0,1,0"))
                                       (rule "associativeLawUnion" (formula "22") (term "0,0,2,0,0,0,0,1,0"))
                                       (rule "wellFormedMemsetArrayPrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedStorePrimitive" (formula "22") (term "0,0"))
                                       (rule "wellFormedCreate" (formula "22") (term "0,0"))
                                       (rule "wellFormedAnonEQ" (formula "22") (term "0,0") (ifseqformula "8"))
                                       (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "6")))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (rule "elementOfUnion" (formula "22") (term "0,0,0,0,0,0,0"))
                                       (rule "elementOfSingleton" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                       (rule "elementOfArrayRange" (formula "22") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
                                       (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "22") (term "0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0"))
                                       (rule "nnf_notOr" (formula "22") (term "0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "1,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,0,0,0"))
                                       (rule "nnf_notEx" (formula "22") (term "1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
                                       (rule "cut_direct" (formula "22") (term "1"))
                                       (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "20") (term "2,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "19") (term "2,1,0,0,0") (ifseqformula "22"))
                                          (rule "applyEq" (formula "1") (term "2") (ifseqformula "22"))
                                          (rule "close" (formula "25") (ifseqformula "1"))
                                       )
                                       (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "notLeft" (formula "22"))
                                          (rule "allRight" (formula "22") (inst "sk=ov_2"))
                                          (rule "allRight" (formula "22") (inst "sk=fv_2"))
                                          (rule "orRight" (formula "22"))
                                          (rule "notRight" (formula "23"))
                                          (rule "eqSymm" (formula "23") (term "0,0,0,0,1,0,0,0"))
                                          (rule "andRight" (formula "23"))
                                          (branch
                                             (rule "andRight" (formula "23"))
                                             (branch
                                                (rule "andRight" (formula "23"))
                                                (branch
                                                   (rule "orRight" (formula "23"))
                                                   (rule "notRight" (formula "23"))
                                                   (rule "allRight" (formula "24") (inst "sk=iv_1"))
                                                   (rule "orRight" (formula "24"))
                                                   (rule "orRight" (formula "24"))
                                                   (rule "notRight" (formula "24"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "26"))
                                                   (rule "inEqSimp_leqRight" (formula "26"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                   (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "37")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                                                   (rule "closeFalse" (formula "5"))
                                                )
                                                (branch
                                                   (rule "orRight" (formula "23"))
                                                   (rule "notRight" (formula "23"))
                                                   (rule "notRight" (formula "24"))
                                                   (rule "applyEq" (formula "3") (term "1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                   (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                   (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                             (branch
                                                (rule "orRight" (formula "23"))
                                                (rule "notRight" (formula "23"))
                                                (rule "notRight" (formula "24"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                                (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                          (branch
                                             (rule "orRight" (formula "23"))
                                             (rule "notRight" (formula "24"))
                                             (rule "notRight" (formula "24"))
                                             (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                                             (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Exceptional Post (untrustedInputMessage_helper)"
            (builtin "One Step Simplification" (formula "11"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "andLeft" (formula "11"))
            (rule "selectCreatedOfAnonEQ" (formula "12") (term "0,1,0") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "14"))
            (rule "notLeft" (formula "12"))
            (rule "close" (formula "15") (ifseqformula "14"))
         )
         (branch "Pre (untrustedInputMessage_helper)"
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
            (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
            (rule "disjointToElementOf" (formula "13") (term "0") (inst "ov=ov") (inst "fv=fv"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfStore" (formula "13") (term "0,1,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfMemset" (formula "13") (term "0,1,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "wellFormedMemsetArrayPrimitive" (formula "13") (term "0,1"))
            (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
            (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
            (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
            (rule "wellFormedCreate" (formula "13") (term "0,1"))
            (rule "wellFormedAnonEQ" (formula "13") (term "0,1") (ifseqformula "6"))
            (rule "replace_known_left" (formula "13") (term "1,0,1") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "4")))
            (rule "selectOfStore" (formula "13") (term "0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfStore" (formula "13") (term "0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfStore" (formula "13") (term "0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "selectOfCreate" (formula "13") (term "0,1"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
            (rule "castDel" (formula "13") (term "0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "allRight" (formula "13") (inst "sk=ov_0"))
            (rule "allRight" (formula "13") (inst "sk=fv_0"))
            (rule "orRight" (formula "13"))
            (rule "notRight" (formula "13"))
            (rule "notRight" (formula "14"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
            (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfStore" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfMemset" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfStore" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfStore" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfStore" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "selectOfCreate" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "castDel" (formula "1") (term "0"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (builtin "Use Dependency Contract" (formula "1") (term "2") (ifInst ""  (formula "11") (term "2,0,1,0,0,0")) (contract "de.uni.trier.infsec.environment.Environment[de.uni.trier.infsec.environment.Environment::$envLocs()].JML accessible clause.0"))
            (rule "wellFormedStorePrimitive" (formula "12") (term "1,0,0"))
            (rule "wellFormedAnonEQ" (formula "12") (term "0,0,0") (ifseqformula "8"))
            (rule "commuteUnion" (formula "12") (term "1,1,1,0,1,0"))
            (rule "commuteUnion" (formula "12") (term "1,1,0,1,0"))
            (rule "commuteUnion" (formula "12") (term "0,1,0"))
            (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "7")))
            (rule "associativeLawUnion" (formula "12") (term "0,0,1,0"))
            (rule "associativeLawUnion" (formula "12") (term "0,0,0,1,0"))
            (rule "disjointToElementOf" (formula "12") (term "1,0") (inst "ov=ov") (inst "fv=fv"))
            (rule "wellFormedMemsetArrayPrimitive" (formula "12") (term "0,0"))
            (rule "wellFormedStorePrimitive" (formula "12") (term "0,0"))
            (rule "wellFormedStorePrimitive" (formula "12") (term "0,0"))
            (rule "wellFormedStorePrimitive" (formula "12") (term "0,0"))
            (rule "wellFormedCreate" (formula "12") (term "0,0"))
            (rule "wellFormedAnonEQ" (formula "12") (term "0,0") (ifseqformula "8"))
            (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "6")))
            (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0"))
            (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0"))
            (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,0"))
            (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,0"))
            (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,0"))
            (rule "elementOfUnion" (formula "12") (term "0,0,0,0,0,0,0"))
            (rule "elementOfArrayRange" (formula "12") (term "0,0,0,0,0,0,0,0") (inst "iv=iv"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
            (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "12") (term "0,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "1,0,0,0,0"))
            (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "1,0,0,0,0,0"))
            (rule "nnf_notOr" (formula "12") (term "0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "1,0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0,0,0,0,0,0"))
            (rule "nnf_notEx" (formula "12") (term "1,0,0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,0,0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "12") (term "1,1,0,0,1,0,0,0,0,0,0,0"))
            (rule "cut_direct" (formula "12") (term "1"))
            (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) TRUE"
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "applyEq" (formula "1") (term "2") (ifseqformula "12"))
               (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "1"))
               (rule "selectCreatedOfAnonEQ" (formula "1") (term "0,1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: de.uni.trier.infsec.environment.Environment::$envLocs(store(memset(store(store(store(create(heapAfter_untrustedInput, x_arr_2), x_arr_2, <transient>, 0), x_arr_2, <transactionConditionallyUpdated>, FALSE), x_arr_2, <initialized>, FALSE), arrayRange(x_arr_2, 0, result_0), 0), x_arr_2, <initialized>, TRUE)) = de.uni.trier.infsec.environment.Environment::$envLocs(heapAfter_untrustedInput) FALSE"
               (builtin "One Step Simplification" (formula "12"))
               (rule "notLeft" (formula "12"))
               (rule "allRight" (formula "12") (inst "sk=ov_1"))
               (rule "allRight" (formula "12") (inst "sk=fv_1"))
               (rule "orRight" (formula "12"))
               (rule "notRight" (formula "13"))
               (rule "eqSymm" (formula "13") (term "0,0,0,0,1,0,0,0"))
               (rule "andRight" (formula "13"))
               (branch
                  (rule "andRight" (formula "13"))
                  (branch
                     (rule "andRight" (formula "13"))
                     (branch
                        (rule "orRight" (formula "13"))
                        (rule "notRight" (formula "13"))
                        (rule "allRight" (formula "14") (inst "sk=iv_0"))
                        (rule "orRight" (formula "14"))
                        (rule "orRight" (formula "14"))
                        (rule "notRight" (formula "14"))
                        (rule "eqSymm" (formula "1"))
                        (rule "inEqSimp_geqRight" (formula "16"))
                        (rule "inEqSimp_leqRight" (formula "16"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                        (rule "applyEq" (formula "5") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "5"))
                        (rule "selectCreatedOfAnonEQ" (formula "5") (term "0,1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "21")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
                        (rule "closeFalse" (formula "5"))
                     )
                     (branch
                        (rule "orRight" (formula "13"))
                        (rule "notRight" (formula "13"))
                        (rule "notRight" (formula "14"))
                        (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                        (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
                  (branch
                     (rule "orRight" (formula "13"))
                     (rule "notRight" (formula "13"))
                     (rule "notRight" (formula "14"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                     (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "1"))
                     (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                     (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                     (rule "closeFalse" (formula "3"))
                  )
               )
               (branch
                  (rule "orRight" (formula "13"))
                  (rule "notRight" (formula "14"))
                  (rule "notRight" (formula "14"))
                  (rule "applyEq" (formula "3") (term "1") (ifseqformula "2"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                  (rule "onlyCreatedObjectsAreObservedInLocSets" (formula "3"))
                  (rule "selectCreatedOfAnonEQ" (formula "3") (term "0,1") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
                  (rule "closeFalse" (formula "3"))
               )
            )
         )
      )
      (branch "Null Reference (newObject = null)"
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Exceptional Post (untrustedInput)"
   (builtin "One Step Simplification" (formula "3"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "andLeft" (formula "3"))
   (rule "selectCreatedOfAnonEQ" (formula "4") (term "0,1,0") (ifseqformula "3"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "4"))
   (rule "close" (formula "7") (ifseqformula "6"))
)
(branch "Pre (untrustedInput)"
   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "2"))
)
)

}
