\settings {
"#Proof-Settings-Config-File
#Wed Oct 24 18:15:26 CEST 2012
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]RETREAT_MODE_OPTIONS_KEY=RETREAT_MODE_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\\:ban
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[View]HideIntermediateProofsteps=true
[View]HideClosedSubtrees=true
[General]UseOCL=false
[View]ShowWholeTaclet=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMinimum=-2147483645
[General]StupidMode=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[General]OneStepSimplification=true
[General]UseJML=true
[SMTSettings]integersMaximum=2147483645
[General]DnDDirectionSensitive=true
[View]FontIndex=2
[View]UseSystemLookAndFeel=false
[SMTSettings]useUninterpretedMultiplication=true
[Strategy]MaximumNumberOfAutomaticApplications=1000
[View]MaxTooltipLines=40
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[SMTSettings]explicitTypeHierarchy=false
"
}

\bootclasspath "../stubs";

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Oct 24 18:15:26 CEST 2012
name=de.uni.trier.infsec.protocols.trivvoting.PassiveAdvSetup[de.uni.trier.infsec.protocols.trivvoting.PassiveAdvSetup\\:\\:result([B)].JML normal_behavior operation contract.0
contract=de.uni.trier.infsec.protocols.trivvoting.PassiveAdvSetup[de.uni.trier.infsec.protocols.trivvoting.PassiveAdvSetup\\:\\:result([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "christoph" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "18849")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "assignment" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "eqSymm" (formula "4") (term "0,1,0,0,0,1"))
(rule "eqSymm" (formula "4") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "4") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "1") (ifseqformula "3"))
(builtin "One Step Simplification" (formula "2"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_result"))
(builtin "One Step Simplification" (formula "4"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "result_1"))
(rule "instanceCreationAssignment" (formula "4") (term "1") (inst "#v0=r"))
(rule "variableDeclarationAssign" (formula "4") (term "1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "r"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=r_1"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "r_1"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_<createObject>"))
(builtin "One Step Simplification" (formula "4"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=r_2"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "r_2"))
(rule "allocateInstance" (formula "4"))
(builtin "One Step Simplification" (formula "5"))
(builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<create>"))
(builtin "One Step Simplification" (formula "7"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodCallWithinClass" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepareEnter>"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodCallSuper" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<prepare>"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "7") (term "1"))
(rule "methodCallReturn" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodCallSuper" (formula "7") (term "1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<init>"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "assignment" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "blockEmpty" (formula "7") (term "1"))
(rule "assignment_write_attribute" (formula "7"))
(branch "Normal Execution (r != null)"
   (builtin "One Step Simplification" (formula "7"))
   (rule "assignment" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "for_to_while" (formula "7") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "i"))
   (rule "assignment" (formula "7") (term "1"))
   (builtin "One Step Simplification" (formula "7"))
   (builtin "Loop Invariant" (formula "7") (newnames "heapBeforeLoop,iBeforeLoop,i_0,anon_heap_loop,o,f,variant,b"))
   (branch "Invariant Initially Valid"
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "4")) (ifInst ""  (formula "6")))
      (rule "wellFormedStorePrimitive" (formula "7") (term "1,1,1"))
      (rule "bsum_lower_equals_upper" (formula "7") (term "1,1,0,1"))
      (rule "bsum_lower_equals_upper" (formula "7") (term "1,1,0,0,1"))
      (rule "wellFormedStorePrimitive" (formula "7") (term "1,1,1"))
      (rule "wellFormedStorePrimitive" (formula "7") (term "1,1,1"))
      (rule "wellFormedCreate" (formula "7") (term "1,1,1"))
      (rule "leq_literals" (formula "7") (term "0,0,0,0,1"))
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")))
      (rule "translateJavaSubInt" (formula "7") (term "1,0"))
      (rule "polySimp_elimSub" (formula "7") (term "1,0"))
      (rule "mul_literals" (formula "7") (term "1,1,0"))
      (rule "add_zero_right" (formula "7") (term "1,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0"))
      (rule "selectOfStore" (formula "7") (term "0,0,1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "7") (term "0,1,0,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "7") (term "0,1,0,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "castDel" (formula "7") (term "0,1,0,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "7") (term "0,1,0,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "7") (term "0,1,0,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "7") (term "0,1,0,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "castDel" (formula "7") (term "0,1,0,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "7") (term "0,1,1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "7") (term "0,1,1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "7") (term "0,0,1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "7") (term "0,0,1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfCreate" (formula "7") (term "0,0,1,1"))
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "4")))
      (rule "castDel" (formula "7") (term "0,0,1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "7") (term "0,1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfCreate" (formula "7") (term "0,1,1"))
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "4")))
      (rule "castDel" (formula "7") (term "1,0,1,1"))
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "3")))
      (rule "inEqSimp_geqRight" (formula "7"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Body Preserves Invariant"
      (builtin "One Step Simplification" (formula "9"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "b_2"))
      (rule "blockThrow" (formula "13") (term "1,0,0,1,0,1"))
      (rule "blockThrow" (formula "13") (term "1,0,0,1,0,1"))
      (rule "variableDeclarationAssign" (formula "13") (term "1,0,1"))
      (rule "variableDeclaration" (formula "13") (term "1,0,1") (newnames "exc_1"))
      (rule "assignment" (formula "13") (term "1,0,1"))
      (rule "variableDeclaration" (formula "13") (term "1,1,0,1") (newnames "thrownExc"))
      (rule "translateJavaSubInt" (formula "9") (term "1"))
      (rule "eqSymm" (formula "8"))
      (rule "commuteUnion" (formula "7") (term "1,0,0"))
      (rule "commuteUnion" (formula "7") (term "1,0,0,0,2,1"))
      (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,0,1,1,0,1"))
      (rule "eqSymm" (formula "13") (term "1,0,0,1,0,1,1,0,1,1,0,1"))
      (rule "translateJavaSubInt" (formula "13") (term "0,1,1,1,1,0,1,1,0,1"))
      (rule "translateJavaSubInt" (formula "13") (term "0,1,1,1,0"))
      (rule "commuteUnion" (formula "13") (term "1,0,1,0,1,1,0"))
      (rule "commuteUnion" (formula "13") (term "2,0,0,0,0,1,0,1,1,0,1,1,0,1"))
      (rule "eqSymm" (formula "13") (term "1,0,0,1,1,0,1,1,0,1"))
      (rule "eqSymm" (formula "13") (term "1,0,0,0,1,1,0,1,1,0,1"))
      (rule "commuteUnion" (formula "8") (term "1,0,1"))
      (rule "commuteUnion" (formula "8") (term "1,0,0,0,2,0"))
      (rule "eqSymm" (formula "7"))
      (rule "polySimp_elimSub" (formula "9") (term "1"))
      (rule "polySimp_elimSub" (formula "13") (term "1,0,1,1,1,0,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "13") (term "0,1,1,1,1,0,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "13") (term "0,1,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,1,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,1,1,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "6"))
      (rule "inEqSimp_commuteLeq" (formula "5"))
      (rule "polySimp_addComm0" (formula "9") (term "1"))
      (rule "polySimp_addComm0" (formula "13") (term "1,0,1,1,1,0,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "13") (term "0,1,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "13") (term "1,0,1,1,1,1,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0,1,1,0,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,1,0,1,1,0,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,1,1,1,1,0,1,1,0,1"))
      (rule "inEqSimp_homoInEq0" (formula "9"))
      (rule "mul_literals" (formula "9") (term "1,0"))
      (rule "add_zero_right" (formula "9") (term "0"))
      (rule "inEqSimp_homoInEq0" (formula "13") (term "0,1,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "13") (term "1,0,0,1,1,1,0,1,1,0,1"))
      (rule "add_zero_right" (formula "13") (term "0,0,1,1,1,0,1,1,0,1"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "bsum_positive1" (formula "7") (term "0"))
      (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,1,1,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,1,1,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,1,1,1,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,1,1,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,1,1,1,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "15") (term "0,1,1,1,1,1,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,1,0,1,1,0,1"))
      (rule "mul_literals" (formula "15") (term "0,0,1,1,1,1,1,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "15") (term "1,0,1,1,1,1,1,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1"))
      (rule "polySimp_elimOne" (formula "11") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,1,1,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "14") (term "1,0,1,1,1,0,1,1,0,1"))
      (rule "elementOfUnion" (formula "14") (term "0,0,0,0,1,0,1,1,0,1,1,0,1"))
      (rule "elementOfSingleton" (formula "14") (term "1,0,0,0,0,1,0,1,1,0,1,1,0,1"))
      (rule "elementOfSingleton" (formula "14") (term "0,0,0,0,0,1,0,1,1,0,1,1,0,1"))
      (rule "selectOfAnon" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfAnon" (formula "8") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "14")))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "selectOfAnon" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "12")) (ifInst ""  (formula "10")))
      (rule "true_left" (formula "9"))
      (rule "selectOfAnon" (formula "7") (term "0"))
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "11")))
      (rule "selectOfStore" (formula "10") (term "0,0,1,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "10")))
      (rule "true_left" (formula "9"))
      (rule "elementOfUnion" (formula "8") (term "0,0,0,0,2,0"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "elementOfSingleton" (formula "9") (term "1,0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "elementOfSingleton" (formula "9") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "ifthenelse_negated" (formula "9") (term "0,0,2,0"))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "selectOfStore" (formula "7") (term "2,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "11") (term "2,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "bsum_positive1" (formula "11") (term "0"))
      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
      (rule "selectOfStore" (formula "10") (term "2,0"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")))
      (rule "true_left" (formula "10"))
      (rule "selectOfAnon" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "12")))
      (rule "selectOfAnon" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "12")))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "elementOfUnion" (formula "7") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "7") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "11") (term "2,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "castDel" (formula "11") (term "2,1"))
      (rule "bsum_positive1" (formula "11") (term "0"))
      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
      (rule "selectOfStore" (formula "10") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "8") (term "2,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "selectOfAnon" (formula "13") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")))
      (rule "bsum_positive1" (formula "13") (term "0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
      (rule "elementOfUnion" (formula "12") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "elementOfSingleton" (formula "12") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "selectOfStore" (formula "11") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "selectOfStore" (formula "8") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "elementOfUnion" (formula "9") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "9") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")))
      (rule "true_left" (formula "9"))
      (rule "elementOfUnion" (formula "12") (term "0,0,0,0,2,0"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "bsum_positive1" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "elementOfSingleton" (formula "13") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "bsum_positive1" (formula "13") (term "0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
      (rule "ifthenelse_negated" (formula "13") (term "0,0,2,0"))
      (rule "bsum_positive1" (formula "13") (term "0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
      (rule "selectOfStore" (formula "10") (term "2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "castDel" (formula "10") (term "2,0"))
      (rule "selectOfStore" (formula "8") (term "2,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "selectOfStore" (formula "9") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "elementOfUnion" (formula "13") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "13") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "elementOfSingleton" (formula "13") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
      (rule "true_left" (formula "13"))
      (rule "selectOfStore" (formula "13") (term "0,0,1,0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "bsum_positive1" (formula "13") (term "0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
      (rule "elementOfUnion" (formula "11") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "11") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "elementOfSingleton" (formula "11") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "12")))
      (rule "true_left" (formula "11"))
      (rule "selectOfStore" (formula "8") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "selectOfStore" (formula "10") (term "2,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "elementOfUnion" (formula "9") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "9") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")))
      (rule "true_left" (formula "9"))
      (rule "selectOfStore" (formula "13") (term "1,0,0,2,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "bsum_positive1" (formula "13") (term "0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
      (rule "elementOfUnion" (formula "12") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "elementOfSingleton" (formula "12") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
      (rule "true_left" (formula "12"))
      (rule "elementOfUnion" (formula "8") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "8") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "elementOfSingleton" (formula "8") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")))
      (rule "true_left" (formula "8"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "selectOfStore" (formula "8") (term "2,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "selectOfStore" (formula "12") (term "0,0,1,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "bsum_positive1" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "elementOfUnion" (formula "10") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "10") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "8") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "bsum_positive1" (formula "13") (term "0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
      (rule "selectOfCreate" (formula "12") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "14")))
      (rule "castDel" (formula "12") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "selectOfStore" (formula "10") (term "1,0,0,2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfStore" (formula "9") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "8") (term "2,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "castDel" (formula "8") (term "2,0"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "bsum_positive1" (formula "13") (term "0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
      (rule "elementOfUnion" (formula "12") (term "0,0"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "elementOfSingleton" (formula "12") (term "0,0"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
      (rule "true_left" (formula "12"))
      (rule "selectOfStore" (formula "10") (term "1,0,0,2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfStore" (formula "9") (term "2,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "selectOfStore" (formula "8") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "selectOfStore" (formula "13") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "bsum_positive1" (formula "13") (term "0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
      (rule "elementOfUnion" (formula "12") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "12") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
      (rule "true_left" (formula "12"))
      (rule "selectOfStore" (formula "10") (term "1,0,0,2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfStore" (formula "9") (term "2,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "castDel" (formula "9") (term "2,0"))
      (rule "selectOfStore" (formula "8") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "9")))
      (rule "true_left" (formula "8"))
      (rule "selectOfCreate" (formula "11") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "12")))
      (rule "castDel" (formula "11") (term "1,0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "3")))
      (rule "bsum_positive1" (formula "11") (term "0"))
      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
      (rule "selectOfCreate" (formula "9") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "13")))
      (rule "castDel" (formula "9") (term "1,0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "selectOfCreate" (formula "8") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "13")))
      (rule "castDel" (formula "8") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "selectOfStore" (formula "12") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "bsum_positive1" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "elementOfUnion" (formula "11") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "11") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
      (rule "true_left" (formula "11"))
      (rule "selectOfCreate" (formula "9") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "12")))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "elementOfUnion" (formula "8") (term "0,0"))
      (rule "elementOfSingleton" (formula "8") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")))
      (rule "true_left" (formula "8"))
      (rule "selectOfStore" (formula "10") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfCreate" (formula "11") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "12")))
      (rule "bsum_positive1" (formula "11") (term "0"))
      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
      (rule "elementOfUnion" (formula "10") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "10") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
      (rule "true_left" (formula "10"))
      (rule "selectOfCreate" (formula "10") (term "0,0,1,0,1"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")))
      (rule "castDel" (formula "10") (term "0,0,1,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "elementOfUnion" (formula "11") (term "0,1"))
      (rule "elementOfSingleton" (formula "11") (term "0,0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "bsum_positive1" (formula "11") (term "0"))
      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
      (rule "elementOfUnion" (formula "10") (term "0,0"))
      (rule "elementOfSingleton" (formula "10") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
      (rule "true_left" (formula "10"))
      (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_2"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_3"))
      (rule "assignment_read_length" (formula "14"))
      (branch "Normal Execution (_choices != null)"
         (builtin "One Step Simplification" (formula "14"))
         (rule "arrayLengthNotNegative" (formula "6") (term "0"))
         (rule "arrayLengthIsAShort" (formula "7") (term "0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "less_than_comparison_simple" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,0"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "emptyModality" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "impRight" (formula "15"))
         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
         (rule "add_literals" (formula "8") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0"))
         (rule "qeq_literals" (formula "8") (term "0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_4"))
         (rule "compound_less_than_comparison_2" (formula "15") (term "1") (inst "#v1=x_6") (inst "#v0=x_5"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_5"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_6"))
         (rule "assignment_read_length" (formula "15"))
         (branch "Normal Execution (_choices != null)"
            (builtin "One Step Simplification" (formula "15"))
            (rule "less_than_comparison_simple" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,0"))
            (rule "replace_known_left" (formula "15") (term "0,0,1,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "if" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "candidate"))
            (rule "assignment_array2" (formula "15"))
            (branch "Normal Execution (_choices != null)"
               (builtin "One Step Simplification" (formula "15"))
               (rule "selectOfAnon" (formula "15") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "replace_known_right" (formula "15") (term "0,0,1,0,0,1,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "selectOfStore" (formula "15") (term "2,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "selectOfStore" (formula "15") (term "2,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "elementOfUnion" (formula "15") (term "0,0,0,1,0"))
               (rule "elementOfSingleton" (formula "15") (term "0,0,0,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "elementOfSingleton" (formula "15") (term "0,0,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "ifthenelse_negated" (formula "15") (term "0,1,0"))
               (rule "selectOfStore" (formula "15") (term "1,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "selectOfStore" (formula "15") (term "0,0,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "selectOfCreate" (formula "15") (term "1,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "selectOfStore" (formula "15") (term "0,0,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "selectOfStore" (formula "15") (term "0,0,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "selectOfCreate" (formula "15") (term "0,0,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "castDel" (formula "15") (term "1,0,0,0,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "replace_known_right" (formula "15") (term "0,1,0,0,0,1,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "replace_known_left" (formula "15") (term "1,0,0,1,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_7"))
               (rule "equality_comparison_simple" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "if" (formula "15") (term "1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "postincrement_attribute" (formula "15") (term "1,1") (inst "#v=r"))
               (rule "variableDeclarationAssign" (formula "15") (term "1,1"))
               (rule "variableDeclaration" (formula "15") (term "1,1") (newnames "r_3"))
               (rule "assignment" (formula "15") (term "1,1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "ifUnfold" (formula "15") (term "1,2") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "15") (term "1,2") (newnames "x_8"))
               (rule "ifthenelse_split_for" (formula "15"))
               (branch "choices[i_0] = 0 TRUE"
                  (rule "eval_order_access4" (formula "16") (inst "#v1=x") (inst "#v0=r_4"))
                  (branch "Normal Execution (r_3 != null)"
                     (rule "variableDeclarationAssign" (formula "16") (term "1"))
                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "r_6"))
                     (rule "assignment" (formula "16") (term "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "variableDeclarationAssign" (formula "16") (term "1"))
                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_14"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "1"))
                     (rule "compound_int_cast_expression" (formula "16") (term "1") (inst "#v=x_15"))
                     (rule "variableDeclarationAssign" (formula "16") (term "1"))
                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_15"))
                     (rule "remove_parentheses_right" (formula "16") (term "1"))
                     (rule "compound_addition_1" (formula "16") (term "1") (inst "#v=x_16"))
                     (rule "variableDeclarationAssign" (formula "16") (term "1"))
                     (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_16"))
                     (rule "assignment_read_attribute" (formula "16"))
                     (branch "Normal Execution (r_3 != null)"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "selectOfAnon" (formula "16") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_right" (formula "16") (term "0,0,1,0,0,1,0") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "elementOfUnion" (formula "16") (term "0,0,0,1,0"))
                        (rule "elementOfSingleton" (formula "16") (term "1,0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "assignmentAdditionInt" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "16") (term "1"))
                        (rule "assignment" (formula "16") (term "1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "assignment_write_attribute" (formula "16"))
                        (branch "Normal Execution (r_6 != null)"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_17"))
                           (rule "equality_comparison_simple" (formula "16") (term "1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "equal_literals" (formula "16") (term "0,0,1,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "ifSplit" (formula "16"))
                           (branch "if x_17 true"
                              (builtin "One Step Simplification" (formula "17"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_17 false"
                              (builtin "One Step Simplification" (formula "1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "1"))
                              (rule "blockEmpty" (formula "16") (term "1"))
                              (rule "preincrement" (formula "16") (term "1"))
                              (rule "compound_int_cast_expression" (formula "16") (term "1") (inst "#v=x"))
                              (rule "variableDeclarationAssign" (formula "16") (term "1"))
                              (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_18"))
                              (rule "remove_parentheses_right" (formula "16") (term "1"))
                              (rule "assignmentAdditionInt" (formula "16") (term "1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "16") (term "1"))
                              (rule "assignment" (formula "16") (term "1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "tryEmpty" (formula "16") (term "1"))
                              (rule "methodCallEmpty" (formula "16") (term "1"))
                              (rule "emptyModality" (formula "16") (term "1"))
                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                              (rule "eqSymm" (formula "16") (term "1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,1,1"))
                              (rule "add_literals" (formula "16") (term "0,0,1,1"))
                              (rule "add_zero_left" (formula "16") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "16") (term "1,1"))
                              (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,1"))
                              (rule "add_literals" (formula "16") (term "1,0,1,1"))
                              (rule "times_zero_1" (formula "16") (term "0,1,1"))
                              (rule "add_zero_left" (formula "16") (term "1,1"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
                              (rule "add_literals" (formula "16") (term "1,0,1"))
                              (rule "times_zero_1" (formula "16") (term "0,1"))
                              (rule "qeq_literals" (formula "16") (term "1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "bsum_positive1" (formula "16") (term "0,1,0"))
                              (rule "bsum_induction_upper_concrete" (formula "17") (term "0,1,0,0"))
                              (rule "polySimp_homoEq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,1,0,0"))
                              (rule "replace_known_left" (formula "17") (term "0,0,0,1,0,1,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0"))
                              (rule "bsum_induction_upper_concrete" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "bsum_induction_upper_concrete" (formula "17") (term "0,1,0"))
                              (rule "polySimp_homoEq" (formula "17") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,1,0"))
                              (rule "replace_known_left" (formula "17") (term "0,0,0,1,0,1,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "17") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "bsum_positive1" (formula "17") (term "0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                              (rule "bsum_positive1" (formula "18") (term "0,1,0"))
                              (rule "pullOutbsum1" (formula "3") (inst "sk=sk_6"))
                              (rule "inEqSimp_commuteGeq" (formula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,0"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "3"))
                              (rule "polySimp_homoEq" (formula "20") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "20") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                              (rule "pullOutbsum1" (formula "2") (inst "sk=sk_7"))
                              (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "2"))
                              (rule "polySimp_homoEq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_subsumption1" (formula "21") (term "0,0,0") (ifseqformula "12"))
                              (rule "leq_literals" (formula "21") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "selectOfStore" (formula "4") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "selectOfStore" (formula "2") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "selectOfStore" (formula "5") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "selectOfStore" (formula "21") (term "0,0,1,1,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "selectOfAnon" (formula "4") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "selectOfAnon" (formula "2") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "selectOfAnon" (formula "5") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "20")))
                              (rule "selectOfStore" (formula "21") (term "1,1,0,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "castDel" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "1,0,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,1,0,0"))
                              (rule "elementOfUnion" (formula "4") (term "0,0,0,0,2,0"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "elementOfSingleton" (formula "4") (term "0,0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "elementOfSingleton" (formula "4") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "ifthenelse_negated" (formula "4") (term "0,0,2,0"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "selectOfStore" (formula "2") (term "0,0,1,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "selectOfStore" (formula "5") (term "2,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "selectOfStore" (formula "21") (term "0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "selectOfStore" (formula "4") (term "1,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "elementOfUnion" (formula "2") (term "0,0,0,0,2,0"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "ifthenelse_negated" (formula "2") (term "0,0,2,0"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "elementOfUnion" (formula "5") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "elementOfSingleton" (formula "5") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "ifthenelse_negated" (formula "5") (term "0,0,0"))
                              (rule "selectOfStore" (formula "21") (term "0,0,1,1,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "selectOfStore" (formula "4") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "selectOfStore" (formula "2") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "selectOfStore" (formula "5") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "selectOfStore" (formula "21") (term "1,1,1,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "selectOfStore" (formula "4") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "selectOfStore" (formula "2") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "selectOfStore" (formula "5") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "selectOfStore" (formula "21") (term "1,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "castDel" (formula "21") (term "1,1,1,0,0,1"))
                              (rule "eqSymm" (formula "21") (term "0,0,1,1,0,0,1"))
                              (rule "eqSymm" (formula "21") (term "1,0,1,1,0,0,1"))
                              (rule "eqSymm" (formula "21") (term "1,0,0,1"))
                              (rule "selectOfStore" (formula "4") (term "1,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "selectOfCreate" (formula "2") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "18")))
                              (rule "castDel" (formula "2") (term "1,0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "10")))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "selectOfStore" (formula "5") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "selectOfAnon" (formula "21") (term "1,1,1,0"))
                              (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")))
                              (rule "polySimp_homoEq" (formula "21") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "21") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "21") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,1,1,0"))
                              (rule "selectOfStore" (formula "4") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "selectOfStore" (formula "2") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "selectOfCreate" (formula "5") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "18")))
                              (rule "castDel" (formula "5") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "10")))
                              (rule "selectOfStore" (formula "21") (term "1,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "castDel" (formula "21") (term "1,1,1,0,0,1"))
                              (rule "eqSymm" (formula "21") (term "1,0,1,1,0,0,1"))
                              (rule "eqSymm" (formula "21") (term "0,0,1,1,0,0,1"))
                              (rule "selectOfStore" (formula "4") (term "1,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "selectOfStore" (formula "2") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "selectOfStore" (formula "5") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "selectOfAnon" (formula "21") (term "2,1,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "eqSymm" (formula "21") (term "1,0,0,1"))
                              (rule "selectOfCreate" (formula "4") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "18")))
                              (rule "castDel" (formula "4") (term "1,0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "10")))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "selectOfStore" (formula "2") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "selectOfStore" (formula "5") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "selectOfStore" (formula "21") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "selectOfCreate" (formula "4") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "18")))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "21") (term "1,0,1,0") (ifseqformula "4"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "4"))
                              (rule "selectOfCreate" (formula "2") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "17")))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "15"))
                              (rule "applyEq" (formula "20") (term "1,1,0,1,0,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "2"))
                              (rule "polySimp_pullOutFactor2b" (formula "19") (term "1,0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "equal_literals" (formula "19") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "applyEq" (formula "14") (term "1") (ifseqformula "2"))
                              (rule "selectOfCreate" (formula "5") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "16")))
                              (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "6"))
                              (rule "equal_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_commuteGeq" (formula "5"))
                              (rule "inEqSimp_invertInEq0" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "times_zero_2" (formula "5") (term "1"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "selectOfStore" (formula "18") (term "2,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "castDel" (formula "18") (term "1,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "1,0,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "0,0,2,2,0,1,0,0,1"))
                              (rule "selectOfStore" (formula "18") (term "2,1,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "castDel" (formula "18") (term "1,2,1,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "1,0,2,1,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "0,0,2,1,1,0,0,1"))
                              (rule "elementOfUnion" (formula "18") (term "0,0,0,2,0,1,0,0,1"))
                              (rule "elementOfSingleton" (formula "18") (term "1,0,0,0,2,0,1,0,0,1"))
                              (rule "elementOfSingleton" (formula "18") (term "0,0,0,0,2,0,1,0,0,1"))
                              (rule "selectOfStore" (formula "18") (term "0,0,1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "0,0,1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "2,2,1,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "castDel" (formula "18") (term "1,2,2,1,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "1,0,2,2,1,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "0,0,2,2,1,1,0,0,1"))
                              (rule "selectOfAnon" (formula "18") (term "0,0,1,1,1,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                              (rule "selectOfStore" (formula "18") (term "2,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "0,0,1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "elementOfUnion" (formula "18") (term "0,0,0,0,1,1,1,0"))
                              (rule "elementOfSingleton" (formula "18") (term "1,0,0,0,0,1,1,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "elementOfSingleton" (formula "18") (term "0,0,0,0,1,1,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "ifthenelse_negated" (formula "18") (term "0,0,1,1,1,0"))
                              (rule "elementOfUnion" (formula "18") (term "0,0,0,1,0"))
                              (rule "elementOfSingleton" (formula "18") (term "1,0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "elementOfSingleton" (formula "18") (term "0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "polySimp_homoEq" (formula "18") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "18") (term "0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "1,0,0,1,0"))
                              (rule "times_zero_1" (formula "18") (term "0,0,1,0"))
                              (rule "add_zero_left" (formula "18") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "equal_literals" (formula "18") (term "1,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfAnon" (formula "18") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                              (rule "selectOfStore" (formula "18") (term "0,0,1,1,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "2,2,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "castDel" (formula "18") (term "1,2,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "1,0,2,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "0,0,2,2,2,0,1,0,0,1"))
                              (rule "selectOfStore" (formula "18") (term "0,0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "elementOfUnion" (formula "18") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "18") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "elementOfSingleton" (formula "18") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "ifthenelse_negated" (formula "18") (term "0,0,0"))
                              (rule "selectOfStore" (formula "18") (term "0,0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfCreate" (formula "18") (term "0,0,1,1,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                              (rule "castDel" (formula "18") (term "1,0,0,1,1,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "eqSymm" (formula "18") (term "0,0,1,1,0,0,0,1"))
                              (rule "selectOfStore" (formula "18") (term "1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "2,2,2,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "castDel" (formula "18") (term "1,2,2,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "1,0,2,2,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "0,0,2,2,2,2,0,1,0,0,1"))
                              (rule "selectOfStore" (formula "18") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "0,0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfCreate" (formula "18") (term "2,2,2,1,1,0,0,1"))
                              (rule "castDel" (formula "18") (term "1,2,2,2,1,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "0,0,0,2,2,2,1,1,0,0,1"))
                              (rule "replace_known_right" (formula "18") (term "0,1,0,0,2,2,2,1,1,0,0,1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfCreate" (formula "18") (term "2,2,2,2,2,0,1,0,0,1"))
                              (rule "castDel" (formula "18") (term "1,2,2,2,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "18") (term "0,0,0,2,2,2,2,2,0,1,0,0,1"))
                              (rule "replace_known_right" (formula "18") (term "0,1,0,0,2,2,2,2,2,0,1,0,0,1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "0,0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "0,0,1,1,0,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfCreate" (formula "18") (term "1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                              (rule "applyEq" (formula "18") (term "1,0,0,1,0") (ifseqformula "5"))
                              (rule "selectOfStore" (formula "18") (term "0,0,1,1,0,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfCreate" (formula "18") (term "0,0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                              (rule "castDel" (formula "18") (term "1,0,0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "9")))
                              (rule "equal_literals" (formula "18") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfStore" (formula "18") (term "0,0,1,1,0,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "selectOfCreate" (formula "18") (term "0,0,1,1,0,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                              (rule "castDel" (formula "18") (term "1,0,0,1,1,0,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "eqSymm" (formula "18") (term "0,0,1,1,0,2,0,1,0,0,1"))
                              (rule "selectOfCreate" (formula "18") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
                              (rule "castDel" (formula "18") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "9")))
                              (rule "selectOfCreate" (formula "18") (term "0,0"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")) (ifInst ""  (formula "5")))
                              (rule "allRight" (formula "18") (inst "sk=f_3"))
                              (rule "allRight" (formula "18") (inst "sk=o_3"))
                              (rule "orRight" (formula "18"))
                              (rule "orRight" (formula "18"))
                              (rule "orRight" (formula "18"))
                              (rule "replace_known_right" (formula "21") (term "0,2,2,1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "19")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "18")))
                              (rule "closeTrue" (formula "21"))
                           )
                        )
                        (branch "Null Reference (r_6 = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Null Reference (r_3 = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (r_3 = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "choices[i_0] = 0 FALSE"
                  (rule "equality_comparison_simple" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "if" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "blockEmpty" (formula "16") (term "1,2"))
                  (rule "postincrement_attribute" (formula "16") (term "1,1") (inst "#v=r"))
                  (rule "variableDeclarationAssign" (formula "16") (term "1,1"))
                  (rule "variableDeclaration" (formula "16") (term "1,1") (newnames "r_4"))
                  (rule "assignment" (formula "16") (term "1,1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "preincrement" (formula "16") (term "1,2"))
                  (rule "ifthenelse_split_for" (formula "16"))
                  (branch "choices[i_0] = 1 TRUE"
                     (rule "eval_order_access4" (formula "17") (inst "#v1=x") (inst "#v0=r_5"))
                     (branch "Normal Execution (r_4 != null)"
                        (rule "variableDeclarationAssign" (formula "17") (term "1"))
                        (rule "variableDeclaration" (formula "17") (term "1") (newnames "r_5"))
                        (rule "assignment" (formula "17") (term "1"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "variableDeclarationAssign" (formula "17") (term "1"))
                        (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_10"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                        (rule "equal_literals" (formula "16"))
                        (rule "false_right" (formula "16"))
                        (rule "compound_int_cast_expression" (formula "16") (term "1") (inst "#v=x_11"))
                        (rule "variableDeclarationAssign" (formula "16") (term "1"))
                        (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_11"))
                        (rule "remove_parentheses_right" (formula "16") (term "1"))
                        (rule "compound_addition_1" (formula "16") (term "1") (inst "#v=x_12"))
                        (rule "variableDeclarationAssign" (formula "16") (term "1"))
                        (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_12"))
                        (rule "assignment_read_attribute" (formula "16"))
                        (branch "Normal Execution (r_4 != null)"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "selectOfAnon" (formula "16") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "replace_known_right" (formula "16") (term "0,0,1,0,0,1,0") (ifseqformula "13"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "elementOfUnion" (formula "16") (term "0,0,0,1,0"))
                           (rule "elementOfSingleton" (formula "16") (term "0,0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "assignmentAdditionInt" (formula "16") (term "1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "16") (term "1"))
                           (rule "assignment" (formula "16") (term "1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "assignment_write_attribute" (formula "16"))
                           (branch "Normal Execution (r_5 != null)"
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "blockEmpty" (formula "16") (term "1"))
                              (rule "preincrement" (formula "16") (term "1"))
                              (rule "compound_int_cast_expression" (formula "16") (term "1") (inst "#v=x"))
                              (rule "variableDeclarationAssign" (formula "16") (term "1"))
                              (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_13"))
                              (rule "remove_parentheses_right" (formula "16") (term "1"))
                              (rule "assignmentAdditionInt" (formula "16") (term "1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "translateJavaAddInt" (formula "16") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "16") (term "1"))
                              (rule "assignment" (formula "16") (term "1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "tryEmpty" (formula "16") (term "1"))
                              (rule "methodCallEmpty" (formula "16") (term "1"))
                              (rule "emptyModality" (formula "16") (term "1"))
                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                              (rule "eqSymm" (formula "16") (term "1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,1,1"))
                              (rule "add_literals" (formula "16") (term "0,0,1,1"))
                              (rule "add_zero_left" (formula "16") (term "0,1,1"))
                              (rule "polySimp_addAssoc" (formula "16") (term "1,1"))
                              (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,1"))
                              (rule "add_literals" (formula "16") (term "1,0,1,1"))
                              (rule "times_zero_1" (formula "16") (term "0,1,1"))
                              (rule "add_zero_left" (formula "16") (term "1,1"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
                              (rule "add_literals" (formula "16") (term "1,0,1"))
                              (rule "times_zero_1" (formula "16") (term "0,1"))
                              (rule "qeq_literals" (formula "16") (term "1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "bsum_positive1" (formula "16") (term "0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                              (rule "bsum_positive1" (formula "17") (term "0,1,0"))
                              (rule "bsum_induction_upper_concrete" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_homoEq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "1,1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,1,0,0"))
                              (rule "replace_known_left" (formula "18") (term "0,0,0,1,0,1,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0"))
                              (rule "pullOutbsum1" (formula "2") (inst "sk=sk_4"))
                              (rule "pullOutbsum1" (formula "1") (inst "sk=sk_5"))
                              (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "20") (term "1,0"))
                              (rule "bsum_positive1" (formula "20") (term "0,1,0,0"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "bsum_induction_upper_concrete" (formula "4") (term "0"))
                              (rule "polySimp_homoEq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "4") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
                              (rule "replace_known_left" (formula "4") (term "0,0,0,1,0") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "applyEq" (formula "21") (term "0,1,0,0") (ifseqformula "4"))
                              (rule "polySimp_homoEq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,1,0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,1,0,0"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                              (rule "bsum_induction_upper_concrete" (formula "2") (term "0"))
                              (rule "polySimp_homoEq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,1,0"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,1,0") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,0") (ifseqformula "13"))
                              (rule "leq_literals" (formula "22") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "selectOfStore" (formula "5") (term "0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "bsum_positive1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "selectOfStore" (formula "3") (term "0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "bsum_positive1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "selectOfStore" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                              (rule "true_left" (formula "1"))
                              (rule "selectOfStore" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                              (rule "true_left" (formula "1"))
                              (rule "selectOfStore" (formula "22") (term "0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "castDel" (formula "22") (term "1,0,1,0,0,1"))
                              (rule "eqSymm" (formula "22") (term "1,0,0,1,0,0,1"))
                              (rule "eqSymm" (formula "22") (term "0,0,0,1,0,0,1"))
                              (rule "selectOfAnon" (formula "5") (term "0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "21")))
                              (rule "bsum_positive1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "selectOfAnon" (formula "4") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "22")) (ifInst ""  (formula "5")))
                              (rule "true_left" (formula "4"))
                              (rule "selectOfAnon" (formula "2") (term "0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "selectOfAnon" (formula "1") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "2")))
                              (rule "true_left" (formula "1"))
                              (rule "selectOfStore" (formula "22") (term "0,0,1,1,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "selectOfStore" (formula "5") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "bsum_positive1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "selectOfStore" (formula "4") (term "2,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "selectOfStore" (formula "2") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "elementOfUnion" (formula "1") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "ifthenelse_negated" (formula "1") (term "0,0,0"))
                              (rule "selectOfStore" (formula "22") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "elementOfUnion" (formula "5") (term "0,0,0,0,0,1,1"))
                              (rule "elementOfSingleton" (formula "5") (term "0,0,0,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "bsum_positive1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                              (rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "elementOfSingleton" (formula "5") (term "0,0,0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "bsum_positive1" (formula "6") (term "0"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                              (rule "ifthenelse_negated" (formula "6") (term "0,0,0,1,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "ifthenelse_negated" (formula "5") (term "0,0,0"))
                              (rule "selectOfStore" (formula "4") (term "0,0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "selectOfAnon" (formula "2") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                              (rule "bsum_positive1" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "selectOfStore" (formula "1") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectOfStore" (formula "24") (term "0,0,1,1,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "selectOfAnon" (formula "7") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "23")))
                              (rule "bsum_positive1" (formula "7") (term "0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "selectOfStore" (formula "6") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "selectOfStore" (formula "5") (term "2,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "selectOfStore" (formula "3") (term "2,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "bsum_positive1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "elementOfUnion" (formula "2") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "2") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfSingleton" (formula "2") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "ifthenelse_negated" (formula "2") (term "0,0,0"))
                              (rule "selectOfStore" (formula "1") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectOfStore" (formula "24") (term "1,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "castDel" (formula "24") (term "1,1,1,0,0,1"))
                              (rule "eqSymm" (formula "24") (term "0,0,1,1,0,0,1"))
                              (rule "eqSymm" (formula "24") (term "1,0,1,1,0,0,1"))
                              (rule "eqSymm" (formula "24") (term "1,0,0,1"))
                              (rule "selectOfStore" (formula "7") (term "2,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "bsum_positive1" (formula "7") (term "0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "selectOfStore" (formula "6") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "selectOfStore" (formula "5") (term "2,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0,0,0,1,1"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "bsum_positive1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                              (rule "ifthenelse_negated" (formula "4") (term "0,0,0,1,1"))
                              (rule "ifthenelse_negated" (formula "3") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "selectOfStore" (formula "2") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "1") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectOfAnon" (formula "25") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                              (rule "selectOfStore" (formula "8") (term "1,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "bsum_positive1" (formula "8") (term "0"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "selectOfStore" (formula "7") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "8")))
                              (rule "true_left" (formula "7"))
                              (rule "selectOfStore" (formula "6") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "selectOfStore" (formula "5") (term "0,0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "elementOfUnion" (formula "3") (term "0,0,0,0,2,0"))
                              (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "bsum_positive1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                              (rule "ifthenelse_negated" (formula "4") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "selectOfStore" (formula "2") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "1") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "26") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "26") (term "0,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "elementOfSingleton" (formula "26") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "bsum_positive1" (formula "9") (term "0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "selectOfStore" (formula "8") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "9")))
                              (rule "true_left" (formula "8"))
                              (rule "selectOfStore" (formula "7") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "selectOfStore" (formula "6") (term "0,0,1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "selectOfStore" (formula "4") (term "1,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "selectOfStore" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                              (rule "true_left" (formula "3"))
                              (rule "selectOfStore" (formula "2") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "1") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectOfStore" (formula "26") (term "0,0,1,1,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "selectOfStore" (formula "9") (term "2,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "bsum_positive1" (formula "9") (term "0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "selectOfStore" (formula "8") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "selectOfCreate" (formula "7") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "23")))
                              (rule "applyEq" (formula "7") (term "1,0,0,0") (ifseqformula "11"))
                              (rule "elementOfUnion" (formula "6") (term "0,0,0,0,0"))
                              (rule "elementOfSingleton" (formula "6") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "ifthenelse_negated" (formula "6") (term "0,0,0"))
                              (rule "selectOfStore" (formula "4") (term "1,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "selectOfStore" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfStore" (formula "2") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "1") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectOfAnon" (formula "26") (term "2,1,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "eqSymm" (formula "26") (term "1,0,0,1"))
                              (rule "selectOfStore" (formula "9") (term "0,0,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "bsum_positive1" (formula "9") (term "0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "selectOfStore" (formula "8") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "selectOfStore" (formula "7") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "selectOfCreate" (formula "6") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "23")))
                              (rule "castDel" (formula "6") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "15")))
                              (rule "selectOfStore" (formula "4") (term "1,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "selectOfStore" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfStore" (formula "2") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfCreate" (formula "1") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                              (rule "applyEq" (formula "1") (term "1,0,0,0") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectOfCreate" (formula "26") (term "0,0,1,1,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "23")))
                              (rule "castDel" (formula "26") (term "1,0,0,1,1,0,0,0,1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "eqSymm" (formula "26") (term "0,0,1,1,0,0,0,1"))
                              (rule "elementOfUnion" (formula "9") (term "0,0,0,0,2,0"))
                              (rule "bsum_positive1" (formula "9") (term "0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                              (rule "elementOfSingleton" (formula "10") (term "0,0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "elementOfSingleton" (formula "10") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "bsum_positive1" (formula "10") (term "0"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                              (rule "ifthenelse_negated" (formula "11") (term "0,0,2,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "bsum_positive1" (formula "10") (term "0"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "selectOfStore" (formula "8") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "selectOfStore" (formula "7") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "selectOfCreate" (formula "6") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")))
                              (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "12"))
                              (rule "equal_literals" (formula "6") (term "0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_commuteLeq" (formula "6"))
                              (rule "selectOfStore" (formula "4") (term "1,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "selectOfStore" (formula "3") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfStore" (formula "2") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfCreate" (formula "1") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                              (rule "castDel" (formula "1") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                              (rule "leq_literals" (formula "5") (term "0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "selectOfStore" (formula "25") (term "2,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "castDel" (formula "25") (term "1,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "25") (term "1,0,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "25") (term "0,0,2,2,0,1,0,0,1"))
                              (rule "selectOfStore" (formula "7") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "selectOfStore" (formula "8") (term "0,0,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "bsum_positive1" (formula "8") (term "0"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "selectOfStore" (formula "6") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "selectOfCreate" (formula "5") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "23")))
                              (rule "castDel" (formula "5") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "15")))
                              (rule "equal_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_commuteLeq" (formula "5"))
                              (rule "selectOfStore" (formula "4") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "selectOfCreate" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")))
                              (rule "applyEq" (formula "3") (term "1,0,0,0") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfCreate" (formula "2") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                              (rule "applyEq" (formula "2") (term "1,0,0,0") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "26") (term "0,0,1,1,0,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "selectOfStore" (formula "7") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "selectOfStore" (formula "9") (term "1,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "bsum_positive1" (formula "9") (term "0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                              (rule "polySimp_elimOne" (formula "9") (term "0"))
                              (rule "selectOfCreate" (formula "8") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "23")))
                              (rule "castDel" (formula "8") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "15")))
                              (rule "selectOfCreate" (formula "6") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "23")))
                              (rule "castDel" (formula "6") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "15")))
                              (rule "selectOfStore" (formula "5") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "bsum_positive1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "selectOfStore" (formula "4") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "selectOfStore" (formula "3") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfCreate" (formula "2") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                              (rule "castDel" (formula "2") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "15")))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "selectOfStore" (formula "25") (term "2,1,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "castDel" (formula "25") (term "1,2,1,1,0,0,1"))
                              (rule "eqSymm" (formula "25") (term "1,0,2,1,1,0,0,1"))
                              (rule "eqSymm" (formula "25") (term "0,0,2,1,1,0,0,1"))
                              (rule "selectOfStore" (formula "6") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "selectOfCreate" (formula "8") (term "0,0,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "22")))
                              (rule "castDel" (formula "8") (term "1,0,0,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "14")))
                              (rule "bsum_positive1" (formula "8") (term "0"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "selectOfStore" (formula "7") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "selectOfCreate" (formula "5") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "22")))
                              (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "10"))
                              (rule "equal_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_commuteLeq" (formula "5"))
                              (rule "selectOfStore" (formula "4") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "selectOfCreate" (formula "3") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")))
                              (rule "applyEq" (formula "3") (term "1,0,0,0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfStore" (formula "2") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "25") (term "2,2,1,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "castDel" (formula "25") (term "1,2,2,1,1,0,0,1"))
                              (rule "eqSymm" (formula "25") (term "1,0,2,2,1,1,0,0,1"))
                              (rule "eqSymm" (formula "25") (term "0,0,2,2,1,1,0,0,1"))
                              (rule "selectOfCreate" (formula "6") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "22")))
                              (rule "castDel" (formula "6") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "14")))
                              (rule "selectOfStore" (formula "8") (term "0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "bsum_positive1" (formula "8") (term "0"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0"))
                              (rule "selectOfStore" (formula "7") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "6")))
                              (rule "true_left" (formula "7"))
                              (rule "selectOfCreate" (formula "5") (term "1,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "21")))
                              (rule "applyEq" (formula "5") (term "1,0,0,0,1,1") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "bsum_positive1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "selectOfStore" (formula "4") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "selectOfStore" (formula "3") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfCreate" (formula "2") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                              (rule "castDel" (formula "2") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "14")))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "selectOfStore" (formula "24") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "castDel" (formula "24") (term "0,1,0"))
                              (rule "polySimp_homoEq" (formula "24") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "24") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                              (rule "selectOfCreate" (formula "6") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "21")))
                              (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "9"))
                              (rule "equal_literals" (formula "6") (term "0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "inEqSimp_commuteLeq" (formula "6"))
                              (rule "selectOfCreate" (formula "6") (term "1,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "20")))
                              (rule "bsum_positive1" (formula "6") (term "0"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "selectOfStore" (formula "5") (term "1,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "bsum_positive1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "selectOfStore" (formula "4") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "selectOfStore" (formula "3") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfStore" (formula "2") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "24") (term "0,0,1,1,0,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "selectOfStore" (formula "7") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "bsum_positive1" (formula "7") (term "0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                              (rule "polySimp_elimOne" (formula "7") (term "0"))
                              (rule "selectOfStore" (formula "6") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "selectOfStore" (formula "5") (term "0,0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "bsum_positive1" (formula "5") (term "0"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "selectOfStore" (formula "4") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "selectOfStore" (formula "3") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfCreate" (formula "2") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                              (rule "castDel" (formula "2") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "selectOfCreate" (formula "23") (term "2,2,2,1,1,0,0,1"))
                              (rule "castDel" (formula "23") (term "1,2,2,2,1,1,0,0,1"))
                              (rule "eqSymm" (formula "23") (term "0,0,0,2,2,2,1,1,0,0,1"))
                              (rule "replace_known_right" (formula "23") (term "0,1,0,0,2,2,2,1,1,0,0,1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "selectOfStore" (formula "6") (term "0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "bsum_positive1" (formula "6") (term "0"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                              (rule "polySimp_elimOne" (formula "6") (term "0"))
                              (rule "selectOfCreate" (formula "5") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "20")))
                              (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "8"))
                              (rule "equal_literals" (formula "5") (term "0,0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "inEqSimp_commuteLeq" (formula "5"))
                              (rule "selectOfCreate" (formula "4") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "19")))
                              (rule "castDel" (formula "4") (term "1,0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "11")))
                              (rule "bsum_positive1" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                              (rule "selectOfStore" (formula "3") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "selectOfCreate" (formula "2") (term "0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")))
                              (rule "castDel" (formula "2") (term "1,0,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "12")))
                              (rule "selectOfStore" (formula "23") (term "0,0,1,1,0,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "selectOfCreate" (formula "6") (term "0,0,0,1,1"))
                              (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "20")))
                              (rule "applyEq" (formula "6") (term "0,0,0,1,1") (ifseqformula "8"))
                              (rule "equal_literals" (formula "6") (term "0,0,1,1"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "times_zero_2" (formula "6") (term "1,1"))
                              (rule "add_zero_right" (formula "6") (term "1"))
                              (rule "bsum_positive1" (formula "6") (term "0"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                              (rule "selectOfCreate" (formula "5") (term "0,0,2,0"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "20")))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "19"))
                              (rule "polySimp_homoEq" (formula "5"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "0,0"))
                              (rule "add_zero_left" (formula "4") (term "0"))
                              (rule "selectOfCreate" (formula "3") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")))
                              (rule "castDel" (formula "3") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "11")))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "selectOfCreate" (formula "2") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "18")) (ifInst ""  (formula "6")))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "elementOfUnion" (formula "20") (term "0,0,0,2,0,1,0,0,1"))
                              (rule "elementOfSingleton" (formula "20") (term "1,0,0,0,2,0,1,0,0,1"))
                              (rule "elementOfSingleton" (formula "20") (term "0,0,0,0,2,0,1,0,0,1"))
                              (rule "selectOfStore" (formula "20") (term "2,2,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "castDel" (formula "20") (term "1,2,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "20") (term "1,0,2,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "20") (term "0,0,2,2,2,0,1,0,0,1"))
                              (rule "selectOfStore" (formula "3") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "bsum_positive1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                              (rule "selectOfStore" (formula "2") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfCreate" (formula "20") (term "0,0,1,1,0,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "17")))
                              (rule "castDel" (formula "20") (term "1,0,0,1,1,0,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "eqSymm" (formula "20") (term "0,0,1,1,0,2,0,1,0,0,1"))
                              (rule "selectOfStore" (formula "3") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "bsum_positive1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                              (rule "selectOfStore" (formula "2") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "selectOfStore" (formula "20") (term "2,2,2,2,0,1,0,0,1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "castDel" (formula "20") (term "1,2,2,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "20") (term "1,0,2,2,2,2,0,1,0,0,1"))
                              (rule "eqSymm" (formula "20") (term "0,0,2,2,2,2,0,1,0,0,1"))
                              (rule "selectOfCreate" (formula "3") (term "0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "17")))
                              (rule "castDel" (formula "3") (term "1,0,0,0,0,2,0"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "9")))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "13") (term "1") (ifseqformula "3"))
                              (rule "selectOfCreate" (formula "2") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "16")))
                              (rule "castDel" (formula "2") (term "1,0,0,0,0"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "9")))
                              (rule "polySimp_homoEq" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "allRight" (formula "19") (inst "sk=f_2"))
                              (rule "allRight" (formula "19") (inst "sk=o_2"))
                              (rule "orRight" (formula "19"))
                              (rule "orRight" (formula "19"))
                              (rule "orRight" (formula "19"))
                              (rule "replace_known_right" (formula "22") (term "0,2,2,1") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "19")))
                              (rule "eqSymm" (formula "22"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "15") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "selectOfCreate" (formula "21") (term "2,1"))
                              (rule "castDel" (formula "21") (term "1,2,1"))
                              (rule "eqSymm" (formula "21") (term "0,0,0,2,1"))
                              (rule "eqSymm" (formula "21"))
                              (rule "replace_known_right" (formula "21") (term "0,1,0,0,2,0") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "closeTrue" (formula "21"))
                           )
                           (branch "Null Reference (r_5 = null)"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Null Reference (r_4 = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Null Reference (r_4 = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "choices[i_0] = 1 FALSE"
                     (rule "compound_int_cast_expression" (formula "17") (term "1") (inst "#v=x"))
                     (rule "variableDeclarationAssign" (formula "17") (term "1"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_9"))
                     (rule "remove_parentheses_right" (formula "17") (term "1"))
                     (rule "assignmentAdditionInt" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "translateJavaAddInt" (formula "17") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "17") (term "0,1,0"))
                     (rule "widening_identity_cast_5" (formula "17") (term "1"))
                     (rule "assignment" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "tryEmpty" (formula "17") (term "1"))
                     (rule "methodCallEmpty" (formula "17") (term "1"))
                     (rule "emptyModality" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                     (rule "eqSymm" (formula "17") (term "1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0,1,1"))
                     (rule "add_literals" (formula "17") (term "0,0,1,1"))
                     (rule "add_zero_left" (formula "17") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "17") (term "1,1"))
                     (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1,1"))
                     (rule "add_literals" (formula "17") (term "1,0,1,1"))
                     (rule "times_zero_1" (formula "17") (term "0,1,1"))
                     (rule "add_zero_left" (formula "17") (term "1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                     (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1"))
                     (rule "add_literals" (formula "17") (term "1,0,1"))
                     (rule "times_zero_1" (formula "17") (term "0,1"))
                     (rule "qeq_literals" (formula "17") (term "1"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "bsum_positive1" (formula "17") (term "0,1,0,0"))
                     (rule "bsum_induction_upper_concrete" (formula "18") (term "0,1,0"))
                     (rule "polySimp_homoEq" (formula "18") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "18") (term "1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,1,0"))
                     (rule "replace_known_left" (formula "18") (term "0,0,0,1,0,1,0") (ifseqformula "7"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "18") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                     (rule "pullOutbsum1" (formula "1") (inst "sk=sk_2"))
                     (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "19") (term "1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                     (rule "bsum_positive1" (formula "19") (term "0,1,0"))
                     (rule "bsum_positive1" (formula "2") (term "0"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                     (rule "bsum_induction_upper_concrete" (formula "2") (term "0"))
                     (rule "polySimp_homoEq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,1,0"))
                     (rule "replace_known_left" (formula "2") (term "0,0,0,1,0") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "pullOutbsum1" (formula "1") (inst "sk=sk_3"))
                     (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "1"))
                     (rule "polySimp_homoEq" (formula "21") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "21") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                     (rule "bsum_positive1" (formula "3") (term "0"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "22") (term "0,0,0") (ifseqformula "11"))
                     (rule "leq_literals" (formula "22") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "selectOfAnon" (formula "4") (term "0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "19")))
                     (rule "bsum_positive1" (formula "4") (term "0"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "selectOfAnon" (formula "1") (term "0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "selectOfAnon" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "4")))
                     (rule "true_left" (formula "3"))
                     (rule "selectOfStore" (formula "22") (term "1,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "castDel" (formula "22") (term "1,1,1,0,0,1"))
                     (rule "eqSymm" (formula "22") (term "1,0,1,1,0,0,1"))
                     (rule "eqSymm" (formula "22") (term "0,0,1,1,0,0,1"))
                     (rule "eqSymm" (formula "22") (term "1,0,0,1"))
                     (rule "selectOfStore" (formula "4") (term "2,0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "bsum_positive1" (formula "4") (term "0"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "elementOfUnion" (formula "3") (term "0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "ifthenelse_negated" (formula "3") (term "0,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0,2,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "ifthenelse_negated" (formula "1") (term "0,0,2,0"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "selectOfStore" (formula "23") (term "0,0,1,1,0,0,0,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "selectOfStore" (formula "5") (term "2,0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "bsum_positive1" (formula "5") (term "0"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "selectOfStore" (formula "4") (term "2,0,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "5")))
                     (rule "true_left" (formula "4"))
                     (rule "selectOfStore" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "selectOfStore" (formula "1") (term "0,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "selectOfStore" (formula "23") (term "2,0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "castDel" (formula "23") (term "1,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "23") (term "1,0,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "23") (term "0,0,2,0,1,0,0,1"))
                     (rule "elementOfUnion" (formula "5") (term "0,0,0,0,0,1,1"))
                     (rule "elementOfSingleton" (formula "5") (term "0,0,0,0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "bsum_positive1" (formula "5") (term "0"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "elementOfSingleton" (formula "6") (term "0,0,0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "ifthenelse_negated" (formula "6") (term "0,0,0,1,1"))
                     (rule "bsum_positive1" (formula "6") (term "0"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                     (rule "elementOfSingleton" (formula "5") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "ifthenelse_negated" (formula "5") (term "0,0,0"))
                     (rule "elementOfUnion" (formula "4") (term "0,0,0,0,0"))
                     (rule "elementOfSingleton" (formula "4") (term "1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "elementOfSingleton" (formula "4") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "ifthenelse_negated" (formula "4") (term "0,0,0"))
                     (rule "selectOfStore" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "selectOfStore" (formula "1") (term "1,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "selectOfStore" (formula "23") (term "0,0,1,1,0,0,0,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "selectOfAnon" (formula "5") (term "0,0,2,0"))
                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "20")))
                     (rule "bsum_positive1" (formula "5") (term "0"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "selectOfStore" (formula "4") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "selectOfStore" (formula "3") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                     (rule "true_left" (formula "3"))
                     (rule "selectOfStore" (formula "1") (term "1,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "selectOfAnon" (formula "22") (term "1,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "eqSymm" (formula "22") (term "1,0,0,1"))
                     (rule "selectOfStore" (formula "4") (term "0,0,1,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "bsum_positive1" (formula "4") (term "0"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "selectOfStore" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "selectOfStore" (formula "1") (term "1,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "selectOfAnon" (formula "23") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "18")))
                     (rule "selectOfStore" (formula "5") (term "0,0,1,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "bsum_positive1" (formula "5") (term "0"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "selectOfStore" (formula "4") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "selectOfStore" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "selectOfCreate" (formula "1") (term "1,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "selectOfStore" (formula "23") (term "0,0,1,1,0,0,0,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "selectOfStore" (formula "5") (term "2,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "bsum_positive1" (formula "5") (term "0"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "selectOfStore" (formula "4") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "selectOfCreate" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "19")))
                     (rule "castDel" (formula "3") (term "1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "11")))
                     (rule "selectOfStore" (formula "1") (term "0,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "selectOfStore" (formula "24") (term "0,0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "selectOfStore" (formula "6") (term "0,0,1,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "bsum_positive1" (formula "6") (term "0"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "selectOfStore" (formula "5") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "selectOfStore" (formula "4") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "selectOfStore" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "selectOfStore" (formula "1") (term "0,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "selectOfStore" (formula "24") (term "2,0,0,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "selectOfCreate" (formula "6") (term "0,0,1,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "19")))
                     (rule "castDel" (formula "6") (term "1,0,0,1,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "11")))
                     (rule "bsum_positive1" (formula "6") (term "0"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "selectOfStore" (formula "5") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "selectOfCreate" (formula "4") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")))
                     (rule "selectOfCreate" (formula "3") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")) (ifInst ""  (formula "23")))
                     (rule "inEqSimp_commuteLeq" (formula "3"))
                     (rule "selectOfCreate" (formula "1") (term "0,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                     (rule "castDel" (formula "1") (term "1,0,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "18"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                     (rule "bsum_positive1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "elementOfUnion" (formula "23") (term "0,0,0,0,1,0,0,1"))
                     (rule "elementOfSingleton" (formula "23") (term "1,0,0,0,0,1,0,0,1"))
                     (rule "elementOfSingleton" (formula "23") (term "0,0,0,0,0,1,0,0,1"))
                     (rule "selectOfStore" (formula "23") (term "0,0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "selectOfStore" (formula "6") (term "0,0,0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "bsum_positive1" (formula "6") (term "0"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "selectOfStore" (formula "5") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "selectOfStore" (formula "4") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "selectOfStore" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "selectOfAnon" (formula "24") (term "1,1,1,0"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "19")))
                     (rule "polySimp_homoEq" (formula "24") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                     (rule "applyEq" (formula "24") (term "1,1,0,1,0") (ifseqformula "18"))
                     (rule "polySimp_sepPosMonomial" (formula "24") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "24") (term "0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,1,1,0"))
                     (rule "selectOfStore" (formula "7") (term "1,0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "bsum_positive1" (formula "7") (term "0"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "selectOfStore" (formula "6") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "selectOfCreate" (formula "5") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "20")))
                     (rule "selectOfCreate" (formula "4") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "20")))
                     (rule "selectOfCreate" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "20")))
                     (rule "castDel" (formula "3") (term "1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "13")) (ifInst ""  (formula "23")))
                     (rule "inEqSimp_commuteLeq" (formula "3"))
                     (rule "selectOfStore" (formula "24") (term "2,0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "castDel" (formula "24") (term "1,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "24") (term "1,0,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "24") (term "0,0,2,0,1,0,0,1"))
                     (rule "selectOfStore" (formula "7") (term "2,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "bsum_positive1" (formula "7") (term "0"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "selectOfStore" (formula "6") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "selectOfStore" (formula "5") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "6")))
                     (rule "true_left" (formula "5"))
                     (rule "selectOfStore" (formula "4") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "selectOfStore" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "selectOfStore" (formula "23") (term "0,0,1,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "selectOfStore" (formula "6") (term "0,0,0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "bsum_positive1" (formula "6") (term "0"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "selectOfStore" (formula "5") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "selectOfStore" (formula "4") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "selectOfCreate" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "18")))
                     (rule "castDel" (formula "3") (term "1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "11")) (ifInst ""  (formula "21")))
                     (rule "inEqSimp_commuteLeq" (formula "3"))
                     (rule "selectOfStore" (formula "22") (term "2,0,1,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "selectOfCreate" (formula "5") (term "1,0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "17")))
                     (rule "bsum_positive1" (formula "5") (term "0"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "selectOfCreate" (formula "4") (term "1,0,0,0"))
                     (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "17")))
                     (rule "selectOfStore" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                     (rule "true_left" (formula "3"))
                     (rule "selectOfStore" (formula "21") (term "0,0,1,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "elementOfUnion" (formula "4") (term "0,0,0,2,0"))
                     (rule "elementOfSingleton" (formula "4") (term "0,0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "elementOfSingleton" (formula "4") (term "0,0,0,2,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "bsum_positive1" (formula "4") (term "0"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "selectOfCreate" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "17")))
                     (rule "castDel" (formula "3") (term "1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "10")) (ifInst ""  (formula "20")))
                     (rule "inEqSimp_commuteLeq" (formula "3"))
                     (rule "selectOfStore" (formula "21") (term "0,0,1,0,0,1,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "selectOfStore" (formula "4") (term "0,0,0,0,0,1,1"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "bsum_positive1" (formula "4") (term "0"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "selectOfStore" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                     (rule "true_left" (formula "3"))
                     (rule "selectOfAnon" (formula "21") (term "0,0,1,1,1,0"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")))
                     (rule "selectOfStore" (formula "4") (term "0,0,2,0"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "bsum_positive1" (formula "4") (term "0"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "selectOfCreate" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "16")))
                     (rule "castDel" (formula "3") (term "1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "9")) (ifInst ""  (formula "19")))
                     (rule "inEqSimp_commuteLeq" (formula "3"))
                     (rule "selectOfStore" (formula "20") (term "0,0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "selectOfCreate" (formula "3") (term "0,0,2,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "15")))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                     (rule "polySimp_homoEq" (formula "3"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "selectOfCreate" (formula "20") (term "0,0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "15")))
                     (rule "castDel" (formula "20") (term "0,0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "selectOfCreate" (formula "3") (term "0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "15")))
                     (rule "castDel" (formula "3") (term "1,0,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "8")) (ifInst ""  (formula "18")))
                     (rule "polySimp_homoEq" (formula "3"))
                     (rule "times_zero_2" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "polySimp_sepNegMonomial" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                     (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "applyEq" (formula "12") (term "1") (ifseqformula "3"))
                     (rule "selectOfStore" (formula "19") (term "0,0,1,0,0,0,1,1,1,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "elementOfUnion" (formula "19") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "19") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "elementOfSingleton" (formula "19") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfStore" (formula "19") (term "0,0,1,0,0,0,1,1,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfStore" (formula "19") (term "0,0,1,1,0,0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfStore" (formula "19") (term "2,2,1,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "castDel" (formula "19") (term "1,2,2,1,1,0,0,1"))
                     (rule "eqSymm" (formula "19") (term "1,0,2,2,1,1,0,0,1"))
                     (rule "eqSymm" (formula "19") (term "0,0,2,2,1,1,0,0,1"))
                     (rule "selectOfStore" (formula "19") (term "0,0,1,1,0,0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfCreate" (formula "19") (term "0,0,1,1,0,0,0,1"))
                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                     (rule "castDel" (formula "19") (term "1,0,0,1,1,0,0,0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "eqSymm" (formula "19") (term "0,0,1,1,0,0,0,1"))
                     (rule "selectOfCreate" (formula "19") (term "2,2,2,1,1,0,0,1"))
                     (rule "castDel" (formula "19") (term "1,2,2,2,1,1,0,0,1"))
                     (rule "eqSymm" (formula "19") (term "0,0,0,2,2,2,1,1,0,0,1"))
                     (rule "replace_known_right" (formula "19") (term "0,1,0,0,2,2,2,1,1,0,0,1") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "elementOfUnion" (formula "19") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "19") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "elementOfSingleton" (formula "19") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "polySimp_homoEq" (formula "19") (term "0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "19") (term "0,0,0"))
                     (rule "add_literals" (formula "19") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "19") (term "0,0,0"))
                     (rule "add_zero_left" (formula "19") (term "0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "equal_literals" (formula "19") (term "1,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfStore" (formula "19") (term "2,2,0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "castDel" (formula "19") (term "1,2,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "19") (term "1,0,2,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "19") (term "0,0,2,2,0,1,0,0,1"))
                     (rule "selectOfStore" (formula "19") (term "0,0,1,1,0,0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfStore" (formula "19") (term "0,0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfStore" (formula "19") (term "2,0,0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfStore" (formula "19") (term "2,2,2,0,1,0,0,1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "castDel" (formula "19") (term "1,2,2,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "19") (term "0,0,2,2,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "19") (term "1,0,2,2,2,0,1,0,0,1"))
                     (rule "selectOfCreate" (formula "19") (term "0,0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")))
                     (rule "castDel" (formula "19") (term "1,0,0,1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "8")))
                     (rule "elementOfUnion" (formula "19") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "19") (term "1,0,0,0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "elementOfSingleton" (formula "19") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfCreate" (formula "19") (term "2,2,2,2,0,1,0,0,1"))
                     (rule "castDel" (formula "19") (term "1,2,2,2,2,0,1,0,0,1"))
                     (rule "eqSymm" (formula "19") (term "0,0,0,2,2,2,2,0,1,0,0,1"))
                     (rule "replace_known_right" (formula "19") (term "0,1,0,0,2,2,2,2,0,1,0,0,1") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "eqSymm" (formula "19") (term "1,1,0,0,1"))
                     (rule "selectOfStore" (formula "19") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfStore" (formula "19") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "selectOfCreate" (formula "19") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "14")) (ifInst ""  (formula "18")))
                     (rule "allRight" (formula "19") (inst "sk=f_1"))
                     (rule "allRight" (formula "19") (inst "sk=o_1"))
                     (rule "orRight" (formula "19"))
                     (rule "orRight" (formula "19"))
                     (rule "orRight" (formula "21"))
                     (rule "orRight" (formula "19"))
                     (rule "notRight" (formula "22"))
                     (rule "replace_known_right" (formula "23") (term "0,2,2,0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "notRight" (formula "23"))
                     (rule "selectOfCreate" (formula "15") (term "0"))
                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")))
                     (rule "castDel" (formula "15") (term "1,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "orRight" (formula "15"))
                     (rule "eqSymm" (formula "15"))
                     (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "15")))
                     (rule "eqSymm" (formula "25"))
                     (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "false_right" (formula "24"))
                     (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "false_right" (formula "23"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Null Reference (_choices = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (_choices != null, but i Out of Bounds!)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (builtin "One Step Simplification" (formula "16"))
               (rule "false_right" (formula "16"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (_choices = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (_choices = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Use Case"
      (builtin "One Step Simplification" (formula "9"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "variableDeclarationAssign" (formula "12") (term "1"))
      (rule "variableDeclaration" (formula "12") (term "1") (newnames "b_1"))
      (rule "blockEmpty" (formula "12") (term "1,0,1"))
      (rule "eqSymm" (formula "8"))
      (rule "commuteUnion" (formula "7") (term "1,0,0,0,2,1"))
      (rule "commuteUnion" (formula "7") (term "1,0,0"))
      (rule "commuteUnion" (formula "12") (term "1,0,1,1,0"))
      (rule "commuteUnion" (formula "8") (term "1,0,0,0,2,0"))
      (rule "commuteUnion" (formula "8") (term "1,0,1"))
      (rule "eqSymm" (formula "7"))
      (rule "inEqSimp_commuteLeq" (formula "6"))
      (rule "inEqSimp_commuteLeq" (formula "5"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "bsum_positive1" (formula "7") (term "0"))
      (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
      (rule "selectOfAnon" (formula "10") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfAnon" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "11")))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "selectOfAnon" (formula "10") (term "0"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")))
      (rule "selectOfAnon" (formula "7") (term "0"))
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "12")) (ifInst ""  (formula "8")))
      (rule "true_left" (formula "7"))
      (rule "selectOfStore" (formula "10") (term "0,0,1,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "elementOfUnion" (formula "8") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "8") (term "0,0,0,1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "elementOfSingleton" (formula "8") (term "0,0,1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "selectOfStore" (formula "7") (term "2,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "10") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfStore" (formula "12") (term "0,0,1,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "bsum_positive1" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "selectOfAnon" (formula "11") (term "0"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "13")))
      (rule "selectOfAnon" (formula "9") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "15")))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "selectOfStore" (formula "7") (term "2,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "10") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectOfAnon" (formula "12") (term "1"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "13")))
      (rule "bsum_positive1" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "elementOfUnion" (formula "11") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "11") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "selectOfStore" (formula "9") (term "2,0,0,2,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "selectOfStore" (formula "7") (term "2,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "castDel" (formula "7") (term "2,0"))
      (rule "selectOfStore" (formula "10") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfUnion" (formula "12") (term "0,0,1"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "bsum_positive1" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "elementOfSingleton" (formula "13") (term "0,0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "elementOfSingleton" (formula "12") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
      (rule "true_left" (formula "12"))
      (rule "bsum_positive1" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "selectOfStore" (formula "9") (term "2,0,0,2,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "selectOfStore" (formula "7") (term "0,0,1,0,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "selectOfStore" (formula "10") (term "2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "elementOfUnion" (formula "12") (term "0,0,0,0,2,0"))
      (rule "bsum_positive1" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "bsum_positive1" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "elementOfSingleton" (formula "12") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "ifthenelse_negated" (formula "12") (term "0,0,2,0"))
      (rule "bsum_positive1" (formula "12") (term "0"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
      (rule "selectOfStore" (formula "9") (term "2,0,0,2,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "bsum_positive1" (formula "9") (term "0"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
      (rule "elementOfUnion" (formula "7") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "7") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "elementOfSingleton" (formula "7") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "8")))
      (rule "true_left" (formula "7"))
      (rule "elementOfUnion" (formula "9") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "9") (term "0,0,0,0"))
      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "10")))
      (rule "true_left" (formula "9"))
      (rule "selectOfStore" (formula "10") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "elementOfUnion" (formula "8") (term "0,0,0,0,2,0"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "elementOfSingleton" (formula "8") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "ifthenelse_negated" (formula "8") (term "0,0,2,0"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "selectOfCreate" (formula "10") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")))
      (rule "castDel" (formula "10") (term "1,0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfStore" (formula "8") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "selectOfStore" (formula "10") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfStore" (formula "8") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "selectOfStore" (formula "10") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfStore" (formula "8") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "selectOfStore" (formula "10") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfCreate" (formula "8") (term "0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "11")))
      (rule "castDel" (formula "8") (term "1,0,0,0,0,2,0"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "selectOfCreate" (formula "10") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")))
      (rule "bsum_positive1" (formula "10") (term "0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
      (rule "selectOfCreate" (formula "8") (term "0,0,2,0"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "11")))
      (rule "bsum_positive1" (formula "8") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x"))
      (rule "assignment" (formula "14") (term "1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_1"))
      (rule "assignment_read_length" (formula "14"))
      (branch "Normal Execution (_choices != null)"
         (builtin "One Step Simplification" (formula "14"))
         (rule "less_than_comparison_simple" (formula "14") (term "1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1,0"))
         (rule "methodCallEmpty" (formula "14") (term "1"))
         (rule "emptyModality" (formula "14") (term "1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "impRight" (formula "14"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "11"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
         (rule "inEqSimp_homoInEq1" (formula "7"))
         (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
         (rule "add_literals" (formula "7") (term "1,0"))
         (rule "times_zero_1" (formula "7") (term "0"))
         (rule "leq_literals" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "methodCallReturn" (formula "14") (term "1"))
         (rule "assignment" (formula "14") (term "1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "methodCallEmpty" (formula "14") (term "1"))
         (rule "tryEmpty" (formula "14") (term "1"))
         (rule "emptyModality" (formula "14") (term "1"))
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")) (ifInst ""  (formula "11")))
         (rule "eqSymm" (formula "14") (term "1,0,0,1"))
         (rule "applyEq" (formula "14") (term "1,0,1,0") (ifseqformula "6"))
         (rule "applyEq" (formula "14") (term "1,0,0,0") (ifseqformula "6"))
         (rule "bsum_positive1" (formula "14") (term "0,1,0"))
         (rule "bsum_positive1" (formula "15") (term "0,0,0"))
         (rule "pullOutbsum1" (formula "2") (inst "sk=sk_0"))
         (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "2"))
         (rule "eqSymm" (formula "17") (term "1,0"))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "pullOutbsum1" (formula "1") (inst "sk=sk_1"))
         (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "1"))
         (rule "eqSymm" (formula "18") (term "0,0"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "selectOfAnon" (formula "18") (term "0,1,0,0,1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "selectOfAnon" (formula "3") (term "0,0,2,0"))
         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "17")))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "selectOfAnon" (formula "1") (term "0,0,2,0"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "selectOfStore" (formula "18") (term "0,0,1,1,0,0,1,0,0,1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "elementOfUnion" (formula "3") (term "0,0,0,0,2,0"))
         (rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "elementOfSingleton" (formula "3") (term "0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "ifthenelse_negated" (formula "3") (term "0,0,2,0"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "selectOfStore" (formula "1") (term "2,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "selectOfAnon" (formula "18") (term "0,0,0"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
         (rule "selectOfStore" (formula "3") (term "0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "elementOfUnion" (formula "1") (term "0,0,0,0,2,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "ifthenelse_negated" (formula "1") (term "0,0,2,0"))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "elementOfUnion" (formula "18") (term "0,0,0,0,0"))
         (rule "elementOfSingleton" (formula "18") (term "1,0,0,0,0,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "selectOfStore" (formula "3") (term "1,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "selectOfStore" (formula "1") (term "1,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "selectOfAnon" (formula "18") (term "0,1,0"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")))
         (rule "selectOfStore" (formula "3") (term "0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "selectOfStore" (formula "1") (term "1,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "selectOfStore" (formula "18") (term "2,0,1,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "selectOfStore" (formula "3") (term "0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "selectOfStore" (formula "1") (term "0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "selectOfStore" (formula "18") (term "2,0,1,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "castDel" (formula "18") (term "2,0,1,0"))
         (rule "selectOfStore" (formula "3") (term "1,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "selectOfCreate" (formula "1") (term "1,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "selectOfStore" (formula "18") (term "2,0,1,0,0,1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "castDel" (formula "18") (term "1,2,0,1,0,0,1"))
         (rule "eqSymm" (formula "18") (term "0,0,2,0,1,0,0,1"))
         (rule "eqSymm" (formula "18") (term "1,0,2,0,1,0,0,1"))
         (rule "selectOfStore" (formula "3") (term "1,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "selectOfStore" (formula "1") (term "0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "elementOfUnion" (formula "18") (term "0,0,0,1,0"))
         (rule "elementOfSingleton" (formula "18") (term "0,0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "selectOfCreate" (formula "3") (term "1,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "15")))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "selectOfStore" (formula "1") (term "0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "bsum_positive1" (formula "1") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "elementOfUnion" (formula "18") (term "0,0,0,0,1,0,0,1"))
         (rule "elementOfSingleton" (formula "18") (term "1,0,0,0,0,1,0,0,1"))
         (rule "elementOfSingleton" (formula "18") (term "0,0,0,0,0,1,0,0,1"))
         (rule "selectOfStore" (formula "18") (term "2,2,0,1,0,0,1"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "castDel" (formula "18") (term "1,2,2,0,1,0,0,1"))
         (rule "eqSymm" (formula "18") (term "1,0,2,2,0,1,0,0,1"))
         (rule "eqSymm" (formula "18") (term "0,0,2,2,0,1,0,0,1"))
         (rule "selectOfCreate" (formula "3") (term "0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "15")))
         (rule "castDel" (formula "3") (term "1,0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "7")))
         (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
         (rule "eqSymm" (formula "14"))
         (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
         (rule "bsum_positive1" (formula "3") (term "0"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "selectOfCreate" (formula "1") (term "0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
         (rule "castDel" (formula "1") (term "1,0,0,0,0,2,0"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
         (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "allRight" (formula "17") (inst "sk=f_0"))
         (rule "allRight" (formula "17") (inst "sk=o_0"))
         (rule "orRight" (formula "17"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
         (rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
         (rule "selectOfStore" (formula "17") (term "0,0,1,1,0,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "selectOfStore" (formula "17") (term "0,0,1,1,0,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "selectOfStore" (formula "17") (term "2,2,2,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "castDel" (formula "17") (term "1,2,2,2,0"))
         (rule "eqSymm" (formula "17") (term "1,0,2,2,2,0"))
         (rule "eqSymm" (formula "17") (term "0,0,2,2,2,0"))
         (rule "selectOfCreate" (formula "17") (term "2,2,2,2,0"))
         (rule "castDel" (formula "17") (term "1,2,2,2,2,0"))
         (rule "eqSymm" (formula "17") (term "0,0,0,2,2,2,2,0"))
         (rule "replace_known_right" (formula "17") (term "0,1,0,0,2,2,2,2,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "selectOfCreate" (formula "17") (term "0,0,1,1,0,0"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")))
         (rule "castDel" (formula "17") (term "1,0,0,1,1,0,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "eqSymm" (formula "17") (term "0,0,1,1,0,0"))
         (rule "commute_and" (formula "17") (term "0,2,2,0"))
         (rule "commute_and" (formula "17") (term "0,2,0"))
         (rule "commute_and" (formula "17") (term "0,2,2,2,2,0"))
         (rule "commute_and" (formula "17") (term "0,2,2,2,0"))
         (rule "commute_and" (formula "17") (term "0,0,0,0,0"))
         (rule "commute_and" (formula "17") (term "1,0,0,0,0"))
         (rule "cnf_rightDist" (formula "17") (term "0,0,0,0"))
         (rule "commute_or" (formula "17") (term "0,0,0,0,0"))
         (rule "cnf_rightDist" (formula "17") (term "1,0,0,0,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "commute_or" (formula "17") (term "0,1,0,0,0,0"))
         (rule "commute_and" (formula "17") (term "1,0,0,0,0"))
         (rule "cnf_rightDist" (formula "17") (term "0,0,0,0,0"))
         (rule "commute_or" (formula "17") (term "1,0,0,0,0,0"))
         (rule "shift_paren_and" (formula "17") (term "0,0,0,0"))
         (rule "commute_and_2" (formula "17") (term "0,0,0,0,0"))
         (rule "commute_and_2" (formula "17") (term "0,0,0"))
         (rule "commute_and" (formula "17") (term "0,0,0,0,0,0"))
         (rule "commute_and_2" (formula "17") (term "0,0,0,0"))
         (rule "commute_and_2" (formula "17") (term "0,0,0,0,0"))
         (rule "commute_and" (formula "17") (term "0,0,0,0,0,0"))
         (rule "arrayLengthIsAShort" (formula "10") (term "0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "arrayLengthNotNegative" (formula "10") (term "0"))
         (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
         (rule "cut_direct" (formula "16") (term "0,0"))
         (branch "CUT: o_0 = null TRUE"
            (builtin "One Step Simplification" (formula "17"))
            (rule "false_right" (formula "17"))
            (rule "replace_known_left" (formula "17") (term "0,0,1,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "applyEq" (formula "17") (term "0,1,1,0,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "17") (term "1,1,0,0"))
            (rule "replace_known_right" (formula "17") (term "1,1,0,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "applyEq" (formula "17") (term "0,1,0,2,2,2,2,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "17") (term "1,0,2,2,2,2,0"))
            (rule "replace_known_right" (formula "17") (term "1,0,2,2,2,2,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "applyEq" (formula "17") (term "0,1,0,2,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "17") (term "1,0,2,0"))
            (rule "replace_known_right" (formula "17") (term "1,0,2,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "applyEqRigid" (formula "17") (term "0,1,0,2,2,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "17") (term "1,0,2,2,0"))
            (rule "replace_known_right" (formula "17") (term "1,0,2,2,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "applyEq" (formula "17") (term "0,1,0,2,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "17") (term "1,0,2,0"))
            (rule "replace_known_right" (formula "17") (term "1,0,2,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "orRight" (formula "17"))
            (rule "notRight" (formula "17"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
            (rule "close" (formula "17") (ifseqformula "3"))
         )
         (branch "CUT: o_0 = null FALSE"
            (builtin "One Step Simplification" (formula "17"))
            (rule "notRight" (formula "17"))
            (rule "replace_known_left" (formula "18") (term "1,0,1,1,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
            (rule "ifthenelse_split" (formula "18") (term "2,2,2,0"))
            (branch "f_0 = votesForA & o_0 = r_2 TRUE"
               (builtin "One Step Simplification" (formula "19"))
               (rule "andLeft" (formula "1"))
               (rule "replace_known_left" (formula "20") (term "1,1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
               (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "2"))
               (rule "applyEqRigid" (formula "20") (term "0,0,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
               (rule "close" (formula "17") (ifseqformula "3"))
            )
            (branch "f_0 = votesForA & o_0 = r_2 FALSE"
               (rule "ifthenelse_split" (formula "19") (term "2,2,2,0"))
               (branch "f_0 = <created> & o_0 = r_2 TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "replace_known_left" (formula "21") (term "1,1,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                  (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "false_right" (formula "20"))
                  (rule "applyEq" (formula "20") (term "0,0,2,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "eqSymm" (formula "20"))
                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                  (rule "close" (formula "17") (ifseqformula "3"))
               )
               (branch "f_0 = <created> & o_0 = r_2 FALSE"
                  (rule "ifthenelse_split" (formula "20") (term "2,0"))
                  (branch "f_0 = <initialized> & o_0 = r_2 TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "replace_known_left" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")))
                     (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "replace_known_right" (formula "22") (term "0,1,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "2"))
                     (rule "applyEqRigid" (formula "22") (term "0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "eqSymm" (formula "22"))
                     (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "false_right" (formula "21"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "false_right" (formula "20"))
                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                     (rule "close" (formula "17") (ifseqformula "3"))
                  )
                  (branch "f_0 = <initialized> & o_0 = r_2 FALSE"
                     (rule "ifthenelse_split" (formula "21") (term "2,0"))
                     (branch "f_0 = votesForB & o_0 = r_2 TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "replace_known_left" (formula "23") (term "1,1,0,0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "1")) (ifInst ""  (formula "2")))
                        (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "false_right" (formula "21"))
                        (rule "applyEq" (formula "22") (term "2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "22") (term "2,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "false_right" (formula "20"))
                        (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "false_right" (formula "20"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                        (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                        (rule "close" (formula "17") (ifseqformula "3"))
                     )
                     (branch "f_0 = votesForB & o_0 = r_2 FALSE"
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "orRight" (formula "22"))
                        (rule "notRight" (formula "22"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "18")))
                        (rule "false_right" (formula "24"))
                        (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")))
                        (rule "true_left" (formula "4"))
                        (rule "replace_known_left" (formula "3") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")))
                        (rule "true_left" (formula "3"))
                        (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
               )
            )
         )
      )
      (branch "Null Reference (_choices = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (r = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
   (rule "closeFalse" (formula "1"))
)
)

}
